var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AbstractValidationHandler.html",[0,0.213,1,3.251]],["body/classes/AbstractValidationHandler.html",[0,0.21,1,3.205,2,0.902,3,0.518,4,0.586,5,0.496,6,2.936,7,4.869,8,1.436,9,1.838,10,1.936,11,1.619,12,2.45,13,2.462,14,2.03,15,1.95,16,4.134,17,2.215,18,1.318,19,3.205,20,4.134,21,0.635,22,1.493,23,5.091,24,4.488,25,3.799,26,3.521,27,2.381,28,2.069,29,4.583,30,1.036,31,3.055,32,3.498,33,2.006,34,2.511,35,1.838,36,1.009,37,1.425,38,0.015,39,1.588,40,0.994,41,1.124,42,3.521,43,1.801,44,2.549,45,3.498,46,2.172,47,3.055,48,3.498,49,4.571,50,3.498,51,2.303,52,3.498,53,3.498,54,2.012,55,2.971,56,3.498,57,4.557,58,3.055,59,4.664,60,4.461,61,3.799,62,1.842,63,2,64,1.149,65,2.971,66,3.055,67,3.521,68,0.54,69,2.181,70,2.181,71,2.381,72,0.627,73,1.554,74,1.369,75,1.369,76,1.369,77,1.369,78,1.508,79,2.381,80,2.381,81,2.381,82,1.308,83,1.016,84,2.462,85,2.456,86,3.498,87,2.381,88,2.381,89,2.022,90,2.381,91,2.381,92,2.381,93,0.803,94,2.381,95,2.381,96,2.381,97,1.889,98,4.571,99,2.381,100,4.571,101,2.381,102,2.381,103,2.381,104,0.932,105,4.147,106,2.381,107,2.381,108,2.381,109,2.022,110,0.714,111,2.381,112,2.022,113,1.889,114,2.381,115,0.008,116,0.008]],["title/classes/DateTimeProvider.html",[0,0.213,117,3.251]],["body/classes/DateTimeProvider.html",[0,0.304,2,1.564,3,0.897,4,1.015,5,0.86,10,2.047,21,1.1,22,2.166,30,1.151,38,0.015,43,2,68,0.936,72,0.768,104,1.353,110,1.798,115,0.012,116,0.012,117,5.036,118,6.115,119,3.869,120,4.592,121,5.394,122,5.296,123,6.379,124,5.296,125,2.544,126,2.081,127,1.692,128,4.128,129,3.078,130,4.592]],["title/injectables/DefaultHashHandler.html",[126,1.455,131,3.948]],["body/injectables/DefaultHashHandler.html",[0,0.168,3,0.61,4,0.691,5,0.585,6,2.972,8,1.693,10,1.327,20,3.344,21,0.748,22,1.68,25,3.607,27,3.938,28,2.139,29,3.862,30,1.031,37,1.418,38,0.016,39,1.418,40,0.989,41,1.119,42,2.384,43,1.792,44,1.822,68,1.031,72,0.425,85,2.946,89,2.384,104,1.384,109,2.384,110,1.557,115,0.009,116,0.009,125,2.105,126,1.151,127,1.151,131,3.123,132,2.384,133,4.93,134,5.051,135,5.051,136,3.602,137,4.38,138,5.059,139,3.602,140,2.572,141,4.38,142,3.602,143,5.775,144,3.938,145,2.384,146,4.166,147,3.123,148,2.808,149,3.123,150,3.123,151,3.123,152,3.123,153,2.808,154,1.778,155,2.808,156,3.123,157,3.938,158,3.123,159,2.384,160,2.384,161,3.123,162,3.032,163,2.572,164,3.123,165,4.38,166,3.123,167,1.9,168,3.123,169,3.123,170,3.123,171,5.059,172,3.123,173,3.123,174,5.059,175,3.123,176,3.123,177,3.123,178,3.123,179,3.123,180,3.123,181,4.693,182,3.124,183,4.38,184,4.38,185,3.123,186,3.123,187,3.123,188,3.123,189,3.123,190,4.38,191,3.123,192,3.123,193,3.123]],["title/interceptors/DefaultOAuthInterceptor.html",[194,3.948,195,3.549]],["body/interceptors/DefaultOAuthInterceptor.html",[0,0.177,3,0.643,4,0.728,5,0.617,14,1.314,21,0.789,22,1.743,28,1.078,30,0.926,37,1.274,38,0.015,39,1.274,40,0.888,41,1.241,43,1.166,55,3.468,68,1.271,72,0.447,84,3.292,85,2.433,93,0.997,104,1.495,115,0.01,116,0.01,126,1.674,127,1.213,162,1.973,195,4.084,196,3.291,197,6,198,3.796,199,6,200,2.349,201,3.796,202,2.43,203,5.203,204,4.282,205,5.203,206,3.76,207,3.796,208,3.291,209,5.61,210,5.292,211,5.61,212,3.796,213,5.203,214,3.972,215,3.291,216,4.543,217,2.206,218,4.543,219,2.711,220,5.24,221,3.796,222,2.462,223,2.959,224,3.796,225,4.543,226,3.796,227,2.959,228,0.923,229,1.97,230,2.348,231,2.723,232,2.959,233,2.711,234,2.9,235,3.291,236,1.555,237,3.796,238,3.796,239,3.291,240,3.796,241,3.796,242,1.037,243,3.291,244,3.291,245,3.291,246,3.291,247,3.291,248,3.468,249,3.291,250,5.24,251,5.24,252,4.543,253,3.796,254,1.577,255,3.796,256,3.796,257,2.959,258,2.206,259,3.796,260,3.796,261,3.796,262,3.796,263,3.796,264,3.796,265,3.291,266,4.543,267,3.796,268,3.291]],["title/classes/HMAC.html",[0,0.213,269,3.251]],["body/classes/HMAC.html",[2,0.626,3,0.82,4,0.406,5,0.344,6,2.982,13,1.162,18,0.476,21,0.44,22,1.127,30,1.087,33,1.733,35,1.734,37,1.029,38,0.016,39,1.029,40,0.896,41,0.812,43,1.3,72,0.499,85,2.62,93,0.557,97,2.618,104,0.88,110,1.439,113,1.31,115,0.006,116,0.006,125,2.615,140,3.023,154,2.388,159,2.242,160,2.242,162,3.822,167,1.592,181,1.402,182,3.271,200,0.949,269,4.029,270,4.531,271,1.513,272,1.274,273,3.3,274,3.3,275,4.194,276,4.587,277,2.937,278,3.3,279,2.419,280,2.118,281,5.358,282,2.118,283,2.416,284,1.329,285,2.118,286,2.118,287,2.118,288,2.118,289,2.118,290,0.995,291,2.118,292,2.937,293,2.118,294,2.902,295,2.118,296,1.837,297,2.118,298,2.419,299,4.398,300,1.651,301,1.837,302,1.513,303,2.641,304,1.651,305,1.651,306,1.651,307,1.651,308,1.651,309,1.651,310,1.651,311,1.651,312,1.651,313,1.651,314,1.651,315,1.651,316,1.651,317,1.651,318,1.651,319,1.651,320,1.651,321,1.651,322,1.651,323,1.651,324,1.651,325,1.651,326,1.651,327,1.651,328,1.651,329,1.651,330,1.651,331,1.651,332,1.651,333,1.651,334,1.651,335,1.651,336,1.651,337,1.651,338,1.651,339,1.651,340,1.651,341,1.651,342,1.651,343,1.651,344,1.651,345,1.651,346,1.651,347,1.651,348,1.651,349,1.651,350,1.651,351,1.651,352,1.651,353,1.651,354,1.651,355,1.651,356,1.651,357,1.651,358,1.651,359,1.651,360,1.651,361,1.651,362,1.651,363,1.651,364,1.651,365,1.651,366,1.651,367,1.651,368,1.651,369,1.651,370,2.641,371,1.513,372,1.651,373,1.651,374,2.641,375,4.123,376,2.937,377,2.095,378,2.937,379,5.136,380,3.671,381,2.937,382,3.671,383,1.837,384,1.837,385,1.837,386,1.837,387,1.837,388,1.837,389,1.837,390,1.837,391,1.837,392,1.837,393,1.651,394,4.194,395,1.651,396,3.3,397,1.837,398,3.671,399,3.778,400,2.641,401,1.513,402,1.837,403,1.651,404,1.651,405,4.194,406,2.937,407,2.937,408,4.892,409,3.671,410,3.671,411,2.937,412,2.937,413,1.837,414,0.831,415,2.937,416,1.837,417,0.831,418,2.937,419,3.671,420,1.837,421,1.837,422,4.194,423,1.837,424,4.587,425,4.194,426,6.176,427,5.136,428,3.454,429,1.651,430,3.454,431,2.322,432,1.837,433,3.671,434,3.671,435,1.837,436,1.837,437,1.837,438,1.837,439,1.837,440,1.837,441,1.837,442,1.837,443,1.837,444,1.837,445,1.837,446,3.3,447,1.837,448,1.402,449,1.402,450,1.837,451,1.837,452,1.837,453,1.837,454,1.31,455,1.651,456,1.837,457,1.837,458,2.419,459,1.651,460,1.837,461,1.837,462,2.641,463,2.641,464,1.651,465,1.837,466,1.837,467,0.764,468,1.837,469,1.837,470,1.651,471,1.837,472,1.837,473,1.651,474,1.837,475,1.837,476,1.837,477,1.837,478,1.837,479,1.837,480,1.837,481,1.837,482,1.837,483,1.837,484,1.837,485,1.837,486,1.837,487,1.837,488,1.837]],["title/classes/Hash.html",[0,0.213,33,1.399]],["body/classes/Hash.html",[2,0.599,3,0.799,4,0.389,5,0.329,6,3.143,13,1.112,18,0.456,21,0.421,22,1.087,30,1.159,33,1.787,35,2.119,37,1.146,38,0.016,39,1.146,40,0.937,41,0.904,43,1.589,72,0.484,85,2.592,93,0.533,97,2.542,104,0.854,110,1.416,113,1.253,115,0.006,116,0.006,125,2.666,140,2.935,154,2.328,159,2.164,160,2.164,162,3.792,167,1.545,181,1.341,182,3.199,200,1.466,269,3.694,270,4.775,271,1.447,272,1.229,273,3.676,274,3.676,275,4.089,276,4.485,277,2.835,278,3.204,279,2.335,281,5.116,283,2.215,284,1.85,290,1.931,292,2.835,294,3.034,296,1.757,298,2.335,299,4.311,300,1.58,301,1.757,302,1.447,303,4.311,304,1.58,305,1.58,306,1.58,307,1.58,308,1.58,309,1.58,310,1.58,311,1.58,312,1.58,313,1.58,314,1.58,315,1.58,316,1.58,317,1.58,318,1.58,319,1.58,320,1.58,321,1.58,322,1.58,323,1.58,324,1.58,325,1.58,326,1.58,327,1.58,328,1.58,329,1.58,330,1.58,331,1.58,332,1.58,333,1.58,334,1.58,335,1.58,336,1.58,337,1.58,338,1.58,339,1.58,340,1.58,341,1.58,342,1.58,343,1.58,344,1.58,345,1.58,346,1.58,347,1.58,348,1.58,349,1.58,350,1.58,351,1.58,352,1.58,353,1.58,354,1.58,355,1.58,356,1.58,357,1.58,358,1.58,359,1.58,360,1.58,361,1.58,362,1.58,363,1.58,364,1.58,365,1.58,366,1.58,367,1.58,368,1.58,369,1.58,370,2.549,371,1.447,372,1.58,373,1.58,374,2.549,375,4.032,376,2.835,377,2.022,378,2.835,379,5.045,380,3.563,381,2.835,382,3.563,383,1.757,384,1.757,385,1.757,386,1.757,387,1.757,388,1.757,389,1.757,390,1.757,391,1.757,392,1.757,393,1.58,394,4.089,395,1.58,396,3.204,397,1.757,398,3.563,399,3.694,400,2.549,401,1.447,402,1.757,403,1.58,404,1.58,405,4.089,406,2.835,407,2.835,408,5.25,409,3.563,410,3.563,411,2.835,412,2.835,413,1.757,414,0.795,415,2.835,416,1.757,417,0.795,418,2.835,419,4.485,420,1.757,421,1.757,422,4.089,423,1.757,424,4.485,425,4.089,426,6.118,427,5.045,428,3.367,429,1.58,430,3.367,431,2.255,432,1.757,433,3.563,434,3.563,435,1.757,436,1.757,437,1.757,438,1.757,439,1.757,440,2.835,441,1.757,442,1.757,443,1.757,444,1.757,445,1.757,446,3.204,447,1.757,448,1.341,449,1.341,450,1.757,451,1.757,452,1.757,453,1.757,454,1.253,455,1.58,456,1.757,457,1.757,458,2.335,459,1.58,460,1.757,461,1.757,462,2.549,463,2.549,464,1.58,465,1.757,466,1.757,467,0.731,468,1.757,469,1.757,470,1.58,471,1.757,472,1.757,473,1.58,474,1.757,475,1.757,476,1.757,477,1.757,478,1.757,479,1.757,480,1.757,481,1.757,482,1.757,483,1.757,484,1.757,485,1.757,486,1.757,487,1.757,488,1.757,489,3.269,490,3.269,491,3.269,492,3.269,493,2.027,494,2.027,495,0.868,496,2.027,497,2.027,498,2.027,499,2.027,500,2.027,501,2.027,502,2.027,503,2.027,504,2.027]],["title/classes/HashHandler.html",[0,0.213,153,3.549]],["body/classes/HashHandler.html",[0,0.177,2,1.121,3,0.643,4,0.728,5,0.617,6,2.462,8,1.784,9,1.555,10,1.7,20,3.468,21,0.789,22,1.743,27,4.084,28,2.113,29,3.972,30,0.671,37,0.923,38,0.016,39,0.923,40,0.643,41,0.728,42,2.513,43,1.166,44,1.89,68,1.06,72,0.447,85,2.965,89,2.513,104,1.411,109,2.513,110,1.587,115,0.01,116,0.01,125,1.369,126,1.213,127,1.213,133,4.084,137,3.291,138,3.291,141,3.291,143,5.61,144,4.084,145,2.513,146,4.285,147,3.291,148,2.959,149,3.291,150,4.543,151,4.543,152,4.543,153,4.084,154,1.874,155,2.959,156,3.291,157,4.084,158,3.291,159,2.513,160,2.513,161,3.291,162,3.118,163,2.711,164,3.291,165,4.543,166,3.291,167,1.97,168,3.291,169,3.291,170,3.291,171,5.203,172,3.291,173,3.291,174,5.203,175,3.291,176,3.291,177,3.291,178,3.291,179,3.291,180,3.291,181,4.761,182,3.24,183,4.543,184,4.543,185,3.291,186,3.291,187,3.291,188,3.291,189,3.291,190,4.543,191,3.291,192,3.291,193,3.291,505,3.796]],["title/classes/JwksValidationHandler.html",[0,0.213,506,2.816]],["body/classes/JwksValidationHandler.html",[0,0.203,2,1.286,3,0.738,4,0.835,5,0.707,6,2.701,8,2.046,9,1.784,16,3.804,21,0.905,22,1.912,26,3.804,30,1.137,36,0.979,37,1.397,38,0.015,39,1.397,40,0.974,41,1.102,43,1.765,44,2.073,57,4.519,65,2.882,68,1.137,72,0.513,78,2.837,85,1.637,115,0.012,116,0.011,129,3.341,200,2.884,230,2.693,506,4.519,507,4.984,508,3.176,509,4.984,510,5.748,511,4.984,512,5.748,513,2.056,514,5.016,515,2.228,516,5.748,517,2.791,518,1.798,519,1.869,520,5.748,521,4.4,522,4.354,523,3.394,524,4.984,525,4.354,526,4.354,527,1.448,528,3.109,529,2.636,530,1.952,531,3.775,532,3.109,533,2.389,534,3.394,535,2.389,536,3.109,537,3.109,538,1.708,539,1.453,540,3.394,541,4.48,542,3.394,543,2.882,544,2.046,545,1.708,546,3.109,547,1.391,548,3.109,549,3.775,550,2.882,551,0.769,552,3.109,553,3.394,554,3.394,555,3.394,556,4.354,557,4.354]],["title/classes/LoginOptions.html",[0,0.213,558,2.14]],["body/classes/LoginOptions.html",[0,0.241,2,0.595,3,0.551,4,0.386,5,0.327,9,0.825,10,1.683,11,0.726,12,1.605,14,0.697,15,1.082,18,1.24,21,0.418,28,2.278,30,1.067,33,2.05,34,1.393,35,1.333,38,0.015,40,0.934,41,1.377,44,0.726,46,1.715,51,1.082,54,1.458,62,1.91,63,0.757,64,0.757,68,0.356,72,0.735,73,1.786,74,1.458,75,0.903,76,0.903,77,0.903,82,1.393,83,1.563,93,1.683,104,0.418,110,0.471,115,0.006,116,0.006,125,1.173,126,1.04,127,0.644,154,2.02,167,1.767,202,2.009,222,0.946,228,0.791,229,1.223,234,0.903,236,1.676,242,0.889,254,1.235,272,1.223,283,0.862,284,1.276,290,3.078,414,2.023,417,1.276,467,0.726,495,2.012,513,1.04,518,0.822,519,1.235,527,0.67,530,1.458,539,1.394,545,0.79,547,1.93,558,1.529,559,1.047,560,0.506,561,1.529,562,2.208,563,1.923,564,2.127,565,2.127,566,2.127,567,2.127,568,1.834,569,2.127,570,2.014,571,1.627,572,2.839,573,2.514,574,2.179,575,1.691,576,1.843,577,1.691,578,1.458,579,1.691,580,2.012,581,2.208,582,1.691,583,1.972,584,2.442,585,1.691,586,1.529,587,1.606,588,1.691,589,1.606,590,1.04,591,2.014,592,1.223,593,1.458,594,1.691,595,2.127,596,0.999,597,2.014,598,2.208,599,2.208,600,2.472,601,2.319,602,1.691,603,2.442,604,1.691,605,1.691,606,1.691,607,1.691,608,2.014,609,1.393,610,1.393,611,1.333,612,2.442,613,1.691,614,1.606,615,2.014,616,2.106,617,1.691,618,1.082,619,1.606,620,1.606,621,2.592,622,2.074,623,2.106,624,2.014,625,1.529,626,2.02,627,2.014,628,1.691,629,1.393,630,1.606,631,1.126,632,1.458,633,1.691,634,1.691,635,1.691,636,1.691,637,1.458,638,1.691,639,2.014,640,1.458,641,1.691,642,2.545,643,0.862,644,1.691,645,0.946,646,0.79,647,0.903,648,0.946,649,0.994,650,0.994,651,1.047,652,2.68,653,1.047,654,1.047,655,1.047,656,1.047,657,0.994,658,0.825,659,1.047,660,0.697,661,0.862,662,0.903,663,0.862,664,0.994,665,0.994,666,1.393,667,1.691,668,1.691,669,1.691,670,0.994,671,1.047,672,1.047,673,1.047,674,2.68,675,0.903,676,0.644,677,1.047,678,0.994,679,1.047,680,1.047,681,1.047,682,1.529,683,1.333,684,1.691,685,1.753,686,1.606,687,1.047,688,0.946,689,1.047,690,1.047,691,0.862,692,0.644,693,0.67,694,1.047,695,0.903,696,1.047,697,0.644,698,0.726,699,0.644,700,0.994,701,0.757,702,1.047,703,1.047,704,1.047,705,1.047,706,1.047,707,1.047,708,1.047,709,1.047,710,1.047,711,1.047,712,1.047,713,1.047,714,1.047,715,1.047,716,1.047,717,1.047,718,1.047,719,1.047,720,1.047,721,1.047,722,1.047,723,1.047,724,1.047,725,1.047,726,1.047,727,1.047,728,1.047,729,1.047,730,1.047]],["title/injectables/MemoryStorage.html",[126,1.455,670,2.248]],["body/injectables/MemoryStorage.html",[0,0.261,3,0.627,4,0.454,5,0.385,10,1.768,11,0.855,12,0.93,14,0.821,15,0.788,18,1.024,21,0.492,22,1.231,28,2.31,30,0.805,33,1.819,34,1.015,37,1.108,38,0.015,39,1.108,40,0.772,41,0.987,43,1.399,44,0.855,46,1.858,51,1.231,54,1.66,62,1.783,63,0.891,64,0.891,68,0.419,72,0.775,73,1.934,74,1.66,75,1.062,76,1.062,77,1.062,82,1.015,83,1.515,93,1.468,104,0.492,110,0.554,115,0.007,116,0.007,125,1.335,126,1.183,127,0.757,132,1.569,167,2.227,202,1.783,222,1.114,228,0.576,229,0.891,234,1.062,236,1.517,242,0.647,254,1.197,283,2.205,290,3.318,414,2.02,417,0.93,467,0.855,495,1.585,513,0.757,518,0.599,519,0.973,527,0.788,530,1.062,539,1.151,545,0.93,547,1.646,558,1.114,559,1.232,560,0.369,561,1.114,562,1.74,563,1.114,564,1.232,565,1.232,566,1.232,567,1.232,568,1.062,569,1.232,571,1.282,572,2.42,573,2.309,574,1.858,575,1.232,576,1.452,577,1.232,578,1.062,579,1.232,580,1.585,581,1.74,582,1.232,583,1.749,584,1.924,585,1.232,586,1.114,587,1.17,588,1.232,589,1.17,590,0.757,592,0.891,593,1.062,594,1.232,595,1.924,596,0.728,598,1.74,599,1.74,600,2.042,601,1.828,602,1.232,603,1.924,604,1.232,605,1.232,606,1.232,607,1.232,609,1.015,610,1.015,611,0.971,612,2.368,613,1.232,614,1.17,616,1.66,617,1.232,618,0.788,619,1.17,620,1.17,621,2.141,622,1.713,623,1.66,625,1.114,626,1.828,628,1.232,629,1.015,630,1.17,631,0.821,632,1.062,633,1.232,634,1.232,635,1.232,636,1.232,637,1.062,638,1.232,640,1.062,641,1.232,642,2.758,643,1.015,644,1.924,645,1.114,646,0.93,647,1.062,648,1.114,649,1.17,650,1.17,651,1.232,652,2.903,653,1.232,654,1.232,655,1.232,656,1.232,657,1.17,658,0.971,659,1.232,660,0.821,661,1.015,662,1.062,663,1.015,664,1.17,665,1.17,666,1.585,667,2.368,668,2.368,669,2.368,670,1.828,671,1.232,672,1.232,673,1.232,674,2.903,675,1.062,676,0.757,677,1.232,678,1.17,679,1.232,680,1.232,681,1.232,682,1.74,683,1.517,684,1.924,685,1.951,686,1.828,687,1.232,688,1.114,689,1.232,690,1.232,691,1.015,692,0.757,693,0.788,694,1.232,695,1.062,696,1.232,697,0.757,698,0.855,699,0.757,700,1.17,701,0.891,702,1.232,703,1.232,704,1.232,705,1.232,706,1.232,707,1.232,708,1.232,709,1.232,710,1.232,711,1.232,712,1.232,713,1.232,714,1.232,715,1.232,716,1.232,717,1.232,718,1.232,719,1.232,720,1.232,721,1.232,722,1.232,723,1.232,724,1.232,725,1.232,726,1.232,727,1.232,728,1.232,729,1.232,730,1.232,731,3.21,732,3.21,733,3.21,734,2.37,735,2.37,736,2.37]],["title/classes/NullValidationHandler.html",[0,0.213,521,2.816]],["body/classes/NullValidationHandler.html",[0,0.231,2,1.461,3,0.838,4,0.949,5,0.803,6,3.214,8,2.325,9,2.026,12,2.683,14,2.161,16,4.131,21,1.028,22,2.076,26,4.131,30,1.103,37,1.517,38,0.015,39,1.517,40,1.058,41,1.197,43,1.917,44,2.591,57,4.847,65,4.131,68,0.874,72,0.583,104,1.297,115,0.012,116,0.012,230,4.229,508,3.834,521,3.86,523,4.865,573,2.251,737,5.929,738,5.412,739,5.412,740,6.241,741,4.865,742,6.241,743,4.289,744,4.947,745,4.947,746,4.947]],["title/classes/OAuthErrorEvent.html",[0,0.213,747,2.816]],["body/classes/OAuthErrorEvent.html",[0,0.324,2,1.335,3,1.11,4,0.867,5,0.734,10,1.188,30,0.799,37,1.099,38,0.015,39,1.099,40,1.22,41,0.867,46,2.455,64,2.464,72,0.849,115,0.011,116,0.011,129,4.036,200,2.641,258,2.627,527,2.179,747,3.643,748,2.992,749,4.766,750,4.68,751,4.977,752,4.68,753,4.52,754,2.795,755,2.992,756,2.795,757,2.992,758,2.992,759,2.795,760,2.992,761,2.992,762,2.992,763,2.992,764,2.992,765,2.992,766,2.795,767,2.795,768,2.992,769,2.992,770,2.992,771,2.795,772,2.795,773,2.992,774,2.124,775,2.992,776,2.992,777,2.992,778,3.228,779,2.992,780,4.958,781,4.68,782,2.992]],["title/classes/OAuthEvent.html",[0,0.213,749,3.014]],["body/classes/OAuthEvent.html",[0,0.327,2,1.362,3,1.121,4,0.884,5,0.749,10,1.212,30,0.815,37,1.121,38,0.016,39,1.121,40,1.228,41,0.884,46,1.985,64,1.734,72,0.854,115,0.011,116,0.011,129,3.846,200,2.676,258,2.681,527,2.201,747,2.852,748,3.053,749,4.797,750,4.725,751,5.001,752,3.294,754,2.852,755,3.053,756,2.852,757,3.053,758,3.053,759,2.852,760,3.053,761,3.053,762,3.053,763,3.053,764,3.053,765,3.053,766,2.852,767,2.852,768,3.053,769,3.053,770,3.053,771,2.852,772,2.852,773,3.053,774,2.168,775,3.053,776,3.053,777,3.053,778,3.294,779,3.053,780,4.997,781,4.725,782,3.053,783,4.612]],["title/classes/OAuthInfoEvent.html",[0,0.213,782,3.014]],["body/classes/OAuthInfoEvent.html",[0,0.326,2,1.351,3,1.225,4,0.877,5,0.743,10,1.202,30,0.808,37,1.112,38,0.015,39,1.112,40,1.225,41,0.877,46,1.974,64,1.72,72,0.852,115,0.011,116,0.011,129,4.054,200,2.661,258,2.659,527,2.192,747,2.829,748,3.028,749,4.785,750,4.707,751,4.991,752,3.267,754,2.829,755,3.028,756,2.829,757,3.028,758,3.028,759,2.829,760,3.028,761,3.028,762,3.028,763,3.028,764,3.028,765,3.028,766,2.829,767,2.829,768,3.028,769,3.028,770,3.028,771,2.829,772,2.829,773,3.028,774,2.15,775,3.028,776,3.028,777,3.028,778,3.267,779,3.028,780,4.982,781,4.707,782,3.93,784,4.575]],["title/classes/OAuthLogger.html",[0,0.213,650,2.248]],["body/classes/OAuthLogger.html",[0,0.253,2,0.659,3,0.844,4,0.428,5,0.362,9,0.914,10,1.95,11,1.274,12,0.875,14,0.773,15,0.742,18,0.985,21,0.464,22,1.174,28,2.287,30,0.959,33,1.773,34,0.956,37,1.319,38,0.015,39,1.319,40,0.92,41,1.107,43,1.667,44,0.805,46,1.92,51,1.174,54,1.583,62,1.725,63,0.839,64,0.839,68,0.394,72,0.761,73,1.999,74,1.583,75,1,76,1,77,1,82,0.956,83,1.457,93,1.426,104,0.464,110,0.522,115,0.007,116,0.007,125,1.274,126,1.128,127,0.713,167,1.873,202,1.879,222,1.049,228,0.542,229,1.648,234,1,236,1.446,242,0.61,254,1.151,283,0.956,290,3.384,414,1.954,417,0.875,467,1.274,495,1.512,513,0.713,518,0.564,519,0.928,527,0.742,530,1,539,1.107,545,1.385,547,1.592,558,1.049,559,1.16,560,0.347,561,1.049,562,1.659,563,1.049,564,1.16,565,1.16,566,1.16,567,1.16,568,1,569,1.16,571,1.223,572,2.341,573,2.261,574,1.797,575,1.16,576,1.385,577,1.16,578,1,579,1.16,580,1.512,581,1.659,582,1.16,583,1.705,584,1.835,585,1.16,586,1.049,587,1.102,588,1.16,589,1.102,590,0.713,592,0.839,593,1,594,1.16,595,2.277,596,0.685,598,1.659,599,1.659,600,1.964,601,1.743,602,1.16,603,1.835,604,1.16,605,1.16,606,1.16,607,1.16,609,0.956,610,0.956,611,0.914,612,2.589,613,1.16,614,1.102,616,1.583,617,1.16,618,0.742,619,1.102,620,2.849,621,2.059,622,1.648,623,1.583,625,1.049,626,1.743,628,1.16,629,0.956,630,1.102,631,0.773,632,1,633,1.16,634,1.16,635,1.16,636,1.16,637,1,638,1.16,640,1,641,1.16,642,2.679,643,1.512,644,2.277,645,1.659,646,1.385,647,1.583,648,1.659,649,1.743,650,1.743,651,1.835,652,3.705,653,1.835,654,1.835,655,1.835,656,1.835,657,1.102,658,0.914,659,1.16,660,0.773,661,0.956,662,1,663,0.956,664,1.102,665,1.102,666,1.512,667,1.835,668,1.835,669,1.835,670,1.102,671,1.16,672,1.16,673,1.16,674,2.821,675,1,676,0.713,677,1.16,678,1.102,679,1.16,680,1.16,681,1.16,682,1.659,683,1.446,684,1.835,685,1.876,686,1.743,687,1.16,688,1.049,689,1.16,690,1.16,691,0.956,692,0.713,693,0.742,694,1.16,695,1,696,1.16,697,0.713,698,0.805,699,0.713,700,1.102,701,0.839,702,1.16,703,1.16,704,1.16,705,1.16,706,1.16,707,1.16,708,1.16,709,1.16,710,1.16,711,1.16,712,1.16,713,1.16,714,1.16,715,1.16,716,1.16,717,1.16,718,1.16,719,1.16,720,1.16,721,1.16,722,1.16,723,1.16,724,1.16,725,1.16,726,1.16,727,1.16,728,1.16,729,1.16,730,1.16,785,3.531,786,3.062,787,3.531,788,2.231,789,4.231,790,2.231,791,2.231,792,2.231,793,2.231]],["title/modules/OAuthModule.html",[794,3.549,795,3.014]],["body/modules/OAuthModule.html",[0,0.234,3,0.849,4,0.961,5,0.814,22,1.667,30,0.886,35,2.053,37,1.219,38,0.015,39,1.219,40,0.849,41,0.961,43,1.54,68,1.313,72,0.591,104,1.042,115,0.012,116,0.012,127,1.602,206,4.194,230,3.1,231,3.575,232,3.907,254,1.317,284,1.967,508,2.474,521,4.255,527,2.093,737,4.346,795,4.554,796,3.907,797,6.294,798,5.013,799,6.294,800,5.457,801,5.013,802,6.257,803,5.013,804,3.453,805,6.88,806,5.363,807,6.294,808,4.346,809,3.907,810,2.474,811,3.907,812,3.58,813,4.346,814,3.1,815,4.346]],["title/classes/OAuthModuleConfig.html",[0,0.213,206,2.646]],["body/classes/OAuthModuleConfig.html",[0,0.311,2,1.625,3,0.932,4,1.055,5,0.894,10,1.752,21,1.143,28,1.563,30,0.972,38,0.015,40,0.932,63,2.069,72,0.786,93,1.446,115,0.012,116,0.012,206,3.875,236,2.731,242,1.503,248,4.413,272,2.507,454,3.403,573,1.985,583,1.625,816,5.78,817,4.771,818,5.122,819,5.591,820,5.503,821,3.93,822,4.289,823,4.771,824,4.771,825,4.289,826,3.642,827,3.93,828,4.771]],["title/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.213,829,3.251]],["body/classes/OAuthNoopResourceServerErrorHandler.html",[0,0.306,2,1.583,3,0.908,4,1.028,5,0.87,8,2.518,10,1.724,14,2.271,21,1.113,22,2.182,30,0.947,37,1.303,38,0.015,39,1.303,40,0.908,41,1.028,43,1.646,68,1.159,72,0.773,104,1.113,115,0.012,116,0.012,204,4.692,214,4.89,217,3.114,219,3.827,228,1.595,229,2.467,528,3.827,743,4.646,829,4.684,830,5.688,831,5.688,832,5.526,833,5.908,834,4.646,835,4.646]],["title/classes/OAuthResourceServerConfig.html",[0,0.213,819,3.549]],["body/classes/OAuthResourceServerConfig.html",[0,0.298,2,1.511,3,0.867,4,0.981,5,0.831,10,1.675,21,1.063,28,1.453,30,1.227,38,0.015,40,1.177,41,1.394,63,2.397,72,0.751,93,1.675,115,0.012,116,0.012,154,2.525,206,2.973,236,2.845,242,1.397,248,4.95,272,2.397,454,3.942,573,2.299,583,1.882,816,6.302,817,4.435,818,3.653,819,5.413,821,4.552,822,4.969,823,5.527,824,5.527,825,4.969,826,4.219,827,4.959,828,6.021,836,5.115,837,5.115,838,5.115]],["title/classes/OAuthResourceServerErrorHandler.html",[0,0.213,204,3.014]],["body/classes/OAuthResourceServerErrorHandler.html",[0,0.306,2,1.583,3,0.908,4,1.028,5,0.87,8,2.518,10,1.941,14,1.855,21,1.113,22,2.182,30,0.947,37,1.303,38,0.015,39,1.303,40,0.908,41,1.028,43,1.646,68,1.159,72,0.773,104,1.113,115,0.012,116,0.012,204,4.692,214,4.89,217,3.114,219,3.827,228,1.595,229,2.467,528,3.827,829,3.827,830,5.688,831,5.688,832,5.526,833,5.908,834,4.646,835,4.646,839,5.359]],["title/classes/OAuthStorage.html",[0,0.213,666,1.95]],["body/classes/OAuthStorage.html",[0,0.258,2,0.684,3,0.616,4,0.444,5,0.376,9,0.949,10,1.906,11,0.836,12,0.909,14,0.802,15,0.77,18,1.009,21,0.481,22,1.209,28,2.307,30,0.793,33,1.801,34,0.992,37,1.091,38,0.015,39,1.091,40,0.761,41,0.975,43,1.379,44,0.836,46,1.838,51,1.209,54,1.63,62,1.761,63,0.871,64,0.871,68,0.409,72,0.77,73,1.913,74,1.63,75,1.038,76,1.038,77,1.038,82,0.992,83,1.691,93,1.452,104,0.481,110,0.542,115,0.007,116,0.007,125,1.312,126,1.162,127,0.74,167,2.205,202,1.761,222,1.089,228,0.563,229,0.871,234,1.038,236,1.49,242,0.633,254,1.18,283,2.178,290,3.301,414,1.995,417,0.909,467,0.836,495,1.557,513,0.74,518,0.585,519,0.956,527,1.209,530,1.038,539,1.135,545,0.909,547,1.625,558,1.089,559,1.204,560,0.36,561,1.089,562,1.709,563,1.089,564,1.204,565,1.204,566,1.204,567,1.204,568,1.038,569,1.204,571,1.259,572,2.39,573,2.356,574,1.834,575,1.204,576,1.427,577,1.204,578,1.038,579,1.204,580,1.557,581,1.709,582,1.204,583,1.732,584,1.89,585,1.204,586,1.089,587,1.143,588,1.204,589,1.143,590,0.74,592,0.871,593,1.038,594,1.204,595,1.89,596,0.711,598,1.709,599,1.709,600,2.012,601,1.795,602,1.204,603,1.89,604,1.204,605,1.204,606,1.204,607,1.204,609,0.992,610,0.992,611,0.949,612,2.643,613,1.204,614,1.143,616,1.63,617,1.204,618,0.77,619,1.143,620,1.143,621,2.11,622,1.688,623,1.63,625,1.089,626,1.795,628,1.204,629,0.992,630,1.143,631,0.802,632,1.038,633,1.204,634,1.204,635,1.204,636,1.204,637,1.038,638,1.204,640,1.038,641,1.204,642,2.728,643,0.992,644,2.333,645,1.089,646,0.909,647,1.038,648,1.089,649,1.143,650,1.143,651,1.204,652,2.872,653,1.204,654,1.204,655,1.204,656,1.204,657,1.795,658,1.49,659,1.89,660,1.259,661,1.557,662,1.63,663,1.557,664,1.795,665,1.795,666,1.923,667,2.333,668,2.333,669,2.333,670,1.143,671,1.204,672,1.204,673,1.204,674,2.872,675,1.038,676,0.74,677,1.204,678,1.143,679,1.204,680,1.204,681,1.204,682,1.709,683,1.49,684,1.89,685,1.923,686,1.795,687,1.204,688,1.089,689,1.204,690,1.204,691,0.992,692,0.74,693,0.77,694,1.204,695,1.038,696,1.204,697,0.74,698,0.836,699,0.74,700,1.143,701,0.871,702,1.204,703,1.204,704,1.204,705,1.204,706,1.204,707,1.204,708,1.204,709,1.204,710,1.204,711,1.204,712,1.204,713,1.204,714,1.204,715,1.204,716,1.204,717,1.204,718,1.204,719,1.204,720,1.204,721,1.204,722,1.204,723,1.204,724,1.204,725,1.204,726,1.204,727,1.204,728,1.204,729,1.204,730,1.204,731,3.153,732,3.153,733,3.153,840,2.316,841,2.316,842,2.316]],["title/classes/OAuthSuccessEvent.html",[0,0.213,779,3.014]],["body/classes/OAuthSuccessEvent.html",[0,0.326,2,1.351,3,1.225,4,0.877,5,0.743,10,1.202,30,0.808,37,1.112,38,0.015,39,1.112,40,1.225,41,0.877,46,1.974,64,1.72,72,0.852,115,0.011,116,0.011,129,4.054,200,2.661,258,2.659,527,2.192,747,2.829,748,3.028,749,4.785,750,4.707,751,4.991,752,3.267,754,2.829,755,3.028,756,2.829,757,3.028,758,3.028,759,2.829,760,3.028,761,3.028,762,3.028,763,3.028,764,3.028,765,3.028,766,2.829,767,2.829,768,3.028,769,3.028,770,3.028,771,2.829,772,2.829,773,3.028,774,2.15,775,3.028,776,3.028,777,3.028,778,3.267,779,3.93,780,4.982,781,4.707,782,3.028,843,4.575]],["title/interfaces/OidcDiscoveryDoc.html",[73,1.577,700,2.248]],["body/interfaces/OidcDiscoveryDoc.html",[0,0.241,3,0.553,4,0.388,5,0.328,9,0.828,10,1.685,11,0.729,12,0.793,14,0.7,15,0.672,18,0.922,21,0.42,28,2.336,33,1.697,34,0.866,38,0.015,40,1.295,41,0.388,44,0.729,46,1.718,51,1.085,54,1.462,62,1.63,63,0.76,64,0.76,68,0.357,72,0.736,73,1.789,74,1.462,75,0.906,76,0.906,77,0.906,82,0.866,83,1.364,93,1.357,104,0.42,110,0.473,115,0.006,116,0.006,125,1.177,126,1.043,127,0.646,167,1.77,202,1.63,222,0.95,228,0.491,229,0.76,234,0.906,236,1.929,242,0.552,254,1.078,272,1.227,283,0.866,290,3.082,414,1.847,417,0.793,467,0.729,495,1.397,513,0.646,518,0.511,519,0.857,527,0.672,530,0.906,539,1.037,545,0.793,547,1.504,558,0.95,559,1.05,560,0.314,561,0.95,562,1.533,563,0.95,564,1.05,565,1.05,566,1.05,567,1.05,568,0.906,569,1.05,571,1.13,572,2.213,573,2.182,574,1.698,575,1.05,576,1.28,577,1.05,578,0.906,579,1.05,580,1.397,581,1.533,582,1.05,583,1.631,584,1.695,585,1.05,586,0.95,587,0.998,588,1.05,589,0.998,590,0.646,592,0.76,593,0.906,594,1.05,595,1.695,596,0.621,598,1.533,599,1.533,600,1.839,601,1.61,602,1.05,603,1.695,604,1.05,605,1.05,606,1.05,607,1.05,609,0.866,610,0.866,611,0.828,612,2.132,613,1.05,614,0.998,616,1.462,617,1.05,618,0.672,619,0.998,620,0.998,621,1.928,622,1.543,623,1.462,625,0.95,626,1.61,628,1.05,629,0.866,630,0.998,631,0.7,632,0.906,633,1.05,634,1.05,635,1.05,636,1.05,637,0.906,638,1.05,640,0.906,641,1.05,642,2.55,643,0.866,644,1.695,645,0.95,646,0.793,647,0.906,648,0.95,649,0.998,650,0.998,651,1.05,652,2.685,653,1.05,654,1.05,655,1.05,656,1.05,657,0.998,658,0.828,659,1.05,660,0.7,661,0.866,662,0.906,663,0.866,664,0.998,665,0.998,666,1.397,667,1.695,668,1.695,669,1.695,670,0.998,671,1.05,672,1.05,673,1.05,674,2.871,675,0.906,676,0.646,677,1.05,678,0.998,679,1.05,680,1.05,681,1.05,682,1.533,683,1.336,684,1.695,685,2.016,686,1.61,687,1.05,688,0.95,689,1.05,690,1.05,691,0.866,692,0.646,693,0.672,694,1.05,695,0.906,696,1.05,697,1.043,698,1.177,699,1.043,700,1.61,701,1.77,702,2.447,703,2.447,704,2.447,705,2.447,706,2.447,707,2.447,708,2.447,709,2.447,710,2.447,711,2.447,712,2.447,713,2.447,714,2.447,715,2.447,716,2.447,717,2.447,718,2.447,719,2.447,720,2.447,721,2.447,722,2.447,723,2.447,724,2.447,725,2.447,726,2.447,727,2.447,728,2.447,729,2.447,730,2.447,844,1.25]],["title/interfaces/ParsedIdToken.html",[73,1.577,678,2.248]],["body/interfaces/ParsedIdToken.html",[0,0.262,3,0.63,4,0.457,5,0.387,9,0.976,10,1.77,11,0.859,12,0.935,14,0.825,15,0.792,18,1.028,21,0.495,28,2.306,33,1.823,34,1.02,38,0.015,40,1.005,41,0.457,44,0.859,46,2.191,51,1.52,54,2.049,62,1.788,63,0.896,64,0.896,68,0.421,72,0.777,73,1.939,74,2.51,75,1.068,76,2.315,77,2.315,82,1.02,83,1.52,93,1.472,104,0.495,110,0.557,115,0.007,116,0.007,125,1.863,126,1.188,127,0.761,167,1.942,202,1.788,222,1.12,228,0.579,229,0.896,234,1.068,236,1.523,242,0.651,254,1.201,272,1.398,283,1.02,290,3.226,414,2.026,417,0.935,467,0.859,495,1.592,513,0.761,518,0.602,519,0.977,527,0.792,530,1.068,539,1.155,545,0.935,547,1.65,558,1.12,559,1.238,560,0.371,561,1.12,562,1.747,563,1.12,564,1.238,565,1.238,566,1.238,567,1.238,568,1.068,569,1.238,571,1.287,572,2.427,573,2.313,574,1.863,575,1.238,576,1.458,577,1.238,578,1.068,579,1.238,580,1.592,581,1.747,582,1.238,583,1.753,584,1.932,585,1.238,586,1.12,587,1.176,588,1.238,589,1.176,590,0.761,592,0.896,593,1.068,594,1.238,595,1.932,596,0.732,598,1.747,599,1.747,600,2.049,601,1.835,602,1.238,603,1.932,604,1.238,605,1.238,606,1.238,607,1.238,609,1.02,610,1.02,611,0.976,612,2.376,613,1.238,614,1.176,616,1.666,617,1.238,618,0.792,619,1.176,620,1.176,621,2.148,622,1.719,623,1.666,625,1.12,626,2.257,628,1.238,629,1.02,630,1.176,631,0.825,632,1.068,633,1.238,634,1.238,635,1.238,636,1.238,637,1.068,638,1.238,640,1.068,641,1.238,642,2.764,643,1.02,644,1.932,645,1.12,646,0.935,647,1.068,648,1.12,649,1.176,650,1.176,651,1.238,652,2.91,653,1.238,654,1.238,655,1.238,656,1.238,657,1.176,658,0.976,659,1.238,660,0.825,661,1.02,662,1.068,663,1.02,664,1.176,665,1.176,666,1.592,667,1.932,668,1.932,669,1.932,670,1.176,671,1.238,672,1.238,673,1.238,674,3.084,675,1.068,676,0.761,677,1.238,678,1.835,679,2.684,680,2.684,681,2.684,682,1.747,683,1.523,684,1.932,685,1.958,686,1.835,687,1.238,688,1.12,689,1.238,690,1.238,691,1.02,692,0.761,693,0.792,694,1.238,695,1.068,696,1.238,697,0.761,698,0.859,699,0.761,700,1.176,701,0.896,702,1.238,703,1.238,704,1.238,705,1.238,706,1.238,707,1.238,708,1.238,709,1.238,710,1.238,711,1.238,712,1.238,713,1.238,714,1.238,715,1.238,716,1.238,717,1.238,718,1.238,719,1.238,720,1.238,721,1.238,722,1.238,723,1.238,724,1.238,725,1.238,726,1.238,727,1.238,728,1.238,729,1.238,730,1.238,844,1.473]],["title/classes/ReceivedTokens.html",[0,0.213,642,2.248]],["body/classes/ReceivedTokens.html",[0,0.262,2,0.707,3,0.633,4,0.459,5,0.389,9,0.981,10,1.773,11,0.864,12,0.94,14,0.829,15,0.797,18,1.031,21,0.498,28,2.303,30,0.915,33,1.827,34,1.026,38,0.015,40,0.878,41,1.077,44,0.864,46,1.978,51,1.241,54,2.056,62,2.059,63,0.901,64,0.901,68,0.423,72,0.778,73,1.944,74,2.322,75,2.056,76,1.074,77,1.074,82,1.026,83,1.722,93,1.475,104,0.498,110,0.56,115,0.007,116,0.007,125,1.347,126,1.193,127,0.765,167,1.948,202,1.793,222,1.126,228,0.582,229,0.901,234,1.074,236,1.529,242,0.654,254,1.361,272,1.404,283,1.026,290,3.231,414,2.436,417,0.94,467,0.864,495,1.599,513,0.765,518,0.605,519,0.981,527,0.797,530,1.074,539,1.159,545,0.94,547,1.655,558,1.126,559,1.245,560,0.373,561,1.126,562,1.754,563,1.126,564,1.245,565,1.245,566,1.245,567,1.245,568,1.074,569,1.245,571,1.293,572,2.434,573,2.317,574,1.868,575,1.245,576,1.464,577,1.245,578,1.074,579,1.245,580,1.599,581,1.754,582,1.245,583,1.756,584,1.94,585,1.245,586,1.126,587,1.182,588,1.245,589,1.182,590,0.765,592,0.901,593,1.074,594,1.245,595,1.94,596,0.736,598,1.754,599,1.754,600,2.056,601,1.843,602,1.245,603,1.94,604,1.245,605,1.245,606,1.245,607,1.245,609,1.026,610,1.026,611,0.981,612,2.384,613,1.245,614,1.182,616,1.673,617,1.245,618,0.797,619,1.182,620,1.182,621,2.156,622,1.725,623,1.673,625,1.126,626,1.843,628,1.245,629,1.026,630,1.182,631,0.829,632,1.074,633,1.245,634,1.245,635,1.245,636,1.245,637,1.074,638,1.245,640,1.074,641,1.245,642,2.936,643,1.026,644,1.94,645,1.126,646,0.94,647,1.074,648,1.126,649,1.182,650,1.182,651,1.245,652,2.918,653,1.245,654,1.245,655,1.245,656,1.245,657,1.182,658,0.981,659,1.245,660,0.829,661,1.026,662,1.074,663,1.026,664,1.182,665,1.182,666,1.599,667,1.94,668,1.94,669,1.94,670,1.182,671,1.245,672,1.245,673,1.245,674,3.091,675,1.673,676,1.193,677,2.384,678,1.182,679,1.245,680,1.245,681,1.245,682,1.754,683,1.529,684,1.94,685,1.964,686,1.843,687,1.245,688,1.126,689,1.245,690,1.245,691,1.026,692,0.765,693,0.797,694,1.245,695,1.074,696,1.245,697,0.765,698,0.864,699,0.765,700,1.182,701,0.901,702,1.245,703,1.245,704,1.245,705,1.245,706,1.245,707,1.245,708,1.245,709,1.245,710,1.245,711,1.245,712,1.245,713,1.245,714,1.245,715,1.245,716,1.245,717,1.245,718,1.245,719,1.245,720,1.245,721,1.245,722,1.245,723,1.245,724,1.245,725,1.245,726,1.245,727,1.245,728,1.245,729,1.245,730,1.245,845,2.395,846,2.395,847,2.395,848,2.395]],["title/injectables/SystemDateTimeProvider.html",[126,1.455,128,3.549]],["body/injectables/SystemDateTimeProvider.html",[0,0.305,3,0.902,4,1.02,5,0.864,10,1.857,21,1.106,22,2.172,30,1.154,38,0.015,43,2.006,68,0.94,72,0.77,104,1.357,110,1.8,115,0.012,116,0.012,117,5.401,118,4.613,119,2.919,120,4.613,121,5.401,123,6.39,125,2.549,126,2.087,127,1.7,128,5.091,129,3.796,130,4.613,132,3.522,524,5.663,849,5.321,850,5.321]],["title/interfaces/TokenResponse.html",[73,1.577,688,2.14]],["body/interfaces/TokenResponse.html",[0,0.26,3,0.623,4,0.451,5,0.382,9,0.963,10,1.764,11,0.848,12,0.922,14,0.814,15,0.782,18,1.019,21,0.488,28,2.313,33,1.812,34,1.006,38,0.015,40,1.045,41,0.869,44,0.848,46,1.85,51,1.85,54,1.649,62,1.775,63,1.928,64,0.884,68,0.415,72,0.773,73,1.927,74,1.649,75,1.054,76,1.054,77,1.054,82,1.006,83,1.507,93,1.462,104,0.488,110,0.55,115,0.007,116,0.007,125,1.849,126,1.175,127,0.751,167,1.928,202,1.775,222,1.105,228,0.571,229,0.884,234,1.054,236,1.507,242,0.642,254,1.347,272,1.383,283,1.006,290,3.214,414,2.419,417,0.922,467,0.848,495,1.575,513,0.751,518,0.594,519,0.966,527,0.782,530,1.054,539,1.145,545,0.922,547,1.638,558,1.105,559,1.221,560,0.366,561,1.105,562,1.729,563,1.105,564,1.221,565,1.221,566,1.221,567,1.221,568,1.054,569,1.221,571,1.274,572,2.409,573,2.302,574,1.849,575,1.221,576,1.443,577,1.221,578,1.054,579,1.221,580,1.575,581,1.729,582,1.221,583,1.743,584,1.911,585,1.221,586,1.105,587,1.16,588,1.221,589,1.16,590,0.751,592,0.884,593,1.054,594,1.221,595,1.911,596,0.722,598,1.729,599,1.729,600,2.031,601,1.816,602,1.221,603,1.911,604,1.221,605,1.221,606,1.221,607,1.221,609,1.006,610,1.006,611,0.963,612,2.355,613,1.221,614,1.16,616,1.649,617,1.221,618,0.782,619,1.16,620,1.16,621,2.13,622,1.704,623,1.649,625,1.105,626,1.816,628,1.221,629,1.006,630,1.16,631,0.814,632,1.054,633,1.221,634,1.221,635,1.221,636,1.221,637,1.054,638,1.221,640,1.054,641,1.221,642,2.747,643,1.006,644,1.911,645,1.105,646,0.922,647,1.054,648,1.105,649,1.16,650,1.16,651,1.221,652,2.892,653,1.221,654,1.221,655,1.221,656,1.221,657,1.16,658,0.963,659,1.221,660,0.814,661,1.006,662,1.054,663,1.006,664,1.16,665,1.16,666,1.575,667,1.911,668,1.911,669,1.911,670,1.16,671,1.221,672,1.221,673,1.221,674,3.066,675,1.054,676,0.751,677,1.221,678,1.16,679,1.221,680,1.221,681,1.221,682,2.13,683,1.856,684,2.355,685,2.195,686,2.237,687,1.911,688,1.729,689,2.664,690,2.664,691,2.195,692,1.638,693,0.782,694,1.221,695,1.054,696,1.221,697,0.751,698,0.848,699,0.751,700,1.16,701,0.884,702,1.221,703,1.221,704,1.221,705,1.221,706,1.221,707,1.221,708,1.221,709,1.221,710,1.221,711,1.221,712,1.221,713,1.221,714,1.221,715,1.221,716,1.221,717,1.221,718,1.221,719,1.221,720,1.221,721,1.221,722,1.221,723,1.221,724,1.221,725,1.221,726,1.221,727,1.221,728,1.221,729,1.221,730,1.221,844,1.453]],["title/injectables/UrlHelperService.html",[126,1.455,851,3.948]],["body/injectables/UrlHelperService.html",[0,0.219,3,0.793,4,0.897,5,0.76,21,0.972,22,2.004,28,2.117,30,1.064,33,2.161,35,1.917,37,1.465,38,0.015,39,1.465,40,1.021,41,1.155,43,1.85,46,2.34,68,0.827,72,0.552,84,4.089,85,2.505,104,1.384,115,0.011,116,0.011,126,1.925,127,1.495,132,3.097,162,3.131,167,2.265,283,2.004,431,3.305,527,1.556,563,2.831,586,2.831,789,3.648,851,5.224,852,6.663,853,4.679,854,6.024,855,6.024,856,6.024,857,4.679,858,6.024,859,4.679,860,4.679,861,4.679,862,6.024,863,6.024,864,4.679,865,4.679,866,4.679,867,4.679,868,4.679,869,4.679,870,4.679,871,4.679,872,4.679]],["title/interfaces/UserInfo.html",[73,1.577,695,2.041]],["body/interfaces/UserInfo.html",[0,0.265,3,0.788,4,0.469,5,0.397,9,1.003,10,1.784,11,0.883,12,0.96,14,0.847,15,0.814,18,1.046,21,0.508,28,2.305,30,0.432,33,1.843,34,1.048,38,0.015,40,0.415,41,0.469,44,0.883,46,1.886,51,1.262,54,1.702,62,1.814,63,0.92,64,0.92,68,0.432,72,0.783,73,1.964,74,1.702,75,1.097,76,1.097,77,1.097,82,1.048,83,1.546,93,1.49,104,0.508,110,0.572,115,0.007,116,0.007,125,1.369,126,1.213,127,0.782,167,1.97,202,1.814,222,1.15,228,0.595,229,0.92,234,1.097,236,1.555,242,0.669,254,1.222,272,1.427,283,1.626,290,3.249,414,2.055,417,0.96,467,0.883,495,1.626,513,0.782,518,0.619,519,0.997,527,0.814,530,1.097,539,1.175,545,0.96,547,1.674,558,1.15,559,1.272,560,0.381,561,1.15,562,1.784,563,1.15,564,1.272,565,1.272,566,1.272,567,1.272,568,1.097,569,1.272,571,1.314,572,2.462,573,2.334,574,1.89,575,1.272,576,1.489,577,1.272,578,1.097,579,1.272,580,1.626,581,1.784,582,1.272,583,1.772,584,1.973,585,1.272,586,1.15,587,1.208,588,1.272,589,1.208,590,0.782,592,0.92,593,1.097,594,1.272,595,1.973,596,0.752,598,1.784,599,1.784,600,2.084,601,1.874,602,1.272,603,1.973,604,1.272,605,1.272,606,1.272,607,1.272,609,1.048,610,1.048,611,1.003,612,2.416,613,1.272,614,1.208,616,1.702,617,1.272,618,0.814,619,1.208,620,1.208,621,2.185,622,1.749,623,1.702,625,1.15,626,1.874,628,1.272,629,1.048,630,1.208,631,0.847,632,1.097,633,1.272,634,1.272,635,1.272,636,1.272,637,1.097,638,1.272,640,1.097,641,1.272,642,2.799,643,1.048,644,1.973,645,1.15,646,0.96,647,1.097,648,1.15,649,1.208,650,1.208,651,1.272,652,2.947,653,1.272,654,1.272,655,1.272,656,1.272,657,1.208,658,1.003,659,1.272,660,0.847,661,1.048,662,1.097,663,1.048,664,1.208,665,1.208,666,1.626,667,1.973,668,1.973,669,1.973,670,1.208,671,1.272,672,1.272,673,1.272,674,3.118,675,1.097,676,0.782,677,1.272,678,1.208,679,1.272,680,1.272,681,1.272,682,2.185,683,1.905,684,2.416,685,2.244,686,2.295,687,1.272,688,1.15,689,1.272,690,1.272,691,1.048,692,0.782,693,1.262,694,1.973,695,1.702,696,2.723,697,0.782,698,0.883,699,0.782,700,1.208,701,0.92,702,1.272,703,1.272,704,1.272,705,1.272,706,1.272,707,1.272,708,1.272,709,1.272,710,1.272,711,1.272,712,1.272,713,1.272,714,1.272,715,1.272,716,1.272,717,1.272,718,1.272,719,1.272,720,1.272,721,1.272,722,1.272,723,1.272,724,1.272,725,1.272,726,1.272,727,1.272,728,1.272,729,1.272,730,1.272,844,1.513,873,2.447,874,2.447]],["title/classes/ValidationHandler.html",[0,0.213,12,1.786]],["body/classes/ValidationHandler.html",[0,0.226,1,2.414,2,0.998,3,0.573,4,0.648,5,0.549,6,2.648,7,4.392,8,1.589,9,1.385,10,1.955,11,1.219,12,2.412,13,1.854,14,1.672,15,1.606,16,4.069,17,1.669,18,1.086,19,2.414,20,3.197,21,0.702,22,1.606,23,3.765,25,2.414,26,3.73,28,1.921,29,4.069,30,0.853,32,2.635,33,1.731,34,2.068,35,1.385,36,0.76,37,1.174,38,0.015,39,1.37,40,0.818,41,0.926,42,3.197,43,1.483,44,2.568,45,2.635,46,2.044,48,2.635,49,4.392,50,2.635,51,2.315,52,2.635,53,2.635,54,1.515,55,2.237,56,2.635,57,4.687,59,4.829,60,4.643,61,4.024,62,1.951,63,2.119,65,3.197,67,3.73,68,0.597,69,2.414,70,2.414,71,2.635,72,0.664,73,1.951,74,1.515,75,1.515,76,1.515,77,1.515,78,1.669,79,2.635,80,3.765,81,3.765,82,2.068,83,1.606,84,3.71,85,2.543,86,3.765,87,2.635,88,2.635,89,2.237,90,2.635,91,2.635,92,2.635,93,0.888,94,2.635,95,2.635,96,2.635,97,2.09,98,4.792,99,2.635,100,4.792,101,2.635,102,2.635,103,2.635,104,1.003,105,4.392,106,2.635,107,2.635,108,2.635,109,2.237,110,0.79,111,2.635,112,2.237,113,2.09,114,2.635,115,0.009,116,0.009,523,2.635,875,3.38,876,3.38]],["title/interfaces/ValidationParams.html",[57,2.816,73,1.577]],["body/interfaces/ValidationParams.html",[0,0.23,1,2.477,3,0.588,4,0.665,5,0.563,6,1.63,7,2.704,8,1.63,10,1.843,11,1.251,12,2.242,13,1.903,14,1.703,15,1.636,16,3.256,17,1.712,18,1.106,19,2.477,20,3.256,21,0.721,23,3.835,25,2.477,26,2.296,28,2.099,29,4.117,32,2.704,33,1.756,34,2.107,35,1.421,36,0.78,38,0.016,39,0.843,40,1.156,42,3.256,44,2.46,45,2.704,46,2.458,48,2.704,49,4.456,50,2.704,51,2.184,52,2.704,53,2.704,54,1.555,55,2.296,56,2.704,57,4.432,59,4.442,60,4.442,61,3.513,62,1.703,63,1.85,65,2.296,67,3.256,68,0.613,69,2.477,70,2.477,71,2.704,72,0.674,73,1.703,74,2.788,75,2.788,76,2.788,77,2.788,78,3.07,79,4.848,80,2.704,81,2.704,82,1.485,83,1.154,84,2.699,85,2.565,86,3.835,87,2.704,88,2.704,89,2.296,90,2.704,91,2.704,92,2.704,93,0.911,94,2.704,95,2.704,96,2.704,97,2.145,98,4.848,99,2.704,100,4.848,101,2.704,102,2.704,103,2.704,104,1.022,105,4.456,106,2.704,107,2.704,108,2.704,109,2.296,110,0.811,111,2.704,112,2.296,113,2.145,114,2.704,115,0.009,116,0.009,154,2.428,272,1.85,844,2.145]],["title/classes/WebHttpUrlEncodingCodec.html",[0,0.213,877,3.948]],["body/classes/WebHttpUrlEncodingCodec.html",[0,0.216,2,1.365,3,0.783,4,0.886,5,0.751,9,1.893,14,2.069,21,0.96,22,1.988,28,2.296,30,1.237,37,1.702,38,0.015,39,1.702,40,1.187,41,1.343,43,2.151,68,0.817,72,0.545,104,1.455,115,0.011,116,0.011,163,4.268,217,2.686,302,4.268,371,4.268,571,2.069,573,2.156,877,5.182,878,4.622,879,5.976,880,5.976,881,5.976,882,6.624,883,5.976,884,5.976,885,5.976,886,5.976,887,5.976,888,4.622,889,5.976,890,4.622,891,5.976,892,4.622,893,5.976,894,4.622,895,4.622,896,4.622,897,4.622,898,4.622]],["title/changelog.html",[899,2.301,900,2.621,901,3.433]],["body/changelog.html",[5,0.799,13,1.198,17,2.132,18,1.348,33,1.512,36,1.286,37,0.531,38,0.009,40,0.588,41,0.419,51,0.726,64,2.15,78,1.078,83,0.726,93,0.912,110,0.812,113,1.351,115,0.006,116,0.006,117,1.56,119,1.198,121,2.479,145,1.445,146,1.56,159,1.445,182,2.147,200,0.979,228,0.531,229,0.821,230,1.351,231,2.558,233,4.083,236,0.895,242,1.467,254,1.575,279,3.085,284,1.695,300,1.702,377,2.147,399,1.56,401,2.479,414,2.577,417,1.362,428,1.56,430,2.479,448,2.859,508,1.078,517,0.857,518,1.515,529,0.895,533,2.37,538,1.931,539,1.812,542,2.706,545,1.695,547,2.291,561,1.026,563,1.026,571,1.86,574,0.788,576,2.107,578,2.688,580,2.108,586,1.631,589,1.078,596,1.65,598,1.026,599,1.026,614,1.078,618,0.726,630,1.078,631,1.202,658,0.895,676,0.698,682,1.026,683,1.77,688,1.026,691,1.486,695,0.979,699,1.109,774,2.524,822,1.702,901,1.894,902,2.184,903,2.184,904,2.184,905,4.657,906,4.657,907,2.184,908,2.184,909,5.995,910,2.184,911,2.184,912,2.184,913,2.184,914,2.184,915,2.184,916,2.184,917,2.184,918,2.184,919,2.184,920,2.184,921,2.184,922,2.184,923,2.184,924,5.37,925,2.184,926,2.184,927,2.184,928,2.184,929,2.184,930,3.085,931,2.184,932,2.184,933,2.184,934,2.184,935,2.184,936,2.184,937,1.56,938,2.184,939,1.198,940,2.184,941,2.184,942,5.718,943,2.184,944,2.184,945,2.184,946,2.184,947,2.184,948,0.895,949,2.184,950,3.471,951,2.184,952,2.184,953,2.184,954,2.184,955,4.657,956,2.184,957,2.184,958,2.184,959,1.269,960,2.184,961,2.479,962,2.184,963,2.184,964,1.894,965,2.184,966,4.958,967,2.184,968,2.184,969,1.702,970,2.184,971,3.515,972,1.198,973,2.184,974,4.281,975,2.184,976,2.184,977,2.184,978,2.184,979,2.184,980,1.702,981,1.894,982,3.746,983,2.184,984,2.184,985,2.184,986,2.184,987,2.184,988,1.56,989,2.184,990,2.184,991,4.32,992,5.995,993,4.32,994,4.32,995,3.471,996,2.184,997,2.184,998,2.184,999,2.184,1000,2.184,1001,2.184,1002,3.471,1003,3.471,1004,2.184,1005,2.184,1006,2.184,1007,2.184,1008,2.184,1009,2.184,1010,2.184,1011,2.184,1012,4.32,1013,3.471,1014,2.184,1015,3.471,1016,2.184,1017,2.184,1018,2.184,1019,4.32,1020,2.184,1021,2.184,1022,3.01,1023,2.184,1024,2.184,1025,2.184,1026,2.184,1027,2.184,1028,2.184,1029,3.471,1030,4.32,1031,4.32,1032,4.32,1033,2.184,1034,1.702,1035,2.184,1036,4.922,1037,2.184,1038,2.184,1039,2.184,1040,2.184,1041,2.184,1042,2.184,1043,2.184,1044,2.184,1045,4.32,1046,3.471,1047,2.184,1048,2.184,1049,2.184,1050,3.471,1051,2.184,1052,2.184,1053,1.894,1054,2.184,1055,2.184,1056,2.184,1057,2.184,1058,2.184,1059,3.01,1060,2.184,1061,3.746,1062,3.367,1063,4.32,1064,2.184,1065,4.32,1066,3.367,1067,3.085,1068,4.32,1069,2.184,1070,1.894,1071,2.184,1072,2.184,1073,2.37,1074,1.56,1075,2.184,1076,1.894,1077,3.471,1078,3.471,1079,3.471,1080,3.471,1081,3.471,1082,2.479,1083,2.147,1084,3.01,1085,3.471,1086,3.708,1087,1.713,1088,3.367,1089,3.01,1090,3.471,1091,3.471,1092,3.044,1093,2.017,1094,2.184,1095,2.479,1096,2.706,1097,3.471,1098,3.01,1099,4.267,1100,3.471,1101,2.184,1102,2.184,1103,2.184,1104,2.184,1105,3.01,1106,3.01,1107,2.298,1108,3.471,1109,3.01,1110,3.01,1111,3.471,1112,3.471,1113,3.471,1114,4.32,1115,2.706,1116,3.471,1117,2.479,1118,2.147,1119,3.471,1120,3.471,1121,3.471,1122,3.471,1123,3.471,1124,3.471,1125,3.471,1126,3.471,1127,3.471,1128,3.01,1129,3.471,1130,3.471,1131,3.471,1132,3.471,1133,3.471,1134,2.184,1135,2.184,1136,2.184,1137,3.471,1138,2.184,1139,3.471,1140,2.184,1141,1.894,1142,1.894,1143,1.894,1144,1.894,1145,0.979,1146,1.894,1147,1.894,1148,1.269,1149,1.445,1150,2.184,1151,2.184,1152,2.184,1153,1.56,1154,2.184,1155,2.184,1156,2.184,1157,2.184,1158,2.184,1159,2.184,1160,2.184,1161,3.471,1162,2.184,1163,2.184,1164,3.471,1165,1.894,1166,2.184,1167,2.184,1168,3.085,1169,3.471,1170,2.184,1171,2.184,1172,2.184,1173,2.184,1174,2.184,1175,2.184,1176,1.894,1177,1.894,1178,2.184,1179,2.184,1180,2.184,1181,2.184,1182,2.184,1183,2.184,1184,2.184,1185,1.894,1186,2.184,1187,2.184]],["title/dependencies.html",[1188,3.433,1189,4.204]],["body/dependencies.html",[38,0.015,70,3.746,78,2.59,115,0.012,116,0.012,127,1.676,145,3.473,146,3.746,148,4.09,163,3.746,219,4.624,517,2.058,518,1.326,519,1.379,808,4.549,930,3.746,1189,4.09,1190,5.246,1191,7.854,1192,5.246,1193,5.246,1194,5.614,1195,5.047,1196,5.246,1197,5.246,1198,5.246,1199,5.246,1200,5.246,1201,5.246,1202,5.246,1203,5.246,1204,5.246,1205,3.746,1206,5.246,1207,5.246,1208,5.246,1209,5.246,1210,5.246,1211,5.246,1212,5.246,1213,5.246,1214,5.246,1215,5.246,1216,5.246,1217,5.246,1218,5.246,1219,5.246,1220,5.246,1221,5.246]],["title/miscellaneous/functions.html",[1222,2.449,1223,4.676]],["body/miscellaneous/functions.html",[3,1.107,6,2.5,8,2.853,21,0.806,28,1.102,33,1.634,35,2.179,37,1.857,38,0.015,39,1.857,40,1.226,41,1.464,43,2.006,69,3.799,115,0.01,116,0.01,125,2.755,133,3.025,140,2.772,155,3.025,157,3.025,167,2.283,206,3.092,269,5.047,270,2.772,271,5.168,281,6.269,283,2.278,284,2.087,298,2.772,368,4.147,369,3.025,370,5.091,371,3.799,372,4.147,373,4.147,374,4.147,446,4.147,458,2.772,462,4.147,463,5.091,464,4.147,521,2.4,527,1.291,789,3.025,802,4.613,804,2.129,809,4.147,815,3.365,1222,2.4,1223,3.365,1224,5.32,1225,5.32,1226,6.07,1227,6.07,1228,5.32,1229,6.07,1230,5.32,1231,5.32,1232,5.32,1233,5.32,1234,6.127,1235,5.32,1236,3.881,1237,3.881,1238,3.881,1239,4.613,1240,3.881,1241,3.881,1242,3.881,1243,3.881,1244,3.881,1245,3.881,1246,3.881,1247,3.881,1248,3.881,1249,3.881,1250,5.32,1251,5.32,1252,2.772,1253,3.881,1254,3.881]],["title/index.html",[21,0.823,899,2.301,900,2.621]],["body/index.html",[0,0.076,4,0.312,5,0.264,11,0.586,13,0.891,15,1.171,17,1.345,18,1.571,30,0.287,34,0.696,36,1.188,37,0.395,38,0.015,51,0.54,67,1.075,68,1.167,72,0.321,78,0.802,83,0.54,85,0.611,93,0.925,97,1.686,110,0.38,112,1.804,115,0.007,116,0.005,119,0.891,121,1.946,127,0.519,154,1.738,194,1.409,217,2.046,228,1.401,231,2.584,242,0.745,248,1.804,254,1.607,279,1.16,284,1.069,294,1.932,377,1.005,393,2.125,395,2.125,396,1.266,399,1.946,400,2.744,401,1.16,403,1.266,417,0.637,428,1.946,431,0.891,454,1.005,470,1.266,473,1.266,506,2.177,513,1.125,514,1.266,515,2.397,517,3.008,518,1.643,519,1.679,529,1.117,532,1.16,533,3.435,534,2.744,535,2.727,536,1.16,538,2.174,539,1.732,540,2.125,541,3.58,543,1.804,544,0.764,545,0.637,546,1.946,547,2.078,548,1.946,550,1.804,551,0.622,552,1.946,553,2.125,554,2.125,555,1.266,560,0.253,571,0.944,573,1.27,574,0.586,581,0.764,583,1.04,590,1.125,592,0.611,593,0.728,596,1.266,609,1.167,610,0.696,611,1.117,618,1.757,625,0.764,629,1.508,631,0.944,640,0.728,643,1.967,647,1.222,660,0.944,661,0.696,663,0.696,675,0.728,676,0.871,683,1.689,685,1.167,686,1.345,692,1.125,693,1.757,695,0.728,697,1.125,698,1.27,699,1.317,701,1.025,739,2.363,774,1.655,795,1.804,800,1.409,806,1.266,809,3.875,810,1.345,811,1.266,812,1.16,814,1.686,818,1.16,821,1.16,827,1.946,905,2.363,906,1.409,930,1.16,937,1.946,939,2.262,948,1.442,955,2.363,959,0.944,961,1.946,966,1.409,971,1.16,980,1.266,988,1.946,1022,1.409,1034,2.125,1062,1.266,1067,1.16,1073,2.262,1076,1.409,1083,1.686,1086,2.549,1087,0.802,1088,1.266,1089,1.409,1093,3.07,1095,3.55,1098,1.409,1099,1.409,1107,1.804,1115,1.266,1118,1.686,1128,1.409,1141,1.409,1142,1.409,1143,1.409,1144,1.409,1145,2.059,1146,1.409,1147,1.409,1148,1.584,1149,1.075,1168,1.16,1194,2.363,1195,2.125,1205,1.16,1252,1.946,1255,1.625,1256,3.521,1257,2.514,1258,1.625,1259,1.625,1260,2.725,1261,1.625,1262,1.625,1263,2.125,1264,1.625,1265,2.725,1266,3.58,1267,1.625,1268,1.625,1269,3.55,1270,3.521,1271,1.625,1272,2.363,1273,1.266,1274,1.625,1275,1.625,1276,4.122,1277,1.625,1278,2.725,1279,1.409,1280,2.725,1281,1.625,1282,1.625,1283,1.625,1284,3.04,1285,1.625,1286,1.625,1287,1.625,1288,2.725,1289,1.625,1290,1.625,1291,2.944,1292,2.363,1293,0.802,1294,2.125,1295,1.266,1296,1.16,1297,1.266,1298,1.409,1299,2.125,1300,2.125,1301,1.902,1302,1.409,1303,2.125,1304,3.521,1305,1.625,1306,1.625,1307,2.549,1308,1.686,1309,1.625,1310,6.695,1311,4.805,1312,4.122,1313,1.625,1314,1.625,1315,1.625,1316,1.625,1317,2.725,1318,1.625,1319,1.625,1320,1.625,1321,2.725,1322,1.075,1323,1.625,1324,2.725,1325,1.625,1326,1.625,1327,2.725,1328,1.625,1329,1.625,1330,1.625,1331,1.625,1332,3.521,1333,2.725,1334,1.625,1335,1.625,1336,1.409,1337,1.625,1338,1.409,1339,1.266,1340,1.625,1341,1.625,1342,1.625,1343,1.625,1344,1.625,1345,1.625,1346,1.075,1347,1.625,1348,1.625,1349,1.625,1350,1.625,1351,4.593,1352,1.409,1353,1.266,1354,2.725,1355,1.625,1356,1.075,1357,0.944,1358,1.625,1359,1.16,1360,2.725,1361,1.266,1362,1.686,1363,1.409,1364,1.409,1365,2.725,1366,1.625,1367,1.625,1368,1.409,1369,1.625,1370,1.625,1371,1.16,1372,1.625,1373,2.125,1374,1.409,1375,1.625,1376,1.625,1377,1.409,1378,1.625,1379,1.625,1380,1.625,1381,2.262,1382,1.625,1383,3.521,1384,1.625,1385,1.625,1386,1.625,1387,1.625,1388,1.625,1389,4.593,1390,1.625,1391,3.521,1392,1.625,1393,2.84,1394,1.804,1395,3.521,1396,2.125,1397,1.625,1398,2.725,1399,2.725,1400,2.549,1401,2.725,1402,2.725,1403,1.625,1404,1.409,1405,1.625,1406,3.574,1407,1.625,1408,1.625,1409,1.16,1410,1.266,1411,1.625,1412,1.409,1413,1.409,1414,3.521,1415,1.625,1416,1.625,1417,3.053,1418,2.125,1419,1.266,1420,1.409,1421,1.266,1422,1.625,1423,1.686,1424,1.625,1425,1.266,1426,1.625,1427,0.696,1428,1.16,1429,1.686,1430,1.625,1431,1.625,1432,0.891,1433,0.944,1434,0.944,1435,1.16,1436,1.686,1437,1.625,1438,1.409,1439,2.363,1440,2.725,1441,2.125,1442,1.266,1443,1.625,1444,1.625,1445,1.625,1446,1.16,1447,1.409,1448,0.944,1449,1.416,1450,1.005,1451,1.625,1452,1.625,1453,1.804,1454,1.075,1455,1.005,1456,0.844,1457,0.844,1458,1.625,1459,1.625,1460,2.725,1461,1.625,1462,1.625,1463,1.625,1464,1.804,1465,1.075,1466,1.625,1467,1.625,1468,1.409,1469,1.625,1470,1.625,1471,1.625,1472,1.625,1473,1.625,1474,2.125,1475,1.005,1476,1.625,1477,1.625,1478,1.804,1479,1.16,1480,1.625,1481,1.625,1482,1.625,1483,1.409,1484,1.804,1485,1.16,1486,1.266,1487,1.625,1488,1.16,1489,1.625,1490,1.409,1491,1.625,1492,2.363,1493,1.409,1494,0.944,1495,1.266,1496,1.625,1497,2.725,1498,1.625,1499,1.625,1500,1.625,1501,1.409,1502,1.409,1503,1.625,1504,1.409,1505,1.075,1506,1.266,1507,0.891,1508,2.725,1509,1.625,1510,1.625,1511,1.625,1512,1.625,1513,2.725,1514,2.725,1515,1.625,1516,1.625,1517,1.625,1518,1.625,1519,1.625,1520,1.625,1521,1.625,1522,1.625,1523,1.266,1524,1.625,1525,1.625,1526,1.625,1527,1.625,1528,1.625,1529,1.625,1530,1.625,1531,1.625,1532,1.625,1533,1.625,1534,1.625,1535,1.16,1536,1.625,1537,3.053,1538,1.409,1539,1.625,1540,1.625,1541,1.625,1542,1.625,1543,1.625]],["title/license.html",[899,2.301,900,2.621,1066,3.086]],["body/license.html",[18,1.427,38,0.012,115,0.012,116,0.012,218,4.405,294,2.787,375,3.96,590,1.624,619,2.508,972,2.787,1053,5.503,1176,4.405,1177,4.405,1269,3.628,1273,3.96,1339,3.96,1504,4.405,1507,2.787,1544,6.922,1545,5.08,1546,6.347,1547,5.08,1548,5.08,1549,5.08,1550,5.08,1551,5.08,1552,6.347,1553,7.874,1554,5.08,1555,5.08,1556,5.08,1557,4.582,1558,5.08,1559,3.96,1560,5.08,1561,5.08,1562,5.08,1563,5.08,1564,5.08,1565,5.08,1566,5.08,1567,6.347,1568,5.08,1569,5.08,1570,5.08,1571,5.08,1572,5.08,1573,6.347,1574,6.347,1575,5.08,1576,5.08,1577,5.08,1578,5.08,1579,5.08,1580,5.08,1581,5.08,1582,5.08,1583,5.08,1584,5.08,1585,5.08,1586,4.405,1587,5.08,1588,5.08,1589,5.08,1590,5.08,1591,5.08,1592,5.08,1593,5.08,1594,5.08,1595,4.405,1596,5.08,1597,5.08,1598,5.08,1599,5.08,1600,5.08]],["title/modules.html",[796,4.614]],["body/modules.html",[38,0.013,115,0.013,116,0.013,795,4.172,796,4.914,1535,4.501,1601,6.303,1602,6.303]],["title/overview.html",[1603,5.132]],["body/overview.html",[2,1.787,38,0.013,115,0.013,116,0.013,132,4.004,278,4.716,294,3.319,404,4.716,429,5.498,431,3.319,794,5.498,812,4.32,813,5.245,814,3.741,844,3.741,1189,4.716,1205,4.32,1603,5.245,1604,6.049,1605,7.053]],["title/properties.html",[272,2.028,1188,3.433]],["body/properties.html",[38,0.015,115,0.013,116,0.013,272,2.357,533,3.439,1066,4.886,1606,6.268,1607,6.268]],["title/miscellaneous/typealiases.html",[1222,2.449,1608,5.393]],["body/miscellaneous/typealiases.html",[21,1.143,38,0.015,40,0.932,115,0.012,116,0.012,258,3.198,748,3.642,751,4.413,754,3.403,755,3.642,756,3.403,757,3.642,758,3.642,759,3.403,760,3.642,761,3.642,762,3.642,763,3.642,764,3.642,765,3.642,766,3.403,767,3.403,768,3.642,769,3.642,770,3.642,771,3.403,772,3.403,773,3.642,774,2.586,775,3.642,776,3.642,777,3.642,1222,3.403,1609,5.503,1610,5.503]],["title/miscellaneous/variables.html",[1222,2.449,1611,4.676]],["body/miscellaneous/variables.html",[6,2.631,8,2.631,21,0.869,35,2.96,36,0.941,38,0.015,40,0.948,68,0.989,78,2.763,110,1.475,115,0.012,116,0.01,125,2.019,270,2.988,271,5.014,273,4.364,274,4.364,284,2.835,298,2.988,299,3.261,302,3.997,303,3.261,304,3.261,305,3.261,306,3.261,307,3.261,308,3.261,309,3.261,310,3.261,311,3.261,312,3.261,313,3.261,314,3.261,315,3.261,316,3.261,317,3.261,318,3.261,319,3.261,320,3.261,321,3.261,322,3.261,323,3.261,324,3.261,325,3.261,326,3.261,327,3.261,328,3.261,329,3.261,330,3.261,331,3.261,332,3.261,333,3.261,334,3.261,335,3.261,336,3.261,337,3.261,338,3.261,339,3.261,340,3.261,341,3.261,342,3.261,343,3.261,344,3.261,345,3.261,346,3.261,347,3.261,348,3.261,349,3.261,350,3.261,351,3.261,352,3.261,353,3.261,354,3.261,355,3.261,356,3.261,357,3.261,358,3.261,359,3.261,360,3.261,361,3.261,362,3.261,363,3.261,364,3.261,365,3.261,366,3.261,367,3.261,458,3.997,459,3.261,506,3.462,507,3.628,508,2.763,513,1.337,514,3.261,515,1.449,517,2.475,518,1.594,519,1.658,528,3.997,529,2.584,530,1.876,531,3.628,532,2.988,533,2.295,534,3.261,535,2.295,536,2.988,537,2.988,538,1.641,539,1.415,540,3.261,541,4.364,542,3.261,543,2.769,544,1.966,545,1.641,546,2.988,547,1.337,548,2.988,549,3.628,550,2.769,551,0.739,552,2.988,553,3.261,554,3.261,555,3.261,1222,2.587,1234,5.84,1611,3.628,1612,5.598,1613,4.184,1614,4.184,1615,4.184,1616,4.184]],["title/additional-documentation/getting-started.html",[551,0.619,560,0.545,899,2.036,900,2.318]],["body/additional-documentation/getting-started.html",[38,0.013,115,0.013,116,0.013,529,2.554,899,4.171,900,4.75,1465,4.126,1507,3.42,1617,4.859,1618,6.234]],["title/additional-documentation/preserving-state-(like-the-requested-url).html",[242,0.777,414,1.116,551,0.503,560,0.443,1619,2.468,1620,1.884]],["body/additional-documentation/preserving-state-(like-the-requested-url).html",[3,1.006,38,0.015,41,1.139,115,0.013,116,0.013,242,1.906,414,2.906,530,2.662,568,2.662,578,2.662,948,2.432,1301,1.981,1488,4.24,1523,4.629,1619,5.148,1620,4.618,1621,5.938,1622,5.938,1623,4.24,1624,5.938,1625,5.938]],["title/additional-documentation/refreshing-a-token.html",[254,0.92,551,0.619,560,0.545,1357,2.036]],["body/additional-documentation/refreshing-a-token.html",[15,2.067,17,2.426,35,2.013,36,1.533,38,0.012,115,0.012,116,0.012,119,3.74,162,2.554,202,1.702,223,3.831,231,2.554,254,1.942,284,1.928,431,2.696,449,3.253,513,1.57,529,2.546,538,2.438,539,1.868,544,2.31,547,2.179,590,1.57,596,2.094,609,2.105,610,2.105,611,2.013,622,1.848,691,2.105,692,1.57,699,1.57,939,3.74,972,3.74,1074,3.509,1082,3.509,1083,3.039,1301,1.765,1346,3.253,1356,3.253,1357,3.613,1359,4.439,1361,3.831,1394,4.114,1423,3.039,1425,3.831,1441,3.831,1449,2.554,1453,3.253,1559,3.831,1626,3.253,1627,3.509,1628,4.261,1629,4.261,1630,3.831,1631,5.389,1632,3.509,1633,4.261,1634,3.831,1635,4.261,1636,4.261,1637,4.261,1638,3.509,1639,3.831,1640,4.845,1641,3.831,1642,3.831,1643,4.845,1644,4.845,1645,3.831,1646,3.831,1647,3.831,1648,3.509,1649,3.831,1650,3.253,1651,3.831,1652,3.831,1653,3.831,1654,3.831]],["title/additional-documentation/silent-refresh.html",[551,0.619,560,0.545,576,1.374,596,1.076]],["body/additional-documentation/silent-refresh.html",[3,0.484,5,0.831,11,1.541,15,1.42,17,1.41,18,1.15,28,1.213,30,0.505,33,1.571,35,2.095,36,1.485,38,0.015,46,0.95,51,0.95,62,1.479,68,0.505,72,0.337,83,2.02,85,1.074,93,1.122,104,0.594,110,0.999,115,0.008,116,0.008,119,2.806,154,1.41,162,1.485,181,1.891,202,1.771,210,2.227,225,2.477,228,1.243,229,1.923,242,1.55,254,1.785,284,2.006,417,1.121,431,1.567,448,1.891,449,1.891,467,1.031,495,1.829,513,0.913,517,1.675,518,0.722,519,1.122,529,2.095,533,1.567,535,1.567,538,2.5,539,1.814,543,2.827,544,1.343,547,2.17,572,2.007,576,2.724,580,1.829,583,1.676,590,1.813,592,1.923,593,1.915,596,2.172,600,1.281,618,1.887,620,2.525,622,2.284,637,1.915,646,1.121,647,1.915,657,1.41,658,1.17,660,0.989,676,1.365,682,2.007,691,1.224,692,1.365,693,1.887,697,0.913,701,1.074,804,1.567,810,2.525,826,1.891,899,1.66,939,2.343,948,2.095,959,1.66,971,2.04,972,3.113,988,2.04,1067,2.04,1073,1.567,1082,2.04,1083,1.767,1084,2.477,1087,1.41,1092,2.641,1095,2.04,1145,1.915,1149,3.385,1239,2.477,1296,2.04,1301,1.929,1307,1.767,1346,1.891,1356,2.827,1357,2.973,1359,3.05,1381,3.113,1393,1.767,1394,2.827,1396,2.227,1404,2.477,1409,2.04,1410,2.227,1427,1.224,1428,2.04,1429,3.163,1432,2.806,1433,1.66,1434,1.66,1435,2.04,1436,1.767,1442,2.227,1448,1.66,1449,1.485,1450,1.767,1454,1.891,1455,1.767,1456,1.485,1457,1.485,1485,2.04,1490,3.703,1494,1.66,1505,1.891,1507,1.567,1537,2.477,1538,2.477,1557,1.891,1632,2.04,1638,2.04,1639,2.227,1640,3.329,1641,2.227,1642,2.227,1643,3.329,1644,3.329,1645,2.227,1646,2.227,1647,2.227,1648,2.04,1649,2.227,1650,1.891,1651,2.227,1652,2.227,1653,2.227,1654,2.227,1655,2.857,1656,4.271,1657,2.227,1658,3.329,1659,2.857,1660,2.857,1661,2.857,1662,2.857,1663,2.857,1664,2.857,1665,4.271,1666,5.675,1667,2.04,1668,2.857,1669,2.857,1670,2.857,1671,2.857,1672,2.857,1673,3.703,1674,2.477,1675,1.66,1676,1.891,1677,2.857,1678,2.04,1679,2.04,1680,1.66,1681,2.857,1682,2.857,1683,2.857,1684,2.477,1685,4.435,1686,3.329,1687,2.477,1688,2.857,1689,2.857,1690,2.857,1691,2.857,1692,3.987,1693,2.857,1694,2.857,1695,2.477,1696,2.857,1697,2.857,1698,2.857,1699,2.857,1700,2.857,1701,2.857,1702,2.857,1703,2.857,1704,2.857,1705,4.271,1706,2.857,1707,4.271,1708,2.477,1709,2.227,1710,3.703,1711,2.857,1712,2.857,1713,2.857,1714,2.857,1715,2.857,1716,2.857,1717,2.857,1718,2.857,1719,2.857,1720,2.857,1721,2.477,1722,2.857,1723,2.857,1724,2.227,1725,4.271,1726,2.857,1727,2.857,1728,2.857,1729,2.857,1730,2.857,1731,2.857,1732,2.227,1733,2.857,1734,2.857,1735,2.857,1736,2.857,1737,2.857,1738,2.857,1739,2.857]],["title/additional-documentation/token-refresh.html",[254,0.92,551,0.619,560,0.545,596,1.076]],["body/additional-documentation/token-refresh.html",[15,2.067,17,2.426,35,2.013,36,1.533,38,0.012,115,0.012,116,0.012,119,3.74,162,2.554,202,1.702,223,3.831,231,2.554,254,1.942,284,1.928,431,2.696,449,3.253,513,1.57,529,2.546,538,2.438,539,1.868,544,2.31,547,2.179,590,1.57,596,2.094,609,2.105,610,2.105,611,2.013,622,1.848,691,2.105,692,1.57,699,1.57,939,3.74,972,3.74,1074,3.509,1082,3.509,1083,3.039,1301,1.765,1346,3.253,1356,3.253,1357,3.613,1359,4.439,1361,3.831,1394,4.114,1423,3.039,1425,3.831,1441,3.831,1449,2.554,1453,3.253,1559,3.831,1626,3.253,1627,3.509,1628,4.261,1629,4.261,1630,3.831,1631,5.389,1632,3.509,1633,4.261,1634,3.831,1635,4.261,1636,4.261,1637,4.261,1638,3.509,1639,3.831,1640,4.845,1641,3.831,1642,3.831,1643,4.845,1644,4.845,1645,3.831,1646,3.831,1647,3.831,1648,3.509,1649,3.831,1650,3.253,1651,3.831,1652,3.831,1653,3.831,1654,3.831]],["title/additional-documentation/working-with-httpinterceptors.html",[551,0.619,560,0.545,1165,3.037,1740,3.502]],["body/additional-documentation/working-with-httpinterceptors.html",[0,0.279,10,0.991,14,1.806,18,1.173,28,1.071,38,0.015,41,1,55,3.452,62,1.306,63,1.961,68,1.269,72,0.615,84,2.069,93,1.37,104,1.492,115,0.01,116,0.01,126,1.667,127,1.205,195,2.939,196,5.184,200,1.69,202,1.806,203,3.269,204,4.483,205,3.269,206,3.031,208,3.269,209,4.522,210,2.939,211,4.522,213,3.269,214,3.957,215,3.269,216,5.184,217,2.191,227,4.661,228,1.454,229,2.547,230,3.225,231,1.96,232,2.939,233,3.724,234,2.892,235,3.269,236,1.545,239,3.269,242,1.03,243,3.269,244,3.269,245,3.269,246,3.269,247,5.594,248,4.27,249,3.269,252,3.269,254,1.571,265,3.269,266,4.522,268,3.269,284,2.046,454,2.332,467,1.36,515,1.306,517,1.479,518,0.953,519,0.991,545,1.479,571,1.806,583,1.54,590,1.205,611,1.545,646,1.479,648,1.772,666,2.56,818,2.693,821,3.724,827,3.724,829,2.693,832,2.939,833,4.065,982,3.269,1106,3.269,1292,3.269,1293,1.861,1301,1.832,1338,3.269,1339,2.939,1409,2.693,1418,2.939,1442,2.939,1446,2.693,1485,2.693,1492,4.522,1493,3.269,1494,2.191,1495,2.939,1632,2.693,1684,3.269,1741,3.771,1742,3.771,1743,3.771,1744,3.269,1745,3.269,1746,3.771,1747,3.771,1748,3.771,1749,3.771,1750,3.771,1751,3.771,1752,3.771,1753,3.771,1754,3.771,1755,4.522,1756,2.496,1757,3.771,1758,3.771,1759,3.771,1760,3.771,1761,3.771,1762,3.771,1763,3.771,1764,3.771,1765,3.269,1766,3.771,1767,2.939,1768,3.771,1769,3.771,1770,3.771,1771,3.771,1772,3.771,1773,4.065,1774,3.771,1775,3.771,1776,3.771,1777,3.771,1778,3.771,1779,3.771]],["title/additional-documentation/callback-after-login.html",[551,0.619,560,0.545,948,1.435,1780,2.73]],["body/additional-documentation/callback-after-login.html",[38,0.015,51,2.274,62,1.988,63,2.159,115,0.013,116,0.013,448,3.8,568,3.066,616,2.574,626,2.834,631,2.368,647,2.574,948,2.801,1301,1.631,1322,3.8,1479,4.1,1494,3.337,1586,4.978,1620,3.8,1623,4.1,1780,5.331,1781,5.741,1782,5.741,1783,5.741,1784,5.741,1785,5.741,1786,5.741]],["title/additional-documentation/popup-based-login.html",[551,0.555,560,0.489,580,1.345,948,1.286,1117,2.243]],["body/additional-documentation/popup-based-login.html",[17,2.73,18,1.503,38,0.014,115,0.012,116,0.012,515,1.915,527,1.839,529,2.739,535,3.034,544,3.142,574,1.995,576,2.82,580,2.863,596,1.698,611,2.265,643,2.863,664,2.73,693,1.839,981,4.795,1062,4.31,1093,3.214,1115,4.31,1149,4.426,1168,3.949,1272,4.795,1284,3.66,1293,2.73,1346,3.66,1421,4.31,1427,2.368,1455,3.42,1657,4.31,1687,4.795,1708,4.795,1732,4.31,1787,4.795,1788,5.53,1789,4.795,1790,5.53,1791,5.53,1792,5.53,1793,5.53,1794,4.31,1795,5.53,1796,5.53,1797,5.53,1798,4.31,1799,5.53]],["title/additional-documentation/custom-query-parameters.html",[37,0.763,551,0.555,560,0.489,571,1.087,637,1.408]],["body/additional-documentation/custom-query-parameters.html",[33,1.848,37,1.463,38,0.015,115,0.013,116,0.013,538,2.361,539,1.521,571,2.434,583,1.777,622,2.263,637,2.697,1153,4.297,1301,1.709,1800,5.217,1801,6.017,1802,6.017,1803,6.017,1804,6.017,1805,6.017,1806,6.017,1807,6.017]],["title/additional-documentation/events.html",[551,0.699,560,0.616,623,1.775]],["body/additional-documentation/events.html",[5,0.737,18,1.02,28,1.289,36,1.02,38,0.015,62,1.571,68,0.802,78,2.24,83,1.509,115,0.011,116,0.011,214,3.004,229,1.706,233,4.218,254,1.192,258,2.637,414,2.317,515,2.045,517,1.78,518,1.493,519,1.192,533,2.49,538,1.78,539,1.147,561,2.133,562,2.133,576,2.317,596,2.017,599,2.776,600,2.034,623,3.313,625,3.389,632,2.034,645,2.133,697,1.45,747,3.652,754,2.806,756,2.806,759,2.806,766,2.806,767,2.806,771,2.806,786,3.935,939,2.49,972,2.49,974,3.241,1073,3.24,1092,2.806,1096,3.537,1107,3.004,1117,3.241,1284,3.004,1301,1.677,1307,3.652,1308,3.652,1362,2.806,1409,3.241,1494,2.637,1535,3.241,1620,3.909,1630,4.604,1686,3.537,1709,3.537,1808,4.538,1809,4.538,1810,4.538,1811,3.935,1812,4.538,1813,4.538,1814,3.935,1815,3.935,1816,4.538,1817,4.538,1818,4.538,1819,4.538,1820,4.538,1821,3.935,1822,4.538,1823,4.538,1824,4.538,1825,4.538,1826,4.538,1827,4.538,1828,5.906,1829,7.527,1830,5.906,1831,4.538,1832,4.538,1833,4.538,1834,4.538,1835,3.935,1836,4.538,1837,4.538,1838,3.935,1839,5.906,1840,5.906,1841,4.538,1842,4.538,1843,4.538,1844,4.538,1845,4.538,1846,4.538]],["title/additional-documentation/routing-with-the-hashstrategy.html",[551,0.619,560,0.545,1118,2.166,1506,2.73]],["body/additional-documentation/routing-with-the-hashstrategy.html",[13,2.905,18,1.191,19,4.651,33,1.627,36,1.464,38,0.015,62,1.834,72,0.624,83,1.761,93,1.391,115,0.012,116,0.012,284,2.077,495,2.268,515,1.834,562,2.489,572,2.489,592,2.449,593,2.919,598,2.489,601,2.614,741,4.128,794,4.128,1083,3.275,1118,4.027,1185,4.592,1279,6.115,1301,2.09,1428,3.782,1446,3.782,1475,3.275,1484,3.505,1494,3.078,1501,4.592,1505,3.505,1506,5.076,1667,3.782,1710,6.379,1724,4.128,1732,4.128,1847,4.128,1848,5.296,1849,4.592,1850,7.052,1851,5.296,1852,5.296,1853,5.296,1854,5.296,1855,5.296,1856,5.296,1857,5.296,1858,5.296,1859,5.296,1860,4.128,1861,5.296]],["title/additional-documentation/adapt-id_token-validation.html",[51,1.044,508,1.55,551,0.555,560,0.489,1862,2.723]],["body/additional-documentation/adapt-id_token-validation.html",[11,1.875,12,2.744,30,0.918,38,0.015,51,2.141,59,3.712,60,3.712,61,3.712,62,2.229,67,4.261,68,0.918,73,1.8,78,2.566,82,2.226,84,2.852,110,1.215,115,0.012,116,0.012,506,4.325,508,3.178,513,2.057,515,1.8,517,2.039,518,1.314,519,1.366,521,3.215,545,2.526,622,2.421,640,2.33,645,2.443,646,2.039,649,3.178,660,1.8,661,2.226,665,2.566,698,1.875,699,1.661,814,3.215,969,4.052,1284,3.44,1301,1.828,1396,4.052,1427,2.226,1650,3.44,1692,4.052,1767,4.052,1789,4.507,1847,4.052,1862,4.507,1863,5.198,1864,5.198,1865,5.198,1866,5.198,1867,4.507,1868,5.198,1869,4.507,1870,5.198,1871,5.198,1872,4.507,1873,5.198,1874,5.198]],["title/additional-documentation/session-checks.html",[551,0.619,560,0.545,974,2.501,1092,2.166]],["body/additional-documentation/session-checks.html",[30,0.762,36,1.44,38,0.015,68,0.762,72,0.508,83,1.899,85,1.621,93,1.133,115,0.011,116,0.011,228,1.389,254,1.501,257,3.361,294,2.366,430,3.079,515,1.978,517,1.692,518,1.09,519,1.133,529,2.34,532,3.079,533,3.133,535,2.366,538,1.692,539,1.444,544,2.684,547,1.378,552,3.079,571,1.493,573,2.06,576,2.512,583,1.273,587,2.129,596,2.239,618,1.434,622,1.621,623,1.933,631,1.493,640,1.933,685,1.847,692,1.378,693,1.434,697,1.825,701,1.621,772,3.532,774,2.027,810,2.819,959,2.506,961,3.079,969,3.361,972,3.133,974,5.39,980,4.452,1070,3.739,1087,2.129,1092,3.96,1095,3.079,1145,3.056,1149,2.854,1257,3.079,1301,1.819,1308,2.667,1356,2.854,1362,3.532,1381,2.366,1421,3.361,1423,3.96,1427,1.847,1429,3.96,1432,3.133,1433,2.506,1436,2.667,1456,2.241,1457,2.241,1464,2.854,1484,2.854,1488,3.079,1595,3.739,1627,3.079,1650,3.78,1673,3.739,1675,2.506,1676,2.854,1680,2.506,1724,3.361,1765,3.739,1835,3.739,1849,3.739,1875,4.312,1876,4.312,1877,4.312,1878,4.312,1879,4.312,1880,4.312,1881,4.312,1882,4.312,1883,4.312,1884,4.312,1885,4.312,1886,3.361,1887,5.711,1888,4.312,1889,5.711,1890,4.312,1891,4.312,1892,4.312,1893,4.312,1894,4.312,1895,4.312,1896,4.312,1897,4.312,1898,4.312,1899,4.312,1900,4.312,1901,4.312]],["title/additional-documentation/server-side-rendering.html",[228,0.763,551,0.555,560,0.489,661,1.345,1902,2.723]],["body/additional-documentation/server-side-rendering.html",[38,0.013,115,0.013,116,0.013,228,1.799,511,5.135,515,2.051,573,2.136,661,3.169,1059,5.135,1086,3.662,1293,2.923,1299,4.616,1300,4.616,1301,1.978,1756,3.92,1773,4.616,1787,5.135,1902,6.416,1903,5.922,1904,5.922,1905,5.135,1906,5.922,1907,5.922,1908,5.922]],["title/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[515,0.769,538,0.871,539,0.561,551,0.392,560,0.346,698,0.801,699,0.71,1427,0.951,1557,1.47]],["body/additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html",[0,0.213,11,1.644,15,1.515,18,1.331,38,0.015,40,0.772,72,0.537,110,1.065,115,0.011,116,0.011,202,2.05,228,1.44,242,1.903,272,1.713,294,2.5,467,1.644,515,1.578,529,1.867,538,1.787,539,1.152,544,2.141,550,3.016,551,0.805,574,1.644,583,1.749,590,1.456,592,1.713,618,2.188,632,2.043,658,1.867,660,1.578,662,2.043,663,1.951,676,2.102,683,1.867,692,1.456,693,2.188,697,1.456,698,2.136,699,1.892,774,2.141,804,3.249,810,2.249,826,3.016,937,3.254,948,2.695,1086,2.818,1087,2.249,1145,2.654,1148,2.648,1291,3.254,1293,2.249,1301,1.294,1307,2.818,1308,2.818,1368,3.951,1373,3.552,1381,3.609,1393,3.662,1400,2.818,1427,2.536,1432,2.5,1433,2.648,1434,2.648,1448,2.648,1449,2.368,1456,2.368,1457,2.368,1465,3.016,1475,2.818,1479,3.254,1486,3.552,1507,2.5,1557,3.016,1623,3.254,1626,3.016,1658,3.552,1667,3.254,1675,3.442,1680,2.648,1794,3.552,1886,3.552,1909,3.951,1910,3.254,1911,3.254,1912,4.556,1913,4.556,1914,3.552,1915,3.254,1916,3.552,1917,3.951,1918,3.951,1919,3.951,1920,4.556,1921,4.556,1922,4.556,1923,3.951,1924,3.951,1925,4.556]],["title/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[36,0.499,508,1.097,551,0.392,560,0.346,676,0.71,698,0.801,699,0.71,810,1.097,1926,2.221]],["body/additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html",[18,1.014,30,1.039,38,0.015,64,1.696,68,0.797,72,0.532,85,1.696,93,1.185,115,0.011,116,0.011,228,1.097,242,1.966,284,1.77,417,1.77,495,2.519,508,3.232,513,1.441,515,1.562,517,1.77,518,1.14,519,1.546,578,2.022,583,1.933,592,1.696,618,1.5,646,1.77,660,1.562,676,2.3,685,1.932,692,1.88,693,1.5,697,2.092,698,2.662,699,2.358,701,2.462,810,3.425,814,3.638,948,1.848,959,2.622,1087,2.227,1145,2.637,1153,4.675,1273,3.516,1284,2.986,1301,1.281,1362,4.049,1381,3.592,1410,3.516,1429,4.049,1432,2.475,1433,2.622,1434,2.622,1435,3.221,1436,2.79,1448,2.622,1449,2.344,1450,2.79,1454,2.986,1455,2.79,1456,2.344,1457,2.344,1502,3.911,1507,2.475,1675,2.622,1676,2.986,1678,3.221,1679,3.221,1680,2.622,1821,3.911,1927,6.547,1928,4.511,1929,6.016,1930,4.511,1931,5.101,1932,4.511,1933,4.511,1934,4.511,1935,4.511,1936,4.511,1937,4.511,1938,4.511,1939,4.511,1940,4.511,1941,4.511,1942,4.511,1943,4.511,1944,3.911,1945,3.911,1946,4.511]],["title/additional-documentation/using-systemjs.html",[36,0.788,551,0.619,560,0.545,1947,3.037]],["body/additional-documentation/using-systemjs.html",[36,1.237,38,0.015,115,0.012,116,0.012,145,3.642,222,2.586,517,2.925,518,1.884,519,1.885,804,3.019,930,4.761,1168,4.761,1301,1.893,1308,3.403,1363,4.771,1686,4.289,1947,6.219,1948,5.503,1949,5.503,1950,5.503,1951,5.503,1952,6.666,1953,6.666,1954,5.503,1955,5.503,1956,5.503,1957,5.503,1958,5.503,1959,5.503,1960,5.503,1961,5.503]],["title/additional-documentation/using-implicit-flow.html",[36,0.706,538,1.232,539,0.794,551,0.555,560,0.489]],["body/additional-documentation/using-implicit-flow.html",[0,0.248,30,0.686,36,1.196,38,0.015,39,1.293,46,1.291,68,1.278,72,0.716,84,3.33,85,1.459,104,1.105,110,0.907,115,0.01,116,0.01,127,1.7,202,2.506,228,0.944,231,2.017,234,1.74,242,1.453,506,3.29,513,1.24,515,1.344,517,2.562,518,1.729,519,1.857,527,1.291,536,2.772,537,2.772,538,2.381,539,1.729,543,3.521,547,1.24,550,2.569,551,0.94,574,1.4,583,1.146,590,1.24,592,1.459,609,1.662,610,1.662,618,1.291,621,1.824,660,1.344,675,2.385,676,1.7,692,1.7,693,1.291,697,1.24,701,1.459,774,1.824,804,2.129,810,1.916,825,3.025,948,2.964,959,2.256,988,2.772,1087,1.916,1145,2.385,1148,2.256,1257,2.772,1301,1.855,1377,3.365,1381,3.33,1394,2.569,1400,2.4,1419,3.025,1427,2.278,1429,4.039,1432,2.129,1433,2.256,1434,2.256,1436,2.4,1448,2.256,1449,2.017,1450,2.4,1454,2.569,1455,2.4,1456,2.017,1457,2.017,1478,2.569,1483,3.365,1484,2.569,1505,2.569,1523,3.025,1638,2.772,1675,2.256,1676,2.569,1678,2.772,1679,2.772,1680,2.256,1755,3.365,1756,2.569,1815,3.365,1847,3.025,1860,3.025,1869,3.365,1910,4.664,1911,3.799,1962,3.881,1963,3.881,1964,3.881,1965,3.881,1966,3.881,1967,3.881,1968,3.881,1969,5.32,1970,3.881,1971,3.881,1972,3.881,1973,3.881,1974,3.881,1975,3.365,1976,3.881,1977,3.881,1978,3.365,1979,3.365,1980,3.881,1981,5.32,1982,3.881,1983,3.881,1984,3.881]],["title/additional-documentation/using-password-flow.html",[36,0.706,539,0.794,551,0.555,560,0.489,1252,2.243]],["body/additional-documentation/using-password-flow.html",[0,0.199,3,0.481,11,1.024,17,2.098,18,1.362,36,1.587,38,0.015,39,0.69,40,0.481,43,0.872,51,0.944,72,0.501,104,0.59,110,0.664,115,0.008,116,0.008,160,1.879,167,2.127,182,2.629,200,1.273,202,1.959,227,3.313,228,1.546,231,1.475,242,1.392,254,1.732,272,1.598,377,2.629,467,1.533,509,4.905,513,0.907,515,1.764,519,1.117,529,2.482,537,2.027,538,1.114,539,1.855,544,2.659,547,0.907,573,2.294,574,1.024,581,1.334,583,1.789,590,0.907,596,1.306,616,2.284,618,2.115,621,1.334,622,1.598,629,1.82,631,0.983,643,1.216,658,1.163,660,2.444,662,1.273,663,1.216,675,2.536,676,1.936,683,1.163,692,1.628,693,2.254,697,1.358,698,2.041,699,1.808,738,2.462,741,2.213,939,1.558,948,1.741,1073,1.558,1074,3.035,1086,2.629,1087,2.098,1107,3.373,1109,3.686,1117,2.027,1118,1.756,1145,2.284,1195,3.313,1252,5.041,1257,2.027,1293,2.991,1301,1.721,1307,1.756,1322,1.879,1336,3.686,1353,3.313,1357,1.65,1362,2.629,1374,3.686,1381,3.324,1400,3.151,1423,2.629,1427,2.423,1434,2.47,1438,2.462,1439,6.12,1446,3.035,1447,3.686,1448,2.47,1449,2.209,1453,3.373,1456,2.648,1457,2.648,1468,2.462,1475,1.756,1478,1.879,1479,3.639,1485,2.027,1494,1.65,1505,1.879,1557,3.373,1620,1.879,1648,2.027,1657,3.313,1667,2.027,1675,2.961,1680,2.47,1685,2.462,1692,2.213,1721,2.462,1756,1.879,1767,2.213,1814,2.462,1867,2.462,1872,3.686,1886,3.313,1910,3.035,1911,3.035,1915,3.035,1916,3.313,1917,2.462,1918,2.462,1919,2.462,1978,3.686,1979,3.686,1985,2.839,1986,2.839,1987,2.839,1988,2.839,1989,2.839,1990,2.839,1991,2.839,1992,2.839,1993,2.839,1994,2.462,1995,2.462,1996,2.839,1997,2.839,1998,2.839,1999,4.251,2000,2.839,2001,4.251,2002,4.251,2003,4.251,2004,4.251,2005,4.251,2006,4.251,2007,2.462,2008,2.839,2009,2.839,2010,2.839,2011,2.839,2012,2.839,2013,2.839,2014,2.839,2015,2.839,2016,2.839,2017,4.251,2018,2.839,2019,2.839,2020,2.839,2021,2.839,2022,2.839,2023,4.251,2024,2.839,2025,4.251,2026,2.839,2027,2.839,2028,2.839,2029,2.839,2030,2.839,2031,2.839]],["title/additional-documentation/configure-custom-oauthstorage.html",[551,0.555,560,0.489,571,1.087,666,1.345,1427,1.345]],["body/additional-documentation/configure-custom-oauthstorage.html",[0,0.288,18,1.388,36,1.388,38,0.015,68,1.091,72,0.728,104,1.01,115,0.012,116,0.012,119,2.667,144,3.789,154,2.4,217,2.825,284,1.907,455,3.789,467,1.754,515,1.683,517,1.907,518,1.229,519,1.277,535,2.667,571,2.349,574,1.754,629,2.644,646,1.907,658,2.923,662,3.374,663,2.644,666,3.056,795,3.218,806,3.789,810,3.349,811,3.789,812,3.471,814,3.006,971,4.408,1067,3.471,1205,3.471,1269,3.471,1293,2.4,1301,1.753,1400,3.818,1406,5.352,1417,5.882,1418,3.789,1419,3.789,1420,5.352,1427,2.082,1428,4.844,1507,2.667,1535,3.471,1709,3.789,1773,3.789,2032,4.861,2033,4.215,2034,4.861,2035,6.173,2036,4.861,2037,4.861]],["title/additional-documentation/manually-skipping-login-form.html",[551,0.503,560,0.443,948,1.166,1475,1.76,1478,1.884,2038,2.468]],["body/additional-documentation/manually-skipping-login-form.html",[15,1.593,18,1.375,36,1.077,38,0.015,44,1.727,83,2.033,104,1.4,110,1.12,115,0.011,116,0.011,228,1.164,242,1.308,254,1.607,257,3.733,535,2.627,539,1.21,546,3.42,551,0.846,558,2.874,568,2.147,574,1.727,590,1.53,600,2.147,629,2.051,648,2.251,676,1.53,693,1.593,937,3.42,948,1.962,972,2.627,1061,4.152,1073,2.627,1092,2.962,1105,4.152,1107,3.17,1110,4.152,1145,2.147,1148,2.783,1301,1.737,1307,2.962,1322,3.17,1353,3.733,1423,2.962,1450,2.962,1475,2.962,1478,3.17,1484,3.17,1488,3.42,1780,3.733,1811,4.152,1838,4.152,1860,3.733,1905,4.152,1975,4.152,2038,4.152,2039,6.114,2040,4.789,2041,4.789,2042,4.789,2043,6.114,2044,4.789,2045,6.114,2046,4.789,2047,4.789,2048,4.789,2049,4.789,2050,4.789,2051,4.789,2052,4.789,2053,4.789,2054,4.789,2055,4.789,2056,4.789,2057,4.789,2058,4.789,2059,4.789]],["title/additional-documentation/original-config-api.html",[551,0.555,560,0.489,804,1.723,1393,1.942,1626,2.079]],["body/additional-documentation/original-config-api.html",[0,0.2,15,1.423,18,0.962,30,0.756,35,1.753,38,0.015,39,1.04,72,0.504,110,1.001,112,2.832,115,0.011,116,0.011,200,1.918,202,1.968,228,1.551,242,1.743,254,1.124,272,1.609,467,2.05,508,3.149,513,1.367,515,1.482,518,1.082,519,1.124,529,1.753,544,2.011,548,3.056,551,0.756,583,1.678,590,1.816,592,1.609,616,1.918,618,2.122,632,1.918,660,1.482,676,2.039,692,1.367,693,2.26,697,1.367,698,2.452,699,2.172,701,1.609,804,3.729,810,2.112,826,2.832,939,2.348,948,2.614,1073,2.348,1086,3.514,1087,2.112,1096,3.336,1118,2.646,1145,1.918,1148,2.487,1291,3.056,1301,1.215,1308,2.646,1311,3.71,1322,2.832,1373,3.336,1381,3.5,1393,4.203,1400,3.514,1412,3.71,1413,3.71,1427,1.833,1432,2.348,1433,2.487,1434,2.487,1435,3.056,1448,2.487,1449,2.224,1450,2.646,1454,2.832,1455,2.646,1456,2.224,1457,2.224,1465,2.832,1486,3.336,1507,2.348,1617,3.336,1623,3.056,1626,3.761,1627,3.056,1658,4.43,1675,2.487,1676,2.832,1678,3.056,1679,3.056,1680,2.487,1744,3.71,1745,3.71,1794,3.336,1909,3.71,1910,3.056,1911,3.056,1914,3.336,1915,3.056,1916,3.336,1923,3.71,1924,3.71,1929,4.927,1931,3.71,1944,3.71,1945,3.71,1994,3.71,1995,3.71,2007,3.71,2060,4.279,2061,4.279,2062,4.279,2063,4.279,2064,4.279,2065,4.279,2066,4.279,2067,4.279,2068,4.279]],["title/additional-documentation/authorization-servers.html",[551,0.619,560,0.545,1474,2.73,2069,3.037]],["body/additional-documentation/authorization-servers.html",[36,1.342,38,0.013,115,0.013,116,0.013,518,1.509,618,1.985,631,2.423,685,2.556,697,1.908,961,4.263,1093,3.469,1352,5.176,1364,5.176,1474,5.787,1634,4.653,1674,5.176,1756,3.951,1798,4.653,2033,5.176,2070,5.969,2071,6.998,2072,5.969,2073,5.969,2074,5.969]],["title/additional-documentation/authorization-servers/using-identity-server.html",[36,0.706,228,0.763,551,0.555,560,0.489,1145,1.408]],["body/additional-documentation/authorization-servers/using-identity-server.html",[36,1.398,38,0.013,115,0.013,116,0.013,228,1.742,631,2.153,1093,3.613,1145,3.212,1293,3.069,1371,4.439,1464,4.115]],["title/additional-documentation/authorization-servers/using-keycloak.html",[36,0.788,551,0.619,560,0.545,1263,2.73]],["body/additional-documentation/authorization-servers/using-keycloak.html",[36,1.406,38,0.013,115,0.013,116,0.013,631,2.164,1093,3.633,1263,5.603,1293,3.086,1371,4.464,1464,4.138]],["title/additional-documentation/authorization-servers/auth0.html",[551,0.699,560,0.616,1266,3.086]],["body/additional-documentation/authorization-servers/auth0.html",[5,0.765,18,1.36,36,1.503,37,1.145,38,0.015,39,1.145,41,0.903,68,0.832,72,0.555,85,1.771,93,1.237,115,0.011,116,0.011,254,1.756,294,2.583,377,3.741,517,2.373,518,1.529,519,1.589,529,1.929,547,1.933,551,0.832,583,1.391,596,1.858,631,1.63,643,2.017,646,1.847,660,1.63,676,1.505,683,2.478,692,1.505,697,1.505,701,1.771,774,2.843,899,2.737,959,2.737,964,5.245,1034,3.671,1073,2.583,1087,2.324,1088,3.671,1093,2.737,1148,3.516,1153,3.363,1266,5.497,1269,3.363,1293,2.324,1301,1.898,1303,3.671,1357,2.737,1362,3.741,1371,3.363,1393,2.912,1427,2.59,1429,4.133,1432,2.583,1436,2.912,1453,3.117,1456,2.447,1457,2.447,1464,3.117,1465,3.117,1495,3.671,1617,3.671,1695,4.083,1798,4.715,1800,4.083,1914,3.671,1915,3.363,2069,4.083,2075,4.709,2076,4.709,2077,4.709,2078,6.049,2079,6.049,2080,4.709,2081,4.709,2082,4.709,2083,4.709,2084,4.709,2085,4.709,2086,4.709,2087,4.709,2088,4.709,2089,6.049,2090,6.049,2091,4.709,2092,4.709,2093,4.709,2094,4.709,2095,4.709]],["title/additional-documentation/authorization-servers/azure-ad-(active-directory).html",[551,0.503,560,0.443,1294,2.218,1295,2.218,1296,2.032,1297,2.218]],["body/additional-documentation/authorization-servers/azure-ad-(active-directory).html",[36,1.586,38,0.013,115,0.013,116,0.013,515,2.095,560,0.941,1291,4.32,1294,5.819,1295,4.716,1296,4.32,1297,5.498,1298,5.245,1299,5.498,1300,5.498,1301,1.718,1302,5.245,1303,4.716]]],"invertedIndex":[["",{"_index":38,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["0",{"_index":162,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"injectables/UrlHelperService.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["0.1.3",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["0.1.4",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["0.14.2",{"_index":1221,"title":{},"body":{"dependencies.html":{}}}],["0.33",{"_index":1652,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["0.5",{"_index":1649,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["026dcb3",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":1139,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1136,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1134,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["07bb62d",{"_index":1132,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":1135,"title":{},"body":{"changelog.html":{}}}],["0c0a4a7",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["0f03d39",{"_index":1116,"title":{},"body":{"changelog.html":{}}}],["0x06ca6351",{"_index":334,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x0fc19dc6",{"_index":322,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x106aa070",{"_index":351,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x12835b01",{"_index":313,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x14292967",{"_index":335,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x19a4c116",{"_index":352,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x1e376c08",{"_index":353,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x20000000",{"_index":423,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["0x240ca1cc",{"_index":323,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x243185be",{"_index":314,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2748774c",{"_index":354,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x27b70a85",{"_index":336,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2de92c6f",{"_index":324,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x2e1b2138",{"_index":337,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x34b0bcb5",{"_index":355,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x391c0cb3",{"_index":356,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x3956c25b",{"_index":308,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x428a2f98",{"_index":304,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4a7484aa",{"_index":325,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4d2c6dfc",{"_index":338,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x4ed8aa4a",{"_index":357,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x53380d13",{"_index":339,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x550c7dc3",{"_index":315,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x59f111f1",{"_index":309,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x5b9cca4f",{"_index":358,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x5cb0a9dc",{"_index":326,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x650a7354",{"_index":340,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x682e6ff3",{"_index":359,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x71374491",{"_index":305,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x72be5d74",{"_index":316,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x748f82ee",{"_index":360,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x766a0abb",{"_index":341,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x76f988da",{"_index":327,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x78a5636f",{"_index":361,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x80deb1fe",{"_index":317,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x81c2c92e",{"_index":342,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x84c87814",{"_index":362,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x8cc70208",{"_index":363,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x90befffa",{"_index":364,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x923f82a4",{"_index":310,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x92722c85",{"_index":343,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x983e5152",{"_index":328,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0x9bdc06a7",{"_index":318,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa2bfe8a1",{"_index":344,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa4506ceb",{"_index":365,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa81a664b",{"_index":345,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xa831c66d",{"_index":329,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xab1c5ed5",{"_index":311,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xb00327c8",{"_index":330,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xb5c0fbcf",{"_index":306,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xbef9a3f7",{"_index":366,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xbf597fc7",{"_index":331,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc19bf174",{"_index":319,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc24b8b70",{"_index":346,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc67178f2",{"_index":367,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc6e00bf3",{"_index":332,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xc76c51a3",{"_index":347,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd192e819",{"_index":348,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd5a79147",{"_index":333,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd6990624",{"_index":349,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xd807aa98",{"_index":312,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xe49b69c1",{"_index":320,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xe9b5dba5",{"_index":307,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xefbe4786",{"_index":321,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xf40e3585",{"_index":350,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["0xff",{"_index":426,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["1",{"_index":431,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"injectables/UrlHelperService.html":{},"index.html":{},"overview.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["1.0",{"_index":1879,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["1.3.0",{"_index":1207,"title":{},"body":{"dependencies.html":{}}}],["1.4.3",{"_index":1202,"title":{},"body":{"dependencies.html":{}}}],["1.5.1",{"_index":1204,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":393,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["10.0.0",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["10.2.0",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["10.3.0",{"_index":1208,"title":{},"body":{"dependencies.html":{}}}],["10.x",{"_index":1317,"title":{},"body":{"index.html":{}}}],["1061",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":401,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["12",{"_index":1315,"title":{},"body":{"index.html":{}}}],["12.0.0",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["12.x",{"_index":1316,"title":{},"body":{"index.html":{}}}],["13",{"_index":403,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["13.x",{"_index":1314,"title":{},"body":{"index.html":{}}}],["132c624",{"_index":1063,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":1312,"title":{},"body":{"index.html":{}}}],["14.x",{"_index":1313,"title":{},"body":{"index.html":{}}}],["15",{"_index":395,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["15.0.0",{"_index":1606,"title":{},"body":{"properties.html":{}}}],["15.0.1",{"_index":1203,"title":{},"body":{"dependencies.html":{}}}],["15.x",{"_index":1309,"title":{},"body":{"index.html":{}}}],["16",{"_index":399,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["169d749",{"_index":1035,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":391,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["17.0.0",{"_index":1191,"title":{},"body":{"dependencies.html":{}}}],["17.0.2",{"_index":1211,"title":{},"body":{"dependencies.html":{}}}],["18",{"_index":397,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["1816e7b",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":392,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["1_0.html#tokenendpoint",{"_index":687,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1_0.html#userinfo",{"_index":694,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["1cae011",{"_index":1111,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":97,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["2.0",{"_index":1425,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["2.0.0",{"_index":1217,"title":{},"body":{"dependencies.html":{}}}],["2.1",{"_index":1257,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["2.3.0",{"_index":1219,"title":{},"body":{"dependencies.html":{}}}],["2.9.2",{"_index":1199,"title":{},"body":{"dependencies.html":{}}}],["2/oidc",{"_index":1509,"title":{},"body":{"index.html":{}}}],["20",{"_index":1538,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["20.000",{"_index":1738,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["2017",{"_index":1545,"title":{},"body":{"license.html":{}}}],["2020",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":404,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["2204c5a",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":1137,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":425,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["25",{"_index":402,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["256",{"_index":300,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{}}}],["28",{"_index":1140,"title":{},"body":{"changelog.html":{}}}],["2nd",{"_index":2093,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["3",{"_index":398,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["3.1",{"_index":1741,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["3.4.1",{"_index":1206,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["31c6273",{"_index":1104,"title":{},"body":{"changelog.html":{}}}],["32",{"_index":298,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["38c7c3f",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["3d331f2",{"_index":1133,"title":{},"body":{"changelog.html":{}}}],["3f44eca",{"_index":1119,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":430,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["4.3",{"_index":1278,"title":{},"body":{"index.html":{}}}],["4.x",{"_index":1321,"title":{},"body":{"index.html":{}}}],["401",{"_index":1749,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["403",{"_index":1750,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["40f5ae5",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["415e053",{"_index":1001,"title":{},"body":{"changelog.html":{}}}],["4202",{"_index":1384,"title":{},"body":{"index.html":{}}}],["4202]/index.html",{"_index":1385,"title":{},"body":{"index.html":{}}}],["4202]/silent",{"_index":1386,"title":{},"body":{"index.html":{}}}],["429ed2c",{"_index":1100,"title":{},"body":{"changelog.html":{}}}],["4607d55",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["4711",{"_index":1805,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["4bf8901",{"_index":1097,"title":{},"body":{"changelog.html":{}}}],["4def1c1",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["4th",{"_index":1679,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["5",{"_index":429,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["5.x",{"_index":1324,"title":{},"body":{"index.html":{}}}],["51e438a",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["58a8132",{"_index":1056,"title":{},"body":{"changelog.html":{}}}],["58c6354",{"_index":1091,"title":{},"body":{"changelog.html":{}}}],["59f65d2",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["5c5288c",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":400,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["6.6.7",{"_index":1214,"title":{},"body":{"dependencies.html":{}}}],["61sdfs.eu.auth0.com",{"_index":2080,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["61sdfs.eu.auth0.com/v2/logout",{"_index":2084,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["64",{"_index":299,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["65c2b95",{"_index":1060,"title":{},"body":{"changelog.html":{}}}],["678ff95",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["687",{"_index":1112,"title":{},"body":{"changelog.html":{}}}],["7",{"_index":396,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["7.8.0",{"_index":1212,"title":{},"body":{"dependencies.html":{}}}],["7.x",{"_index":1320,"title":{},"body":{"index.html":{}}}],["7009",{"_index":1143,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["70fd826",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["71b705c",{"_index":1124,"title":{},"body":{"changelog.html":{}}}],["728",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["735",{"_index":1166,"title":{},"body":{"changelog.html":{}}}],["741",{"_index":1160,"title":{},"body":{"changelog.html":{}}}],["75",{"_index":1641,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["755",{"_index":1151,"title":{},"body":{"changelog.html":{}}}],["773",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["77cb37a",{"_index":1102,"title":{},"body":{"changelog.html":{}}}],["7a15194",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["7eac8ae",{"_index":1127,"title":{},"body":{"changelog.html":{}}}],["8",{"_index":428,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["8.0.12",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["8.0.19",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["8.x",{"_index":1319,"title":{},"body":{"index.html":{}}}],["808969225",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["825",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["84d95a7",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["8ab853b",{"_index":1081,"title":{},"body":{"changelog.html":{}}}],["8fa99ff",{"_index":1121,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":534,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["9.0.0",{"_index":1531,"title":{},"body":{"index.html":{}}}],["9.1.0",{"_index":1144,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["9.2",{"_index":999,"title":{},"body":{"changelog.html":{}}}],["9.2.0",{"_index":1138,"title":{},"body":{"changelog.html":{}}}],["9.2.1",{"_index":1013,"title":{},"body":{"changelog.html":{}}}],["9.2.2",{"_index":1015,"title":{},"body":{"changelog.html":{}}}],["9.3.0",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["9.x",{"_index":1318,"title":{},"body":{"index.html":{}}}],["92ee76d",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["93902a5",{"_index":1085,"title":{},"body":{"changelog.html":{}}}],["970",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["972",{"_index":929,"title":{},"body":{"changelog.html":{}}}],["9761bad",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["9]{3",{"_index":108,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["9e257d0",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["9e95c73",{"_index":1044,"title":{},"body":{"changelog.html":{}}}],["_restorestate",{"_index":490,"title":{},"body":{"classes/Hash.html":{}}}],["_restorestate(from",{"_index":496,"title":{},"body":{"classes/Hash.html":{}}}],["_savestate",{"_index":491,"title":{},"body":{"classes/Hash.html":{}}}],["_savestate(out",{"_index":440,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["_throw(err",{"_index":1760,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["a021627fd9d3the",{"_index":1906,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["a05bd8a",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":1507,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["abstract",{"_index":10,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["abstraction",{"_index":150,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["abstractvalidationhandler",{"_index":1,"title":{"classes/AbstractValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["accept",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["access",{"_index":1107,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["access_token",{"_index":63,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{}}}],["accesstoken",{"_index":75,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["according",{"_index":1141,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["account",{"_index":2076,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["acr_values_supported",{"_index":713,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["action",{"_index":1595,"title":{},"body":{"license.html":{},"additional-documentation/session-checks.html":{}}}],["activate",{"_index":1887,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["activated",{"_index":1880,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["active",{"_index":1295,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["actual",{"_index":575,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ad",{"_index":1297,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["adapt",{"_index":1862,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["add",{"_index":971,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["added",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["adding",{"_index":1950,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["addition",{"_index":1884,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["additional",{"_index":560,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["adhere",{"_index":1939,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["adjust",{"_index":1645,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["advanced",{"_index":1695,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["against",{"_index":61,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["alert(1",{"_index":180,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["alg",{"_index":49,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.match(/^.s[0",{"_index":107,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["alg.substr(2",{"_index":114,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithm",{"_index":29,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["algorithms",{"_index":152,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["aliases",{"_index":1609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alice/alice",{"_index":1379,"title":{},"body":{"index.html":{}}}],["align",{"_index":1422,"title":{},"body":{"index.html":{}}}],["allocate",{"_index":477,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["allow",{"_index":1082,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["allowedurls",{"_index":827,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["allows",{"_index":879,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["already",{"_index":13,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["alternative",{"_index":1681,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["although",{"_index":2002,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ambient",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["analyzing",{"_index":1187,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1565,"title":{},"body":{"license.html":{}}}],["angular",{"_index":517,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["angular/animations",{"_index":1190,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":808,"title":{},"body":{"modules/OAuthModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":217,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["angular/compiler",{"_index":1192,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":127,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["angular/forms",{"_index":1193,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1194,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["angular/router",{"_index":1197,"title":{},"body":{"dependencies.html":{}}}],["another",{"_index":1667,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["any).array(valuetohash",{"_index":173,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["anymore",{"_index":634,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["aot",{"_index":2034,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["api",{"_index":1393,"title":{"additional-documentation/original-config-api.html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["api's",{"_index":2085,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["apis",{"_index":1390,"title":{},"body":{"index.html":{}}}],["app",{"_index":1148,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["app's",{"_index":2081,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["app.component.html",{"_index":1970,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["app/app.component",{"_index":1401,"title":{},"body":{"index.html":{}}}],["app/home.html",{"_index":1974,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["appcomponent",{"_index":1400,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["applicable",{"_index":1842,"title":{},"body":{"additional-documentation/events.html":{}}}],["application",{"_index":543,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["applications",{"_index":552,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/session-checks.html":{}}}],["appmodule",{"_index":1420,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["approach",{"_index":1672,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["approutermodule",{"_index":1854,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["arbitrary",{"_index":1702,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["argument",{"_index":1522,"title":{},"body":{"index.html":{}}}],["arising",{"_index":1598,"title":{},"body":{"license.html":{}}}],["arr",{"_index":1243,"title":{},"body":{"miscellaneous/functions.html":{}}}],["array",{"_index":454,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["arraybuffer",{"_index":138,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["aspnetcore",{"_index":1908,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["asset",{"_index":1720,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["assets",{"_index":1723,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["associated",{"_index":1554,"title":{},"body":{"license.html":{}}}],["asstring",{"_index":92,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["assumes",{"_index":1372,"title":{},"body":{"index.html":{}}}],["async",{"_index":25,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["at_hash",{"_index":60,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["athash",{"_index":98,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["attacks",{"_index":603,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["attempts",{"_index":1703,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["audience",{"_index":2086,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["auth",{"_index":618,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{}}}],["auth.config",{"_index":1966,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["auth0",{"_index":1266,"title":{"additional-documentation/authorization-servers/auth0.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["auth0's",{"_index":2087,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["auth_config",{"_index":1612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authcodeflowconfig",{"_index":1430,"title":{},"body":{"index.html":{}}}],["authconfig",{"_index":1429,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["authenticated",{"_index":1905,"title":{},"body":{"additional-documentation/server-side-rendering.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["authentication",{"_index":1537,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["authorization",{"_index":2069,"title":{"additional-documentation/authorization-servers.html":{}},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["authorization_endpoint",{"_index":702,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["authorizations",{"_index":2071,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["authors",{"_index":1588,"title":{},"body":{"license.html":{}}}],["authstorage",{"_index":1772,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["automate",{"_index":1489,"title":{},"body":{"index.html":{}}}],["automatic",{"_index":1077,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":1356,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["available",{"_index":1535,"title":{},"body":{"index.html":{},"modules.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["avoid",{"_index":601,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["await",{"_index":89,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["awesome",{"_index":1184,"title":{},"body":{"changelog.html":{}}}],["azure",{"_index":1294,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["b",{"_index":160,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["b486546",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["b64decodeunicode",{"_index":1224,"title":{},"body":{"miscellaneous/functions.html":{}}}],["b64decodeunicode(str",{"_index":1238,"title":{},"body":{"miscellaneous/functions.html":{}}}],["back",{"_index":1794,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["backend",{"_index":1262,"title":{},"body":{"index.html":{}}}],["backwards",{"_index":2061,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["base",{"_index":1931,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["base64",{"_index":70,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"dependencies.html":{}}}],["base64urlencode",{"_index":69,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{}}}],["base64urlencode(leftmosthalf",{"_index":99,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["base64urlencode(str",{"_index":1240,"title":{},"body":{"miscellaneous/functions.html":{}}}],["based",{"_index":1117,"title":{"additional-documentation/popup-based-login.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["bases",{"_index":1415,"title":{},"body":{"index.html":{}}}],["bbff95b",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["bearer",{"_index":265,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["beaugrand",{"_index":1949,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["beeing",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":939,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["beginning",{"_index":532,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/session-checks.html":{}}}],["behavior",{"_index":2074,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["below",{"_index":2000,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["best",{"_index":609,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["better",{"_index":1987,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["between",{"_index":1648,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["big",{"_index":1169,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1892,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["bitlenhi",{"_index":422,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bitlenlo",{"_index":424,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["blocked",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["blockers",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["blocksize",{"_index":273,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["blog",{"_index":1299,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["bob/bob",{"_index":1378,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":236,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["bootstrap",{"_index":1205,"title":{},"body":{"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bootstrapapplication",{"_index":1398,"title":{},"body":{"index.html":{}}}],["bootstrapapplication(appcomponent",{"_index":1402,"title":{},"body":{"index.html":{}}}],["bootstrapping",{"_index":1467,"title":{},"body":{"index.html":{}}}],["breaking",{"_index":1513,"title":{},"body":{"index.html":{}}}],["brecht",{"_index":1171,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":1602,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1195,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["browsers",{"_index":1370,"title":{},"body":{"index.html":{}}}],["buffer",{"_index":140,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["buffer.length",{"_index":480,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bufpos",{"_index":479,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["bug",{"_index":905,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["bugfixes",{"_index":1335,"title":{},"body":{"index.html":{}}}],["build",{"_index":1067,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["bump",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["bundle",{"_index":554,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["bundling",{"_index":1283,"title":{},"body":{"index.html":{}}}],["button",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["bytearray",{"_index":143,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["bytearray].map(value",{"_index":187,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["byteshashed",{"_index":419,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["c",{"_index":375,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"license.html":{}}}],["c2b2753",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["c799ead",{"_index":1108,"title":{},"body":{"changelog.html":{}}}],["c9a2c55",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["ca435c0",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["cae715e",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["calchash",{"_index":20,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["calchash(valuetohash",{"_index":27,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["calculates",{"_index":32,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["call",{"_index":1394,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["callback",{"_index":1780,"title":{"additional-documentation/callback-after-login.html":{}},"body":{"additional-documentation/callback-after-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["called",{"_index":616,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["calling",{"_index":1488,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["calls",{"_index":822,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"changelog.html":{}}}],["cand",{"_index":179,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["candhash",{"_index":171,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["care",{"_index":1632,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["carefully",{"_index":531,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["carlier",{"_index":1172,"title":{},"body":{"changelog.html":{}}}],["carry",{"_index":2044,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["case",{"_index":1494,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["cases",{"_index":1692,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["catch",{"_index":1500,"title":{},"body":{"index.html":{}}}],["catch(err",{"_index":1729,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["catcherror",{"_index":220,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["change",{"_index":1514,"title":{},"body":{"index.html":{}}}],["changelog",{"_index":901,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changes",{"_index":1070,"title":{},"body":{"changelog.html":{},"additional-documentation/session-checks.html":{}}}],["charactes",{"_index":880,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["charge",{"_index":1549,"title":{},"body":{"license.html":{}}}],["check",{"_index":600,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["check_session_iframe",{"_index":707,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["checks",{"_index":1092,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["checkurl(url",{"_index":235,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["chore",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["chore(deps",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["chore(release",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":1764,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["cites",{"_index":2003,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["cjs",{"_index":1958,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["claim",{"_index":1591,"title":{},"body":{"license.html":{}}}],["claim_types_supported",{"_index":725,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims",{"_index":675,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims.given_name",{"_index":1979,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["claims_parameter_supported",{"_index":727,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claims_supported",{"_index":726,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["claimsathash",{"_index":100,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["class",{"_index":0,"title":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"overview.html":{}}}],["clean",{"_index":275,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["clear",{"_index":630,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["clears",{"_index":1471,"title":{},"body":{"index.html":{}}}],["cli",{"_index":1718,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["cli.json",{"_index":1722,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["click",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":660,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["client_id",{"_index":2089,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["clientid",{"_index":1436,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["clientids",{"_index":1380,"title":{},"body":{"index.html":{}}}],["closes",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":547,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["code_challenge",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["code_error",{"_index":762,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["codeflow",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["codes",{"_index":1748,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["collisions",{"_index":474,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["come",{"_index":1674,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers.html":{}}}],["commands",{"_index":1349,"title":{},"body":{"index.html":{}}}],["commit",{"_index":1075,"title":{},"body":{"changelog.html":{}}}],["commonjs",{"_index":1282,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":807,"title":{},"body":{"modules/OAuthModule.html":{}}}],["communication",{"_index":1733,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["community",{"_index":1272,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["compat",{"_index":1213,"title":{},"body":{"dependencies.html":{}}}],["compatibility",{"_index":1413,"title":{},"body":{"index.html":{},"additional-documentation/original-config-api.html":{}}}],["compatible",{"_index":644,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["compensates",{"_index":1662,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["complex",{"_index":1713,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["compliant",{"_index":2070,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["compodoc/compodoc",{"_index":1350,"title":{},"body":{"index.html":{}}}],["component",{"_index":1910,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["components",{"_index":1391,"title":{},"body":{"index.html":{}}}],["conditions",{"_index":1572,"title":{},"body":{"license.html":{}}}],["config",{"_index":804,"title":{"additional-documentation/original-config-api.html":{}},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["configuration",{"_index":1362,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["configure",{"_index":1427,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["configured",{"_index":988,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["configuring",{"_index":1638,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["connect",{"_index":685,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers.html":{}}}],["connection",{"_index":1599,"title":{},"body":{"license.html":{}}}],["considered",{"_index":1526,"title":{},"body":{"index.html":{}}}],["consistent",{"_index":1944,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["console",{"_index":645,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["console.debug(\"logged",{"_index":1785,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.debug('given_name",{"_index":2025,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('hash",{"_index":177,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["console.debug('ok",{"_index":2031,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["console.debug('refresh",{"_index":1727,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["console.debug('state",{"_index":1624,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["console.debug('your",{"_index":1900,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["console.debug(context",{"_index":1786,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["console.error('actual",{"_index":103,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('exptected",{"_index":102,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["console.error('refresh",{"_index":1730,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["console.error(err",{"_index":557,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["console.error(event",{"_index":1825,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.log(e));or",{"_index":1817,"title":{},"body":{"additional-documentation/events.html":{}}}],["console.warn(event",{"_index":1826,"title":{},"body":{"additional-documentation/events.html":{}}}],["const",{"_index":85,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["constants",{"_index":301,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["constructor",{"_index":200,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["constructor(key",{"_index":280,"title":{},"body":{"classes/HMAC.html":{}}}],["constructor(oauthservice",{"_index":201,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["constructor(private",{"_index":1911,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["constructor(readonly",{"_index":778,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["constructor(type",{"_index":750,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["contain",{"_index":1332,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1860,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["context",{"_index":1782,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["contract",{"_index":1596,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1343,"title":{},"body":{"index.html":{}}}],["contributer",{"_index":1024,"title":{},"body":{"changelog.html":{}}}],["contributers",{"_index":1170,"title":{},"body":{"changelog.html":{}}}],["contribution",{"_index":1788,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["contributions",{"_index":1337,"title":{},"body":{"index.html":{}}}],["contributors",{"_index":1543,"title":{},"body":{"index.html":{}}}],["control",{"_index":2040,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["controls",{"_index":635,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["convenience",{"_index":1460,"title":{},"body":{"index.html":{}}}],["cookie",{"_index":1669,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["cookies",{"_index":1090,"title":{},"body":{"changelog.html":{}}}],["copied",{"_index":1717,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["copies",{"_index":1567,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1552,"title":{},"body":{"license.html":{}}}],["copying",{"_index":1065,"title":{},"body":{"changelog.html":{}}}],["copyright",{"_index":1544,"title":{},"body":{"license.html":{}}}],["core",{"_index":686,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{}}}],["correctly",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["corrupted",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":2095,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["cought",{"_index":1759,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["counter",{"_index":446,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["counter[0",{"_index":457,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["counterparts",{"_index":1524,"title":{},"body":{"index.html":{}}}],["create",{"_index":664,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/popup-based-login.html":{}}}],["created",{"_index":1305,"title":{},"body":{"index.html":{}}}],["createdefaultlogger",{"_index":1227,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createdefaultstorage",{"_index":1229,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creates",{"_index":1763,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["credentials",{"_index":2020,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["credits",{"_index":1258,"title":{},"body":{"index.html":{}}}],["critical",{"_index":1334,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1715,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["crypto",{"_index":151,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["ctr[1",{"_index":482,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ctr[2",{"_index":483,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ctr[3",{"_index":484,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["current",{"_index":1423,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["cust",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":571,"title":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customhashfragment",{"_index":563,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["customize",{"_index":2032,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["customparameters",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["customqueryparams",{"_index":1800,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["customredirecturi",{"_index":564,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["customurlvalidation",{"_index":828,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["cycle",{"_index":1328,"title":{},"body":{"index.html":{}}}],["d",{"_index":159,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"changelog.html":{}}}],["da16494",{"_index":963,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1592,"title":{},"body":{"license.html":{}}}],["daniel",{"_index":1173,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":167,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{},"additional-documentation/using-password-flow.html":{}}}],["data.length",{"_index":504,"title":{},"body":{"classes/Hash.html":{}}}],["data[datapos",{"_index":407,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["datalength",{"_index":408,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["datapos",{"_index":412,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["date",{"_index":123,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["date.now",{"_index":130,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider",{"_index":117,"title":{"classes/DateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{}}}],["datetimeprovider:10",{"_index":850,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["datetimeprovider:14",{"_index":849,"title":{},"body":{"injectables/SystemDateTimeProvider.html":{}}}],["deal",{"_index":1556,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1600,"title":{},"body":{"license.html":{}}}],["debug",{"_index":785,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["debug(message",{"_index":651,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["debugging",{"_index":1813,"title":{},"body":{"additional-documentation/events.html":{}}}],["decide",{"_index":1873,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["declarations",{"_index":812,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["decodekey",{"_index":883,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodekey(k",{"_index":887,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(hash",{"_index":861,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["decodeuricomponent(k",{"_index":897,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeuricomponent(v",{"_index":898,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodeutf8",{"_index":1230,"title":{},"body":{"miscellaneous/functions.html":{}}}],["decodeutf8(s",{"_index":155,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/functions.html":{}}}],["decodevalue",{"_index":884,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["decodevalue(v",{"_index":889,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["default",{"_index":284,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["defaultextension",{"_index":1959,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["defaulthashhandler",{"_index":131,"title":{"injectables/DefaultHashHandler.html":{}},"body":{"injectables/DefaultHashHandler.html":{}}}],["defaultoauthinterceptor",{"_index":195,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["defaults",{"_index":1677,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["define",{"_index":1719,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["defined",{"_index":30,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["defines",{"_index":612,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["deleted",{"_index":1883,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["demand",{"_index":1336,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demands",{"_index":1438,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["demo",{"_index":1087,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["demonstration",{"_index":1783,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["dep",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["dependancy",{"_index":1101,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":1189,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":545,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["depending",{"_index":1462,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":621,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["deps",{"_index":1953,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["described",{"_index":1657,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["describes",{"_index":2060,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["description",{"_index":9,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["design",{"_index":2028,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["details",{"_index":1096,"title":{},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/original-config-api.html":{}}}],["detects",{"_index":617,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["different",{"_index":1821,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["digest",{"_index":276,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["digestlength",{"_index":274,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["directed",{"_index":2056,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["directly",{"_index":1485,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["directory",{"_index":1296,"title":{"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["disable",{"_index":598,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["disableathashcheck",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["disabled",{"_index":1833,"title":{},"body":{"additional-documentation/events.html":{}}}],["disablenoncecheck",{"_index":565,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["disableoauth2statecheck",{"_index":566,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["discovery",{"_index":698,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["discovery_document_load_error",{"_index":757,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["discovery_document_loaded",{"_index":754,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["discovery_document_validation_error",{"_index":758,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["display",{"_index":1480,"title":{},"body":{"index.html":{}}}],["display_values_supported",{"_index":724,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["displayed",{"_index":633,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["distribute",{"_index":1563,"title":{},"body":{"license.html":{}}}],["dklen",{"_index":1251,"title":{},"body":{"miscellaneous/functions.html":{}}}],["docs",{"_index":1095,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["docs(readme",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":699,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["documentation",{"_index":1269,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["documentation/refreshing",{"_index":1498,"title":{},"body":{"index.html":{}}}],["documentation/using",{"_index":1511,"title":{},"body":{"index.html":{}}}],["documented",{"_index":1072,"title":{},"body":{"changelog.html":{}}}],["doesn't",{"_index":1925,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["doing",{"_index":614,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["domain",{"_index":1716,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["domains",{"_index":1937,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["don't",{"_index":1479,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["dosn't",{"_index":2064,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["draft",{"_index":1424,"title":{},"body":{"index.html":{}}}],["dummy",{"_index":509,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["dummyclientsecret",{"_index":1447,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["during",{"_index":1709,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["dynamic",{"_index":1196,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":182,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["e.g",{"_index":1714,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["e.type",{"_index":257,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["e2599e0",{"_index":1113,"title":{},"body":{"changelog.html":{}}}],["e2e",{"_index":921,"title":{},"body":{"changelog.html":{}}}],["e89aa6d",{"_index":1068,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1331,"title":{},"body":{"index.html":{}}}],["ease",{"_index":1361,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["easier",{"_index":1660,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["easiest",{"_index":1766,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["edge",{"_index":1694,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["elements",{"_index":1201,"title":{},"body":{"dependencies.html":{}}}],["email",{"_index":1457,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["enable",{"_index":1920,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["encode",{"_index":1532,"title":{},"body":{"index.html":{}}}],["encodekey",{"_index":885,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodekey(k",{"_index":891,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encoder",{"_index":163,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"dependencies.html":{}}}],["encoder.encode(valuetohash",{"_index":168,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["encodeuricomponent",{"_index":1521,"title":{},"body":{"index.html":{}}}],["encodeuricomponent(k",{"_index":895,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeuricomponent(v",{"_index":896,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodeutf8",{"_index":1232,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodeutf8(arr",{"_index":1242,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encodeutf8(fsha256(decodeutf8(valuetohash",{"_index":172,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["encodevalue",{"_index":886,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encodevalue(v",{"_index":893,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["encounter",{"_index":1828,"title":{},"body":{"additional-documentation/events.html":{}}}],["end",{"_index":1303,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["end_session_endpoint",{"_index":708,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["endpoint",{"_index":683,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["endpoints",{"_index":1929,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["endpont",{"_index":2013,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ends",{"_index":1881,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["enforce",{"_index":1443,"title":{},"body":{"index.html":{}}}],["enhancements",{"_index":1341,"title":{},"body":{"index.html":{}}}],["ensure",{"_index":473,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["ensures",{"_index":1928,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["enter",{"_index":1985,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["enters",{"_index":1355,"title":{},"body":{"index.html":{}}}],["enum",{"_index":1845,"title":{},"body":{"additional-documentation/events.html":{}}}],["environment",{"_index":1277,"title":{},"body":{"index.html":{}}}],["environmentproviders",{"_index":1254,"title":{},"body":{"miscellaneous/functions.html":{}}}],["environments",{"_index":607,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["erazerbrecht",{"_index":1167,"title":{},"body":{"changelog.html":{}}}],["err",{"_index":528,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"miscellaneous/variables.html":{}}}],["err));when",{"_index":1731,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["error",{"_index":229,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["error('algorithm",{"_index":111,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["error(message",{"_index":656,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["errorhandler",{"_index":203,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["errors",{"_index":1745,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["escapedkey",{"_index":869,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["escapedvalue",{"_index":870,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["esm",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["etc",{"_index":1417,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["event",{"_index":972,"title":{},"body":{"changelog.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["events",{"_index":623,"title":{"additional-documentation/events.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["events.ts",{"_index":1846,"title":{},"body":{"additional-documentation/events.html":{}}}],["eventtype",{"_index":751,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":1301,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["examples",{"_index":1371,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["execute",{"_index":1466,"title":{},"body":{"index.html":{}}}],["existing",{"_index":1414,"title":{},"body":{"index.html":{}}}],["exists",{"_index":444,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["expanding",{"_index":471,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["expected",{"_index":1834,"title":{},"body":{"additional-documentation/events.html":{}}}],["expects",{"_index":2088,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["experience",{"_index":2072,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["expired",{"_index":2029,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["expires",{"_index":1359,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["expires_in",{"_index":690,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["explicit",{"_index":1105,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["explicitly",{"_index":1872,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["export",{"_index":72,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["exports",{"_index":813,"title":{},"body":{"modules/OAuthModule.html":{},"overview.html":{}}}],["express",{"_index":1579,"title":{},"body":{"license.html":{}}}],["extend",{"_index":2037,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["extends",{"_index":129,"title":{},"body":{"classes/DateTimeProvider.html":{},"classes/JwksValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["extensions",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["extensive",{"_index":1819,"title":{},"body":{"additional-documentation/events.html":{}}}],["extract",{"_index":466,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["extracted",{"_index":472,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["extraction",{"_index":1163,"title":{},"body":{"changelog.html":{}}}],["f",{"_index":376,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["f42f943",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["f5bd96c",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":1663,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["factor",{"_index":1646,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["factory",{"_index":144,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["fail",{"_index":1941,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["fails",{"_index":1926,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{}}],["fall",{"_index":1793,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["fallback",{"_index":1712,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["false",{"_index":495,"title":{},"body":{"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["far",{"_index":1659,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["fast",{"_index":148,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"dependencies.html":{}}}],["fb3afe4",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["feat(oauth",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":955,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["feel",{"_index":1338,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fetch",{"_index":1468,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["fetching",{"_index":2017,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["ff7d1d9",{"_index":960,"title":{},"body":{"changelog.html":{}}}],["fhash",{"_index":169,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["field",{"_index":50,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["files",{"_index":1555,"title":{},"body":{"license.html":{}}}],["fillbuffer",{"_index":1233,"title":{},"body":{"miscellaneous/functions.html":{}}}],["fillbuffer(buffer",{"_index":1244,"title":{},"body":{"miscellaneous/functions.html":{}}}],["filled",{"_index":460,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["filter",{"_index":221,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["filter((e",{"_index":256,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["final",{"_index":435,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finalized",{"_index":416,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finalizes",{"_index":413,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finally",{"_index":1711,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["find",{"_index":1617,"title":{},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["fine",{"_index":1503,"title":{},"body":{"index.html":{}}}],["finish",{"_index":277,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finish(out",{"_index":292,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["finished",{"_index":489,"title":{},"body":{"classes/Hash.html":{}}}],["fired",{"_index":1640,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["first",{"_index":1450,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["fitness",{"_index":1584,"title":{},"body":{"license.html":{}}}],["fix",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["fix(lib",{"_index":1064,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":1114,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":906,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["flag",{"_index":604,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["flight",{"_index":1968,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["flow",{"_index":539,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["flow.html",{"_index":1512,"title":{},"body":{"index.html":{}}}],["flow.md",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["flows",{"_index":581,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["focusing",{"_index":952,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":1345,"title":{},"body":{"index.html":{}}}],["followed",{"_index":585,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["following",{"_index":590,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["follows",{"_index":2033,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers.html":{}}}],["for(var",{"_index":1698,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["form",{"_index":1478,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["format",{"_index":1957,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["former",{"_index":1865,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["forroot",{"_index":800,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{}}}],["forroot(config",{"_index":801,"title":{},"body":{"modules/OAuthModule.html":{}}}],["forward",{"_index":1704,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["forwards",{"_index":1473,"title":{},"body":{"index.html":{}}}],["found",{"_index":1773,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["foundation",{"_index":1426,"title":{},"body":{"index.html":{}}}],["four",{"_index":1451,"title":{},"body":{"index.html":{}}}],["fragment",{"_index":572,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["free",{"_index":1339,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["fsha256",{"_index":147,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["fsha256(valuetohash",{"_index":170,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["full",{"_index":1844,"title":{},"body":{"additional-documentation/events.html":{}}}],["function",{"_index":154,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["functions",{"_index":1223,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":1570,"title":{},"body":{"license.html":{}}}],["further",{"_index":1365,"title":{},"body":{"index.html":{}}}],["g",{"_index":377,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["geheim",{"_index":2006,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then",{"_index":2027,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["geheim').then((resp",{"_index":2022,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["general",{"_index":1440,"title":{},"body":{"index.html":{}}}],["generate",{"_index":1348,"title":{},"body":{"index.html":{}}}],["gethashfragmentparams",{"_index":854,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["gethashfragmentparams(customhashfragment",{"_index":856,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["getitem",{"_index":731,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["getitem(key",{"_index":667,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["gets",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":899,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["github.com/manfredsteyer/angular",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":1734,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["go",{"_index":1404,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["gone",{"_index":1840,"title":{},"body":{"additional-documentation/events.html":{}}}],["google",{"_index":1934,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["grant",{"_index":964,"title":{},"body":{"changelog.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["grant_types_supported",{"_index":715,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["granted",{"_index":1548,"title":{},"body":{"license.html":{}}}],["graph",{"_index":1601,"title":{},"body":{"modules.html":{}}}],["great",{"_index":1787,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/server-side-rendering.html":{}}}],["guard",{"_index":1110,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["guards",{"_index":1275,"title":{},"body":{"index.html":{}}}],["guide",{"_index":1618,"title":{},"body":{"additional-documentation/getting-started.html":{}}}],["guidelines",{"_index":1076,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["h",{"_index":378,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["half",{"_index":1651,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["hallo",{"_index":1981,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["handle",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["handle(req",{"_index":250,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["handleerror",{"_index":831,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["handleerror(err",{"_index":832,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler",{"_index":230,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["handler.ts",{"_index":8,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["handler.ts:11",{"_index":743,"title":{},"body":{"classes/NullValidationHandler.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{}}}],["handler.ts:12",{"_index":505,"title":{},"body":{"classes/HashHandler.html":{}}}],["handler.ts:20",{"_index":876,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:25",{"_index":522,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["handler.ts:27",{"_index":875,"title":{},"body":{"classes/ValidationHandler.html":{}}}],["handler.ts:31",{"_index":136,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:41",{"_index":66,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:46",{"_index":58,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:5",{"_index":839,"title":{},"body":{"classes/OAuthResourceServerErrorHandler.html":{}}}],["handler.ts:50",{"_index":142,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:58",{"_index":139,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["handler.ts:71",{"_index":47,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handler.ts:8",{"_index":744,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["handler.ts:88",{"_index":31,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["handlers",{"_index":80,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["handling",{"_index":1743,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["hash",{"_index":33,"title":{"classes/Hash.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hash().update(key).finish(pad).clean",{"_index":442,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hash(data",{"_index":1245,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash.indexof",{"_index":862,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(1",{"_index":865,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hash.substr(questionmarkposition",{"_index":864,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["hashalg",{"_index":86,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["hasharray",{"_index":165,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hashblocks",{"_index":368,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["hashblocks(this.temp",{"_index":409,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hashblocks(w",{"_index":1246,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashhandler",{"_index":153,"title":{"classes/HashHandler.html":{}},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hashing",{"_index":1259,"title":{},"body":{"index.html":{}}}],["hashlocationstrategy",{"_index":1281,"title":{},"body":{"index.html":{}}}],["hashstrategy",{"_index":1506,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["hashstring",{"_index":174,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hasreceivedtokens",{"_index":2043,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["header",{"_index":55,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["headers",{"_index":266,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["helper",{"_index":71,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["helper.service.ts",{"_index":853,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:25",{"_index":859,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.service.ts:5",{"_index":857,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["helper.ts",{"_index":1226,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hence",{"_index":1352,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["here",{"_index":1293,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["here's",{"_index":1827,"title":{},"body":{"additional-documentation/events.html":{}}}],["hereby",{"_index":1547,"title":{},"body":{"license.html":{}}}],["hexcode",{"_index":188,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcode.padstart(2",{"_index":191,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcodes",{"_index":186,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexcodes.join",{"_index":192,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hexstring(buffer",{"_index":185,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["hidden",{"_index":1665,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["hkdf",{"_index":462,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["hkdf(key",{"_index":1247,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hkdfsalt",{"_index":458,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["hmac",{"_index":269,"title":{"classes/HMAC.html":{}},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["hmac(key",{"_index":1248,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hmac(okm",{"_index":476,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac(salt",{"_index":469,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.finish(buffer",{"_index":450,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(buffer",{"_index":443,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(counter",{"_index":447,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac.update(info",{"_index":445,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["hmac_",{"_index":475,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["holders",{"_index":1589,"title":{},"body":{"license.html":{}}}],["home",{"_index":1784,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["homecomponent",{"_index":1419,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["hook",{"_index":640,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["hooked",{"_index":81,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["html",{"_index":1707,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["http",{"_index":1746,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["http://localhost:4200",{"_index":1375,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/#/home",{"_index":1861,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["http://openid.net/specs/openid",{"_index":684,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["http://www.angular.at/api",{"_index":1495,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["httpclient",{"_index":1403,"title":{},"body":{"index.html":{}}}],["httpclientmodule",{"_index":1406,"title":{},"body":{"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["httperrorresponse",{"_index":1769,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpevent",{"_index":215,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httphandler",{"_index":211,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptor",{"_index":216,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpinterceptors",{"_index":1740,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{}}],["httpmodule",{"_index":1126,"title":{},"body":{"changelog.html":{}}}],["httpparametercodec",{"_index":882,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["httprequest",{"_index":209,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["httpresponse",{"_index":833,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["https://dev",{"_index":2079,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["https://github.com/jeroenheijmans/sample",{"_index":1274,"title":{},"body":{"index.html":{}}}],["https://github.com/lankaapura/angular",{"_index":1907,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://github.com/manfredsteyer/angular",{"_index":966,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["https://idsvr4.azurewebsites.net",{"_index":1431,"title":{},"body":{"index.html":{}}}],["https://manfredsteyer.github.io/angular",{"_index":1270,"title":{},"body":{"index.html":{}}}],["https://medium.com/lankapura/angular",{"_index":1904,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["https://steyer",{"_index":1675,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["i.e",{"_index":1933,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["i=0",{"_index":1699,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["id",{"_index":676,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["id_token",{"_index":51,"title":{"additional-documentation/adapt-id_token-validation.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["id_token's",{"_index":53,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["id_token_encryption_alg_values_supported",{"_index":721,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_encryption_enc_values_supported",{"_index":722,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["id_token_signing_alg_values_supported",{"_index":720,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idclaims",{"_index":677,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ideas",{"_index":1340,"title":{},"body":{"index.html":{}}}],["identity",{"_index":1145,"title":{"additional-documentation/authorization-servers/using-identity-server.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}}}],["identityserver",{"_index":1287,"title":{},"body":{"index.html":{}}}],["idsvr",{"_index":1059,"title":{},"body":{"changelog.html":{},"additional-documentation/server-side-rendering.html":{}}}],["idtoken",{"_index":74,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaims",{"_index":77,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenclaimsjson",{"_index":679,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenexpiresat",{"_index":681,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["idtokenheader",{"_index":76,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["idtokenheaderjson",{"_index":680,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ie",{"_index":1115,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["iframe",{"_index":1666,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["iframes",{"_index":579,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ignores",{"_index":2094,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["implcit",{"_index":1998,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["implemantion",{"_index":1757,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["implement",{"_index":1755,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["implementation",{"_index":11,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["implementations",{"_index":665,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["implemented",{"_index":1877,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["implementing",{"_index":536,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["implements",{"_index":14,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["implicit",{"_index":538,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{}},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["implied",{"_index":1580,"title":{},"body":{"license.html":{}}}],["import",{"_index":68,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["important",{"_index":1452,"title":{},"body":{"index.html":{}}}],["importprovidersfrom",{"_index":1407,"title":{},"body":{"index.html":{}}}],["importprovidersfrom(httpclientmodule",{"_index":1408,"title":{},"body":{"index.html":{}}}],["imports",{"_index":811,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["included",{"_index":619,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"license.html":{}}}],["includes",{"_index":613,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["including",{"_index":1053,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["increment",{"_index":451,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["indeed",{"_index":1700,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index.html",{"_index":1433,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["indexable",{"_index":873,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["inferhashalgorithm",{"_index":24,"title":{},"body":{"classes/AbstractValidationHandler.html":{}}}],["inferhashalgorithm(jwtheader",{"_index":45,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["infers",{"_index":48,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["info(message",{"_index":653,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["info.state",{"_index":1625,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["information",{"_index":1308,"title":{},"body":{"index.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/original-config-api.html":{}}}],["informs",{"_index":1808,"title":{},"body":{"additional-documentation/events.html":{}}}],["inherited",{"_index":524,"title":{},"body":{"classes/JwksValidationHandler.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["initial",{"_index":1710,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initialize",{"_index":470,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{}}}],["initializes",{"_index":1461,"title":{},"body":{"index.html":{}}}],["initialnavigation",{"_index":1857,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["initimplicitflow",{"_index":1523,"title":{},"body":{"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-implicit-flow.html":{}}}],["initloginflow",{"_index":1062,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{}}}],["initloginflowinpopup",{"_index":981,"title":{},"body":{"changelog.html":{},"additional-documentation/popup-based-login.html":{}}}],["inject",{"_index":1768,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectable",{"_index":126,"title":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["injectables",{"_index":132,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"injectables/MemoryStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"overview.html":{}}}],["injecting",{"_index":1762,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["injection",{"_index":649,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["injectiontoken",{"_index":1159,"title":{},"body":{"changelog.html":{}}}],["injectiontoken('auth_config",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1020,"title":{},"body":{"changelog.html":{}}}],["inside",{"_index":452,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["install",{"_index":540,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["installing",{"_index":1387,"title":{},"body":{"index.html":{}}}],["instance",{"_index":449,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["instanceof",{"_index":1824,"title":{},"body":{"additional-documentation/events.html":{}}}],["instead",{"_index":574,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["int32array",{"_index":370,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["intended",{"_index":1963,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["interaction",{"_index":1671,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["intercept",{"_index":199,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["intercept(req",{"_index":208,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["intercepted",{"_index":823,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["interceptor",{"_index":194,"title":{"interceptors/DefaultOAuthInterceptor.html":{}},"body":{"index.html":{}}}],["interceptors",{"_index":196,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["interesting",{"_index":2041,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["interface",{"_index":73,"title":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["interfaces",{"_index":844,"title":{},"body":{"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"overview.html":{}}}],["internal",{"_index":438,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["internally",{"_index":595,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["introduce",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["introduced",{"_index":1392,"title":{},"body":{"index.html":{}}}],["invalid_nonce_in_state",{"_index":756,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["ionic",{"_index":1541,"title":{},"body":{"index.html":{}}}],["isn't",{"_index":738,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/using-password-flow.html":{}}}],["isresponse(str",{"_index":1697,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["issue",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["issuer",{"_index":701,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["issues",{"_index":1088,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["issuing",{"_index":1664,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["iterations",{"_index":1250,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ivy",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["j",{"_index":380,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["java",{"_index":1265,"title":{},"body":{"index.html":{}}}],["jeroenheijmans",{"_index":1183,"title":{},"body":{"changelog.html":{}}}],["jie",{"_index":1174,"title":{},"body":{"changelog.html":{}}}],["job",{"_index":1185,"title":{},"body":{"changelog.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["js",{"_index":145,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/using-systemjs.html":{}}}],["jsrsasign",{"_index":930,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["jwks",{"_index":78,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["jwks';instead",{"_index":1519,"title":{},"body":{"index.html":{}}}],["jwks_load_error",{"_index":755,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["jwks_uri",{"_index":709,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["jwksvalidationhandler",{"_index":506,"title":{"classes/JwksValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["jwksvalidationhandler();in",{"_index":1870,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["jwt",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["jwtheader",{"_index":52,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["jwtheader['alg",{"_index":106,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["k",{"_index":302,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/variables.html":{}}}],["keep",{"_index":1684,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["kevin",{"_index":1948,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["key",{"_index":283,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{}}}],["keycloak",{"_index":1263,"title":{"additional-documentation/authorization-servers/using-keycloak.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{}}}],["keys",{"_index":1866,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["kicks",{"_index":1995,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["kind",{"_index":1578,"title":{},"body":{"license.html":{}}}],["known",{"_index":1661,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["known/openid",{"_index":2009,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["labat",{"_index":1182,"title":{},"body":{"changelog.html":{}}}],["labels",{"_index":1342,"title":{},"body":{"index.html":{}}}],["laing",{"_index":1180,"title":{},"body":{"changelog.html":{}}}],["later",{"_index":1867,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["leads",{"_index":1765,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{}}}],["left",{"_index":421,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["leftmosthalf",{"_index":94,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["legend",{"_index":1604,"title":{},"body":{"overview.html":{}}}],["len",{"_index":374,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["length",{"_index":464,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":1822,"title":{},"body":{"additional-documentation/events.html":{}}}],["leveraging",{"_index":1847,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["liability",{"_index":1593,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1590,"title":{},"body":{"license.html":{}}}],["lib",{"_index":631,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["library",{"_index":515,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["library's",{"_index":1942,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["license",{"_index":1066,"title":{"license.html":{}},"body":{"changelog.html":{},"properties.html":{}}}],["life",{"_index":1643,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["lifetime",{"_index":1894,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["limitation",{"_index":1559,"title":{},"body":{"license.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["limited",{"_index":1581,"title":{},"body":{"license.html":{}}}],["lin",{"_index":1175,"title":{},"body":{"changelog.html":{}}}],["line",{"_index":1721,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["linjie997",{"_index":1152,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":1302,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["links",{"_index":1306,"title":{},"body":{"index.html":{}}}],["list",{"_index":1630,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{}}}],["listed",{"_index":1753,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["listen",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["lite",{"_index":1216,"title":{},"body":{"dependencies.html":{}}}],["load",{"_index":2007,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["loaddiscoverydocumentandlogin",{"_index":1061,"title":{},"body":{"changelog.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["loaddiscoverydocumentandtrylogin",{"_index":2039,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["loaded",{"_index":1685,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["loading",{"_index":2023,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["loadkeys",{"_index":79,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["loaduserprofile",{"_index":1836,"title":{},"body":{"additional-documentation/events.html":{}}}],["local",{"_index":1882,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["localhost:[4200",{"_index":1383,"title":{},"body":{"index.html":{}}}],["localstorage",{"_index":662,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["location",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["location.hash",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["location.origin",{"_index":1690,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["location.search",{"_index":1689,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["locationstrategy",{"_index":1848,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["log",{"_index":786,"title":{},"body":{"classes/OAuthLogger.html":{},"additional-documentation/events.html":{}}}],["log(message",{"_index":654,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["logged",{"_index":1668,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["loggin",{"_index":2014,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["logging",{"_index":643,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["login",{"_index":948,"title":{"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["loginhint",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["loginoptions",{"_index":558,"title":{"classes/LoginOptions.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["logoff",{"_index":1976,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["logout",{"_index":774,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["logouturl",{"_index":2083,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["logs",{"_index":1820,"title":{},"body":{"additional-documentation/events.html":{}}}],["long",{"_index":1843,"title":{},"body":{"additional-documentation/events.html":{}}}],["longer",{"_index":1818,"title":{},"body":{"additional-documentation/events.html":{}}}],["look",{"_index":1291,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["lookup",{"_index":1510,"title":{},"body":{"index.html":{}}}],["lower",{"_index":1493,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["main",{"_index":1686,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-systemjs.html":{}}}],["main.ts",{"_index":1395,"title":{},"body":{"index.html":{}}}],["maintain",{"_index":1943,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["major",{"_index":1330,"title":{},"body":{"index.html":{}}}],["make",{"_index":17,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-password-flow.html":{}}}],["making",{"_index":1799,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["management",{"_index":1878,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["mandatory",{"_index":1525,"title":{},"body":{"index.html":{}}}],["manfred",{"_index":1176,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["manner",{"_index":582,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["manually",{"_index":1475,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["map",{"_index":222,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/using-systemjs.html":{}}}],["mark",{"_index":588,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["matching",{"_index":116,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["max/geheim",{"_index":1377,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["mccloghry",{"_index":1179,"title":{},"body":{"changelog.html":{}}}],["mean",{"_index":1791,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["means",{"_index":1650,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["meanwhile",{"_index":1964,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["memorystorage",{"_index":670,"title":{"injectables/MemoryStorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["mentioned",{"_index":1627,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/original-config-api.html":{}}}],["merchantability",{"_index":1583,"title":{},"body":{"license.html":{}}}],["merge",{"_index":218,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"license.html":{}}}],["mergemap",{"_index":224,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["mergemap((token",{"_index":264,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["message",{"_index":620,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{}}}],["meta",{"_index":1952,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["method",{"_index":15,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["methods",{"_index":22,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{}}}],["mind",{"_index":1442,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["minutes",{"_index":1539,"title":{},"body":{"index.html":{}}}],["miscellaneous",{"_index":1222,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1125,"title":{},"body":{"changelog.html":{}}}],["mit",{"_index":1607,"title":{},"body":{"properties.html":{}}}],["mode",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["moderating",{"_index":1186,"title":{},"body":{"changelog.html":{}}}],["modern",{"_index":1369,"title":{},"body":{"index.html":{}}}],["modify",{"_index":1561,"title":{},"body":{"license.html":{}}}],["module",{"_index":794,"title":{"modules/OAuthModule.html":{}},"body":{"overview.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["module.config",{"_index":232,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["module.config.ts",{"_index":817,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:11",{"_index":836,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:12",{"_index":838,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:13",{"_index":837,"title":{},"body":{"classes/OAuthResourceServerConfig.html":{}}}],["module.config.ts:2",{"_index":820,"title":{},"body":{"classes/OAuthModuleConfig.html":{}}}],["moduleconfig",{"_index":205,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["modules",{"_index":796,"title":{"modules.html":{}},"body":{"modules/OAuthModule.html":{},"modules.html":{}}}],["modulewithproviders",{"_index":805,"title":{},"body":{"modules/OAuthModule.html":{}}}],["moment",{"_index":1896,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["moos",{"_index":1161,"title":{},"body":{"changelog.html":{}}}],["more",{"_index":1307,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["moved",{"_index":514,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["msec",{"_index":1737,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["much",{"_index":1325,"title":{},"body":{"index.html":{}}}],["multiple",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["multiplying",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":39,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["namely",{"_index":516,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["navigation",{"_index":1850,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["need",{"_index":535,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["needed",{"_index":546,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["needs",{"_index":1891,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["net",{"_index":1288,"title":{},"body":{"index.html":{}}}],["net/.net",{"_index":1261,"title":{},"body":{"index.html":{}}}],["never",{"_index":605,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["new",{"_index":110,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["newer",{"_index":1323,"title":{},"body":{"index.html":{}}}],["newest",{"_index":1890,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["next",{"_index":210,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req",{"_index":247,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["next.handle(req).catch(err",{"_index":1779,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ng",{"_index":1209,"title":{},"body":{"dependencies.html":{}}}],["ngmodule",{"_index":806,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["ngmodules",{"_index":1416,"title":{},"body":{"index.html":{}}}],["ngzone",{"_index":1131,"title":{},"body":{"changelog.html":{}}}],["node_modules/jsrsasign/lib/jsrsasign",{"_index":1960,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["nonce",{"_index":599,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["noninfringement",{"_index":1587,"title":{},"body":{"license.html":{}}}],["normally",{"_index":628,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["notable",{"_index":1069,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":544,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["notes",{"_index":1655,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["nothing",{"_index":740,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["notice",{"_index":1573,"title":{},"body":{"license.html":{}}}],["notification",{"_index":1875,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notifications",{"_index":1888,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["notified",{"_index":1897,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["now",{"_index":121,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"index.html":{}}}],["nowadays",{"_index":548,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/original-config-api.html":{}}}],["npm",{"_index":541,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":527,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["nullvalidationhandler",{"_index":521,"title":{"classes/NullValidationHandler.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"miscellaneous/functions.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["nullvalidationhandler:11",{"_index":525,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["nullvalidationhandler:8",{"_index":526,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["number",{"_index":125,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["oauth",{"_index":231,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauth.interceptor.ts",{"_index":198,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:23",{"_index":207,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth.interceptor.ts:44",{"_index":212,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["oauth2",{"_index":518,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oauth2/oidc",{"_index":537,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["oauthclient",{"_index":1397,"title":{},"body":{"index.html":{}}}],["oautherrorevent",{"_index":747,"title":{"classes/OAuthErrorEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"additional-documentation/events.html":{}}}],["oauthevent",{"_index":749,"title":{"classes/OAuthEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthinfoevent",{"_index":782,"title":{"classes/OAuthInfoEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["oauthlogger",{"_index":650,"title":{"classes/OAuthLogger.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["oauthmodule",{"_index":795,"title":{"modules/OAuthModule.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"modules.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmodule.forroot",{"_index":1418,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthmoduleconfig",{"_index":206,"title":{"classes/OAuthModuleConfig.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"miscellaneous/functions.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthnoopresourceservererrorhandler",{"_index":829,"title":{"classes/OAuthNoopResourceServerErrorHandler.html":{}},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthresourceserverconfig",{"_index":819,"title":{"classes/OAuthResourceServerConfig.html":{}},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["oauthresourceservererrorhandler",{"_index":204,"title":{"classes/OAuthResourceServerErrorHandler.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["oauthservice",{"_index":202,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["oauthstorage",{"_index":666,"title":{"classes/OAuthStorage.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["oauthsuccessevent",{"_index":779,"title":{"classes/OAuthSuccessEvent.html":{}},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["object",{"_index":46,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["observable",{"_index":214,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["obtaining",{"_index":1551,"title":{},"body":{"license.html":{}}}],["occur",{"_index":1812,"title":{},"body":{"additional-documentation/events.html":{}}}],["of(null",{"_index":260,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["of(this.oauthservice.getaccesstoken()).pipe(filter((token",{"_index":253,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["officially",{"_index":1290,"title":{},"body":{"index.html":{}}}],["offline_access",{"_index":1453,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oidc",{"_index":519,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["oidc';please",{"_index":1520,"title":{},"body":{"index.html":{}}}],["oidc.module.ts",{"_index":798,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc.module.ts:14",{"_index":803,"title":{},"body":{"modules/OAuthModule.html":{}}}],["oidc.umd.js",{"_index":1956,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["oidc/docs",{"_index":1271,"title":{},"body":{"index.html":{}}}],["oidc/docs/additional",{"_index":1497,"title":{},"body":{"index.html":{}}}],["oidc/issues/728#issuecomment",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/1020",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/919",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/935",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/936",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/938",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["oidc/pull/965",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["oidcdiscoverydoc",{"_index":700,"title":{"interfaces/OidcDiscoveryDoc.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ok",{"_index":1728,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["okm",{"_index":468,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["okta",{"_index":1304,"title":{},"body":{"index.html":{}}}],["older",{"_index":1311,"title":{},"body":{"index.html":{},"additional-documentation/original-config-api.html":{}}}],["one",{"_index":513,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["online",{"_index":1536,"title":{},"body":{"index.html":{}}}],["onloginerror",{"_index":567,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["ontokenreceived",{"_index":568,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["open",{"_index":2075,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["opened",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["opener",{"_index":1708,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["openid",{"_index":697,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["opens",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["opht1tkt9e9fvqtzpbvf1thvhjrxvyvx",{"_index":2082,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["optimization",{"_index":439,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["option",{"_index":980,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{}}}],["optional",{"_index":41,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["optionalparams",{"_index":652,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["options",{"_index":561,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/events.html":{}}}],["orig",{"_index":178,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["original",{"_index":1626,"title":{"additional-documentation/original-config-api.html":{}},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["originally",{"_index":1962,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["otherparam",{"_index":1806,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["otherwise",{"_index":1504,"title":{},"body":{"index.html":{},"license.html":{}}}],["out",{"_index":294,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"index.html":{},"license.html":{},"overview.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["out[i",{"_index":433,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["output",{"_index":448,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{}}}],["outside",{"_index":1130,"title":{},"body":{"changelog.html":{}}}],["over",{"_index":1644,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["override",{"_index":19,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["overview",{"_index":1603,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":1999,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["p",{"_index":372,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["package",{"_index":1188,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["package.json",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["packages",{"_index":1864,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["packagr",{"_index":1210,"title":{},"body":{"dependencies.html":{}}}],["paddedhexcode",{"_index":190,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["padlength",{"_index":432,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["page",{"_index":551,"title":{"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["pair",{"_index":867,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["pairs",{"_index":871,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["param",{"_index":105,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parameter",{"_index":1153,"title":{},"body":{"changelog.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["parameters",{"_index":37,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["params",{"_index":64,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["params.idtokenclaims['at_hash'].replace(/=/g",{"_index":101,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parent",{"_index":1705,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["parse",{"_index":1924,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["parsed",{"_index":54,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["parsedidtoken",{"_index":678,"title":{"interfaces/ParsedIdToken.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["parsequerystring",{"_index":855,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["parsequerystring(querystring",{"_index":858,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["particular",{"_index":1585,"title":{},"body":{"license.html":{}}}],["pass",{"_index":578,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["passed",{"_index":34,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{}}}],["passes",{"_index":1758,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["passing",{"_index":1122,"title":{},"body":{"changelog.html":{}}}],["password",{"_index":1252,"title":{"additional-documentation/using-password-flow.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["passwords",{"_index":881,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["path",{"_index":1502,"title":{},"body":{"index.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pathlocationstrategy",{"_index":1280,"title":{},"body":{"index.html":{}}}],["pbkdf2",{"_index":1235,"title":{},"body":{"miscellaneous/functions.html":{}}}],["pbkdf2(password",{"_index":1249,"title":{},"body":{"miscellaneous/functions.html":{}}}],["perform",{"_index":1724,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["performs",{"_index":1849,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{}}}],["permission",{"_index":1546,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":1448,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["permit",{"_index":1568,"title":{},"body":{"license.html":{}}}],["person",{"_index":1550,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1569,"title":{},"body":{"license.html":{}}}],["perspective",{"_index":1986,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["phil",{"_index":1178,"title":{},"body":{"changelog.html":{}}}],["pingone",{"_index":1936,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["pipe",{"_index":262,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pipe(catcherror((err",{"_index":251,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["pkce",{"_index":1351,"title":{},"body":{"index.html":{}}}],["place",{"_index":1411,"title":{},"body":{"index.html":{}}}],["plan",{"_index":1329,"title":{},"body":{"index.html":{}}}],["please",{"_index":529,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["pls",{"_index":1094,"title":{},"body":{"changelog.html":{}}}],["plus",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["pmccloghrylaing",{"_index":1154,"title":{},"body":{"changelog.html":{}}}],["popperjs/core",{"_index":1198,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":580,"title":{"additional-documentation/popup-based-login.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["popup_blocked",{"_index":776,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["popup_closed",{"_index":775,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["portions",{"_index":1576,"title":{},"body":{"license.html":{}}}],["pos",{"_index":373,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":1993,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["post",{"_index":1300,"title":{},"body":{"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["postlogoutredirecturi",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["ppanthony",{"_index":1954,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["practice",{"_index":610,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["practices",{"_index":1444,"title":{},"body":{"index.html":{}}}],["predefined",{"_index":1162,"title":{},"body":{"changelog.html":{}}}],["prefixes",{"_index":1492,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["prepared",{"_index":1255,"title":{},"body":{"index.html":{}}}],["present",{"_index":589,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["preserving",{"_index":1619,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["prevent",{"_index":982,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["preventclearhashafterlogin",{"_index":569,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["prevents",{"_index":1732,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["previously",{"_index":2051,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["prf.finish(u",{"_index":488,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.reset",{"_index":485,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.update(ctr",{"_index":487,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["prf.update(salt",{"_index":486,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["private",{"_index":234,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["production",{"_index":606,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["profile",{"_index":1456,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["progressing",{"_index":2054,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["project",{"_index":1071,"title":{},"body":{"changelog.html":{}}}],["project's",{"_index":1909,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["projects/.../base64",{"_index":1225,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../events.ts",{"_index":1610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../factories.ts",{"_index":1228,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../fast",{"_index":1234,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../hash",{"_index":1231,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../jwks",{"_index":1614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../provider.ts",{"_index":1236,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../tokens.ts",{"_index":1613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/angular",{"_index":797,"title":{},"body":{"modules/OAuthModule.html":{}}}],["projects/lib/src/base64",{"_index":1237,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/date",{"_index":118,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["projects/lib/src/encoder.ts",{"_index":878,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:10",{"_index":894,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:14",{"_index":888,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:18",{"_index":890,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/encoder.ts:6",{"_index":892,"title":{},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["projects/lib/src/events.ts",{"_index":748,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["projects/lib/src/events.ts:28",{"_index":783,"title":{},"body":{"classes/OAuthEvent.html":{}}}],["projects/lib/src/events.ts:32",{"_index":843,"title":{},"body":{"classes/OAuthSuccessEvent.html":{}}}],["projects/lib/src/events.ts:38",{"_index":784,"title":{},"body":{"classes/OAuthInfoEvent.html":{}}}],["projects/lib/src/events.ts:44",{"_index":753,"title":{},"body":{"classes/OAuthErrorEvent.html":{}}}],["projects/lib/src/factories.ts",{"_index":1241,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/interceptors/default",{"_index":197,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["projects/lib/src/interceptors/resource",{"_index":830,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["projects/lib/src/oauth",{"_index":816,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["projects/lib/src/provider.ts",{"_index":1253,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/lib/src/token",{"_index":6,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/lib/src/tokens.ts",{"_index":1615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/lib/src/types.ts",{"_index":559,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:100",{"_index":842,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:107",{"_index":734,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:111",{"_index":735,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:115",{"_index":736,"title":{},"body":{"injectables/MemoryStorage.html":{}}}],["projects/lib/src/types.ts:125",{"_index":847,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:126",{"_index":845,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:127",{"_index":846,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:128",{"_index":848,"title":{},"body":{"classes/ReceivedTokens.html":{}}}],["projects/lib/src/types.ts:13",{"_index":624,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:162",{"_index":874,"title":{},"body":{"interfaces/UserInfo.html":{}}}],["projects/lib/src/types.ts:20",{"_index":639,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:28",{"_index":615,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:40",{"_index":570,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:50",{"_index":608,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:59",{"_index":597,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:67",{"_index":627,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:74",{"_index":591,"title":{},"body":{"classes/LoginOptions.html":{}}}],["projects/lib/src/types.ts:84",{"_index":788,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:85",{"_index":791,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:86",{"_index":792,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:87",{"_index":793,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:88",{"_index":790,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["projects/lib/src/types.ts:98",{"_index":840,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/types.ts:99",{"_index":841,"title":{},"body":{"classes/OAuthStorage.html":{}}}],["projects/lib/src/url",{"_index":852,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["promise",{"_index":44,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["promise(resolve",{"_index":2057,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["promise.resolve",{"_index":2045,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["promise.resolve(null",{"_index":745,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["promise.resolve(true",{"_index":746,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["properly",{"_index":456,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["properties",{"_index":272,"title":{"properties.html":{}},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"interfaces/ValidationParams.html":{},"properties.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["property",{"_index":622,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{}}}],["proposes",{"_index":1628,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["protected",{"_index":23,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["provding",{"_index":1754,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["provide",{"_index":646,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["provided",{"_index":1273,"title":{},"body":{"index.html":{},"license.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["providehttpclient",{"_index":1399,"title":{},"body":{"index.html":{}}}],["provideoauthclient",{"_index":809,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["provideoauthclient(config",{"_index":815,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["provider",{"_index":810,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"modules/OAuthModule.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["provider.ts",{"_index":120,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["provider.ts:4",{"_index":124,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["provider.ts:5",{"_index":122,"title":{},"body":{"classes/DateTimeProvider.html":{}}}],["providers",{"_index":814,"title":{},"body":{"modules/OAuthModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["provides",{"_index":1767,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-password-flow.html":{}}}],["providing",{"_index":2018,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["prs",{"_index":1333,"title":{},"body":{"index.html":{}}}],["public",{"_index":84,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["publish",{"_index":1562,"title":{},"body":{"license.html":{}}}],["published",{"_index":1829,"title":{},"body":{"additional-documentation/events.html":{}}}],["publishes",{"_index":1810,"title":{},"body":{"additional-documentation/events.html":{}}}],["pull",{"_index":1146,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["purpose",{"_index":1586,"title":{},"body":{"license.html":{},"additional-documentation/callback-after-login.html":{}}}],["put",{"_index":1751,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["puts",{"_index":415,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["pwa",{"_index":1540,"title":{},"body":{"index.html":{}}}],["query",{"_index":637,"title":{"additional-documentation/custom-query-parameters.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/custom-query-parameters.html":{}}}],["querying",{"_index":1360,"title":{},"body":{"index.html":{}}}],["querystring",{"_index":586,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["querystring.split",{"_index":872,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["question",{"_index":587,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/session-checks.html":{}}}],["questionmarkposition",{"_index":863,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["quite",{"_index":1996,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["read",{"_index":530,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"miscellaneous/variables.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["reading",{"_index":1851,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["readme",{"_index":1465,"title":{},"body":{"index.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["readonly",{"_index":780,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["ready",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["real",{"_index":512,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["reason",{"_index":752,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["receive",{"_index":969,"title":{},"body":{"changelog.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{}}}],["received",{"_index":62,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["receivedtokens",{"_index":642,"title":{"classes/ReceivedTokens.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["receives",{"_index":2048,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["receiving",{"_index":2066,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["recommend",{"_index":1298,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["recommended",{"_index":1508,"title":{},"body":{"index.html":{}}}],["recommented",{"_index":549,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["redhat",{"_index":1264,"title":{},"body":{"index.html":{}}}],["redhat's",{"_index":1289,"title":{},"body":{"index.html":{}}}],["redirect",{"_index":592,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["redirected",{"_index":1354,"title":{},"body":{"index.html":{}}}],["redirecting",{"_index":1367,"title":{},"body":{"index.html":{}}}],["redirects",{"_index":1486,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["redirecturi",{"_index":959,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["redirecturis",{"_index":1382,"title":{},"body":{"index.html":{}}}],["refactor",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":596,"title":{"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["refresh.html",{"_index":1149,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{}}}],["refresh.html\";please",{"_index":1683,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["refresh_token",{"_index":691,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["refresh_tokens",{"_index":1633,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["refreshed",{"_index":1841,"title":{},"body":{"additional-documentation/events.html":{}}}],["refreshes",{"_index":577,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["refreshing",{"_index":1357,"title":{"additional-documentation/refreshing-a-token.html":{}},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["refreshtoken",{"_index":1636,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["regarding",{"_index":1363,"title":{},"body":{"index.html":{},"additional-documentation/using-systemjs.html":{}}}],["regards",{"_index":1515,"title":{},"body":{"index.html":{}}}],["register",{"_index":1886,"title":{},"body":{"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["registerd",{"_index":1435,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["registered",{"_index":825,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["registration_endpoint",{"_index":710,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["related",{"_index":1744,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/original-config-api.html":{}}}],["relations",{"_index":1991,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["release",{"_index":1327,"title":{},"body":{"index.html":{}}}],["removal",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":1022,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["removed",{"_index":1527,"title":{},"body":{"index.html":{}}}],["removeitem",{"_index":732,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["removeitem(key",{"_index":668,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["removing",{"_index":636,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["rendering",{"_index":1902,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"additional-documentation/server-side-rendering.html":{}}}],["replace",{"_index":1158,"title":{},"body":{"changelog.html":{}}}],["replaced",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["replacements",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["replay",{"_index":602,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["represents",{"_index":674,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["req",{"_index":213,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.clone",{"_index":268,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers",{"_index":1777,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["req.headers.set('authorization",{"_index":267,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["req.url.tolowercase",{"_index":243,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["request",{"_index":1449,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["request_object_signing_alg_values_supported",{"_index":723,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["requested",{"_index":1620,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["requests",{"_index":1147,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["require','jsrsasign",{"_index":1961,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["requirements",{"_index":1631,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["reset",{"_index":278,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"overview.html":{}}}],["resolve",{"_index":2055,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["resolve(true",{"_index":2059,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["resolves",{"_index":1837,"title":{},"body":{"additional-documentation/events.html":{}}}],["resource",{"_index":227,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-password-flow.html":{}}}],["resources",{"_index":1267,"title":{},"body":{"index.html":{}}}],["resourceserver",{"_index":818,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["resourceservererrorhandler",{"_index":824,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{}}}],["respect",{"_index":1634,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/authorization-servers.html":{}}}],["respective",{"_index":1292,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["respond",{"_index":1670,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["response",{"_index":682,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{}}}],["response_modes_supported",{"_index":714,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["response_types",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["response_types_supported",{"_index":712,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["responsetype",{"_index":1034,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["restriction",{"_index":1558,"title":{},"body":{"license.html":{}}}],["result",{"_index":181,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"additional-documentation/silent-refresh.html":{}}}],["results",{"_index":115,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/getting-started.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["retrieved",{"_index":1831,"title":{},"body":{"additional-documentation/events.html":{}}}],["retrieving",{"_index":594,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["return",{"_index":104,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["returned",{"_index":1701,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["returns",{"_index":43,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"injectables/SystemDateTimeProvider.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/using-password-flow.html":{}}}],["returnto",{"_index":2090,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["reverse",{"_index":1528,"title":{},"body":{"index.html":{}}}],["revocation",{"_index":1098,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revocation_endpoint",{"_index":730,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["revocationendpoint",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["revoke",{"_index":1099,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["revoketokenandlogout",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["rfc",{"_index":1142,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rights",{"_index":1560,"title":{},"body":{"license.html":{}}}],["risk",{"_index":742,"title":{},"body":{"classes/NullValidationHandler.html":{}}}],["robin",{"_index":1181,"title":{},"body":{"changelog.html":{}}}],["roblabat",{"_index":1157,"title":{},"body":{"changelog.html":{}}}],["root",{"_index":1853,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["rotation",{"_index":2077,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["route",{"_index":1501,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["router",{"_index":1279,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routermodule.forroot(app_routes",{"_index":1855,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routes",{"_index":1852,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["routing",{"_index":1118,"title":{"additional-documentation/routing-with-the-hashstrategy.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["run",{"_index":1128,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["running",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["runs",{"_index":1374,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["rxjs",{"_index":219,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"dependencies.html":{}}}],["rxjs/add/operator/catch",{"_index":1771,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/observable",{"_index":1770,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["rxjs/operators",{"_index":226,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["s",{"_index":157,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/functions.html":{}}}],["safe",{"_index":1353,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["sake",{"_index":1412,"title":{},"body":{"index.html":{},"additional-documentation/original-config-api.html":{}}}],["salt",{"_index":463,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["same",{"_index":417,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sample",{"_index":1086,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["save",{"_index":542,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["saveafter",{"_index":1518,"title":{},"body":{"index.html":{}}}],["saved",{"_index":1832,"title":{},"body":{"additional-documentation/events.html":{}}}],["saveoption",{"_index":1388,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":2068,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["scope",{"_index":692,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["scope/state",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["scopes_supported",{"_index":711,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["script",{"_index":1150,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1693,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["seconds",{"_index":1739,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["secret",{"_index":1439,"title":{},"body":{"index.html":{},"additional-documentation/using-password-flow.html":{}}}],["section",{"_index":1505,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["security",{"_index":611,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{}}}],["see",{"_index":1073,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["selector",{"_index":1967,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["sell",{"_index":1566,"title":{},"body":{"license.html":{}}}],["send",{"_index":826,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["sendaccesstoken",{"_index":248,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["sending",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["sends",{"_index":1885,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sense",{"_index":1109,"title":{},"body":{"changelog.html":{},"additional-documentation/using-password-flow.html":{}}}],["separatorindex",{"_index":868,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["server",{"_index":228,"title":{"additional-documentation/server-side-rendering.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{}}}],["server's",{"_index":1368,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity",{"_index":1676,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["server.azurewebsites.net/identity/.well",{"_index":2008,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/authorize",{"_index":1913,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/endsession",{"_index":1922,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["server.azurewebsites.net/identity/connect/token",{"_index":2012,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.azurewebsites.net/identity/connect/userinfo",{"_index":2016,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["server.code",{"_index":1437,"title":{},"body":{"index.html":{}}}],["servers",{"_index":1474,"title":{"additional-documentation/authorization-servers.html":{}},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["service",{"_index":233,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["service_documentation",{"_index":728,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["session",{"_index":974,"title":{"additional-documentation/session-checks.html":{}},"body":{"changelog.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["session's",{"_index":1893,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["session_changed",{"_index":770,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["session_error",{"_index":771,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["session_state",{"_index":1120,"title":{},"body":{"changelog.html":{}}}],["session_terminated",{"_index":772,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/session-checks.html":{}}}],["session_terminated')).subscribe(e",{"_index":1899,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["session_unchanged",{"_index":773,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["sessionchecksenabled",{"_index":1889,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["sessionstorage",{"_index":663,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["set",{"_index":583,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/custom-query-parameters.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["set('authorization",{"_index":1778,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["setitem",{"_index":733,"title":{},"body":{"injectables/MemoryStorage.html":{},"classes/OAuthStorage.html":{}}}],["setitem(key",{"_index":669,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sets",{"_index":1796,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["setstorage",{"_index":1917,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["setting",{"_index":1083,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["settings",{"_index":1798,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["setup",{"_index":1396,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["several",{"_index":1932,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sha",{"_index":113,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{}}}],["sha256",{"_index":146,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"changelog.html":{},"dependencies.html":{}}}],["sha256(accesstoken",{"_index":91,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["sha256js",{"_index":149,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["sha256js.ts",{"_index":271,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["sha256js.ts:139",{"_index":494,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:140",{"_index":493,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:149",{"_index":492,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:157",{"_index":502,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:173",{"_index":499,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:190",{"_index":503,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:220",{"_index":501,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:257",{"_index":500,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:264",{"_index":498,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:271",{"_index":497,"title":{},"body":{"classes/Hash.html":{}}}],["sha256js.ts:286",{"_index":286,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:287",{"_index":288,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:292",{"_index":282,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:327",{"_index":295,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:334",{"_index":289,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:343",{"_index":297,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:349",{"_index":293,"title":{},"body":{"classes/HMAC.html":{}}}],["sha256js.ts:360",{"_index":291,"title":{},"body":{"classes/HMAC.html":{}}}],["shaking",{"_index":1517,"title":{},"body":{"index.html":{}}}],["shall",{"_index":1574,"title":{},"body":{"license.html":{}}}],["share",{"_index":1930,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["sharing",{"_index":1955,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["ship",{"_index":1992,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["short",{"_index":1814,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-password-flow.html":{}}}],["showdebuginformation",{"_index":1458,"title":{},"body":{"index.html":{}}}],["shown",{"_index":1464,"title":{},"body":{"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["shows",{"_index":1756,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers.html":{}}}],["side",{"_index":661,"title":{"additional-documentation/server-side-rendering.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/server-side-rendering.html":{}}}],["sign",{"_index":937,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["signature",{"_index":67,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["signs",{"_index":1876,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["silent",{"_index":576,"title":{"additional-documentation/silent-refresh.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["silent_refresh_error",{"_index":765,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["silent_refresh_timeout",{"_index":767,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silently_refreshed",{"_index":766,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["silentrefresh",{"_index":1725,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["silentrefreshredirecturi",{"_index":1673,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{}}}],["silentrefreshtimeout",{"_index":1736,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["similar",{"_index":1997,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["simple",{"_index":657,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{}}}],["single",{"_index":550,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["site",{"_index":1089,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["size",{"_index":1326,"title":{},"body":{"index.html":{}}}],["sizes",{"_index":555,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["skip",{"_index":741,"title":{},"body":{"classes/NullValidationHandler.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["skipping",{"_index":2038,"title":{"additional-documentation/manually-skipping-login-form.html":{}},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["skips",{"_index":1868,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["smaller",{"_index":553,"title":{},"body":{"classes/JwksValidationHandler.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["snippet",{"_index":1815,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["software",{"_index":1553,"title":{},"body":{"license.html":{}}}],["solution",{"_index":1428,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["something",{"_index":2047,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["somevalue",{"_index":1807,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/DateTimeProvider.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"injectables/SystemDateTimeProvider.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{}}}],["sources",{"_index":1268,"title":{},"body":{"index.html":{}}}],["spa",{"_index":1381,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["spa's",{"_index":1434,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["spas",{"_index":1441,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["spec",{"_index":1835,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["special",{"_index":2073,"title":{},"body":{"additional-documentation/authorization-servers.html":{}}}],["specific",{"_index":1455,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["specification",{"_index":1940,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["specifies",{"_index":1629,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["specs",{"_index":1364,"title":{},"body":{"index.html":{},"additional-documentation/authorization-servers.html":{}}}],["src",{"_index":1344,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":1389,"title":{},"body":{"index.html":{}}}],["standard",{"_index":1074,"title":{},"body":{"changelog.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/using-password-flow.html":{}}}],["start",{"_index":1946,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["started",{"_index":900,"title":{"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/getting-started.html":{}},"body":{"additional-documentation/getting-started.html":{}}}],["starting",{"_index":1802,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["starts",{"_index":1965,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["startup",{"_index":1994,"title":{},"body":{"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["state",{"_index":414,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/events.html":{}}}],["static",{"_index":799,"title":{},"body":{"modules/OAuthModule.html":{}}}],["status",{"_index":1747,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["steyer",{"_index":1177,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["still",{"_index":1410,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["stopautomaticrefresh",{"_index":1078,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1079,"title":{},"body":{"changelog.html":{}}}],["storage",{"_index":658,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["storagefactory",{"_index":2035,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["store",{"_index":1472,"title":{},"body":{"index.html":{}}}],["stored",{"_index":1838,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["storing",{"_index":659,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["str",{"_index":1239,"title":{},"body":{"miscellaneous/functions.html":{},"additional-documentation/silent-refresh.html":{}}}],["strategy",{"_index":1656,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["stream",{"_index":1811,"title":{},"body":{"additional-documentation/events.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["strict",{"_index":2067,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["strictdiscoverydocumentvalidation",{"_index":1927,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["string",{"_index":28,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HashHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["string.fromcharcode(e",{"_index":183,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["strong",{"_index":1989,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["sub",{"_index":696,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["subject",{"_index":1571,"title":{},"body":{"license.html":{}}}],["subject_types_supported",{"_index":716,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["sublicense",{"_index":1564,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1575,"title":{},"body":{"license.html":{}}}],["succeeded",{"_index":1622,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["successful",{"_index":1781,"title":{},"body":{"additional-documentation/callback-after-login.html":{}}}],["successfully",{"_index":625,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/events.html":{}}}],["such",{"_index":1446,"title":{},"body":{"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/using-password-flow.html":{}}}],["sufficient",{"_index":1691,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["suited",{"_index":1988,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["summary.json",{"_index":1347,"title":{},"body":{"index.html":{}}}],["super",{"_index":556,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["super(type",{"_index":781,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{}}}],["support",{"_index":961,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/authorization-servers.html":{}}}],["supported",{"_index":112,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"index.html":{},"additional-documentation/original-config-api.html":{}}}],["supports",{"_index":1421,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{}}}],["sure",{"_index":1346,"title":{},"body":{"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["switching",{"_index":1491,"title":{},"body":{"index.html":{}}}],["symbol",{"_index":584,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["system.config",{"_index":1951,"title":{},"body":{"additional-documentation/using-systemjs.html":{}}}],["systemdatetimeprovider",{"_index":128,"title":{"injectables/SystemDateTimeProvider.html":{}},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{}}}],["systemjs",{"_index":1947,"title":{"additional-documentation/using-systemjs.html":{}},"body":{"additional-documentation/using-systemjs.html":{}}}],["t1",{"_index":381,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["t2",{"_index":382,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["table",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":223,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["take(1",{"_index":263,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["takes",{"_index":1409,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{}}}],["targeting",{"_index":1792,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["task",{"_index":1490,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{}}}],["tasks",{"_index":1809,"title":{},"body":{"additional-documentation/events.html":{}}}],["telling",{"_index":510,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["tells",{"_index":1481,"title":{},"body":{"index.html":{}}}],["template",{"_index":1980,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["templateurl",{"_index":1969,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["tenant",{"_index":1804,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["terminated",{"_index":1901,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["tested",{"_index":1276,"title":{},"body":{"index.html":{}}}],["testen",{"_index":1984,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["testing",{"_index":1260,"title":{},"body":{"index.html":{}}}],["tests",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":1215,"title":{},"body":{"dependencies.html":{}}}],["textencoder",{"_index":164,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["thanks",{"_index":1168,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/using-systemjs.html":{}}}],["that's",{"_index":2004,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["then(info",{"_index":1726,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["things",{"_index":1790,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["third",{"_index":1654,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["this.authservice.events.subscribe(event",{"_index":1823,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.authstorage.getitem('access_token",{"_index":1776,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.blocksize",{"_index":441,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer",{"_index":411,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer[padlength",{"_index":427,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.buffer[this.bufferlength",{"_index":406,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.bufferlength",{"_index":405,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.byteshashed",{"_index":420,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.calchash(params.accesstoken",{"_index":90,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.checkurl(url",{"_index":246,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.configure",{"_index":1971,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.data.delete(key",{"_index":672,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.get(key",{"_index":671,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.data.set(key",{"_index":673,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["this.document",{"_index":1049,"title":{},"body":{"changelog.html":{}}}],["this.errorhandler.handleerror(err",{"_index":252,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.finish(out",{"_index":437,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.finished",{"_index":418,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.inferhashalgorithm(params.idtokenheader",{"_index":87,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["this.inner.blocksize",{"_index":285,"title":{},"body":{"classes/HMAC.html":{}}}],["this.inner.digestlength",{"_index":287,"title":{},"body":{"classes/HMAC.html":{}}}],["this.moduleconfig",{"_index":244,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver",{"_index":245,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls",{"_index":239,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find((u",{"_index":240,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.allowedurls.find(u",{"_index":1774,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation",{"_index":237,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.customurlvalidation(url",{"_index":238,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.moduleconfig.resourceserver.sendaccesstoken",{"_index":249,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["this.oauthservice",{"_index":2042,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.clientid",{"_index":1915,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.configure(authcodeflowconfig",{"_index":1469,"title":{},"body":{"index.html":{}}}],["this.oauthservice.configure(authconfig",{"_index":1972,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.customqueryparams",{"_index":1803,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["this.oauthservice.dummyclientsecret",{"_index":2005,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.events(filter(e",{"_index":2049,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.events.pipe",{"_index":255,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.events.pipe(filter(e",{"_index":1898,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["this.oauthservice.events.subscribe(e",{"_index":1816,"title":{},"body":{"additional-documentation/events.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflow('max",{"_index":2021,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.fetchtokenusingpasswordflowandloaduserprofile('max",{"_index":2026,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.getaccesstoken",{"_index":261,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["this.oauthservice.getidentityclaims",{"_index":1978,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.hasvalidaccesstoken",{"_index":2052,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.hasvalididtoken",{"_index":2053,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.initcodeflow();there",{"_index":1459,"title":{},"body":{"index.html":{}}}],["this.oauthservice.initimplicitflow('http://www.myurl.com/x/y/z');after",{"_index":1621,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}}}],["this.oauthservice.initloginflow",{"_index":1975,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["this.oauthservice.initloginflow();also",{"_index":1463,"title":{},"body":{"index.html":{}}}],["this.oauthservice.issuer",{"_index":2062,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument().then",{"_index":2063,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.loaddiscoverydocument(url).then",{"_index":2010,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandlogin",{"_index":1482,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin",{"_index":1483,"title":{},"body":{"index.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.loaddiscoverydocumentandtrylogin();logging",{"_index":1470,"title":{},"body":{"index.html":{}}}],["this.oauthservice.loaduserprofile",{"_index":2024,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.loginurl",{"_index":1912,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.logout",{"_index":1977,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.logout();if",{"_index":1476,"title":{},"body":{"index.html":{}}}],["this.oauthservice.logouturl",{"_index":1921,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}}}],["this.oauthservice.redirecturi",{"_index":1914,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.refreshtoken().then",{"_index":2030,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.refreshtoken();automatically",{"_index":1637,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["this.oauthservice.revoketokenandlogout",{"_index":2091,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["this.oauthservice.revoketokenandlogout();skipping",{"_index":1477,"title":{},"body":{"index.html":{}}}],["this.oauthservice.scope",{"_index":1916,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.setstorage(sessionstorage",{"_index":1919,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.setupautomaticsilentrefresh();by",{"_index":1639,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["this.oauthservice.silentrefreshredirecturi",{"_index":1682,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["this.oauthservice.tokenendpoint",{"_index":2011,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.oauthservice.tokenvalidationhandler",{"_index":1869,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-implicit-flow.html":{}}}],["this.oauthservice.trylogin",{"_index":1623,"title":{},"body":{"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["this.oauthservice.trylogin().then(_",{"_index":1858,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.oauthservice.userinfoendpoint",{"_index":2015,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["this.parsequerystring(hash",{"_index":866,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["this.router.navigate",{"_index":1859,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["this.state",{"_index":410,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.state[i",{"_index":434,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["this.tohashstring(hasharray",{"_index":175,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["this.tohashstring2(hasharray",{"_index":176,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["this.window.addeventlistener('unload",{"_index":2058,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["those",{"_index":1635,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}}}],["three",{"_index":1678,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["through",{"_index":648,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["throw",{"_index":109,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["throwerror",{"_index":834,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["throwerror(err",{"_index":835,"title":{},"body":{"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerErrorHandler.html":{}}}],["time",{"_index":119,"title":{},"body":{"classes/DateTimeProvider.html":{},"injectables/SystemDateTimeProvider.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["timeout",{"_index":225,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"additional-documentation/silent-refresh.html":{}}}],["timeout(this.oauthservice.waitfortokeninmsec",{"_index":259,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["timeoutfactor",{"_index":1647,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["timer",{"_index":1839,"title":{},"body":{"additional-documentation/events.html":{}}}],["timers",{"_index":1080,"title":{},"body":{"changelog.html":{}}}],["timespan",{"_index":1735,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["together",{"_index":1903,"title":{},"body":{"additional-documentation/server-side-rendering.html":{}}}],["tohashstring",{"_index":134,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring(buffer",{"_index":137,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["tohashstring(hexstring",{"_index":193,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["tohashstring2",{"_index":135,"title":{},"body":{"injectables/DefaultHashHandler.html":{}}}],["tohashstring2(bytearray",{"_index":141,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["token",{"_index":254,"title":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/token-refresh.html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["token's",{"_index":1642,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["token(s",{"_index":632,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["token.html",{"_index":1499,"title":{},"body":{"index.html":{}}}],["token_endpoint",{"_index":703,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_methods_supported",{"_index":704,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_endpoint_auth_signing_alg_values_supported",{"_index":705,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_error",{"_index":761,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_expires",{"_index":769,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_received",{"_index":258,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["token_received')).subscribe",{"_index":2050,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["token_refresh_error",{"_index":764,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_refreshed",{"_index":763,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_revoke_error",{"_index":777,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["token_type",{"_index":689,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["token_validation_error",{"_index":768,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["tokenhash",{"_index":88,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.length",{"_index":96,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenhash.substr(0",{"_index":95,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["tokenresponse",{"_index":688,"title":{"interfaces/TokenResponse.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{}}}],["tokens",{"_index":83,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["tokensetup",{"_index":1129,"title":{},"body":{"changelog.html":{}}}],["tokenvalidationhandler",{"_index":641,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["tokenvalidator",{"_index":1863,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["tort",{"_index":1597,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":1405,"title":{},"body":{"index.html":{}}}],["transmit",{"_index":2001,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["transmitted",{"_index":1801,"title":{},"body":{"additional-documentation/custom-query-parameters.html":{}}}],["transmitting",{"_index":1742,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["tree",{"_index":1516,"title":{},"body":{"index.html":{}}}],["tries",{"_index":1923,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["triggers",{"_index":1653,"title":{},"body":{"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{}}}],["true",{"_index":93,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["true);the",{"_index":2092,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["trust",{"_index":1990,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["try",{"_index":1322,"title":{},"body":{"index.html":{},"additional-documentation/callback-after-login.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["trylogin",{"_index":562,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["trylogincodeflow",{"_index":1156,"title":{},"body":{"changelog.html":{}}}],["ts",{"_index":1918,"title":{},"body":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["tslib",{"_index":1218,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":1945,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["tutorial",{"_index":1534,"title":{},"body":{"index.html":{}}}],["tutorials",{"_index":1533,"title":{},"body":{"index.html":{}}}],["two",{"_index":1789,"title":{},"body":{"additional-documentation/popup-based-login.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["type",{"_index":40,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"interceptors/DefaultOAuthInterceptor.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/HashHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthLogger.html":{},"modules/OAuthModule.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthNoopResourceServerErrorHandler.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthResourceServerErrorHandler.html":{},"classes/OAuthStorage.html":{},"classes/OAuthSuccessEvent.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"injectables/UrlHelperService.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["typealiases",{"_index":1608,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":453,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["typeerror('expected",{"_index":158,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["typeof",{"_index":156,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["types",{"_index":2078,"title":{},"body":{"additional-documentation/authorization-servers/auth0.html":{}}}],["typo",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["u",{"_index":379,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["ui_locales_supported",{"_index":729,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["uint32array",{"_index":303,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["uint8array",{"_index":281,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["uint8array([1",{"_index":465,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(buffer",{"_index":184,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["uint8array(d.length",{"_index":161,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["uint8array(digestlength",{"_index":459,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/variables.html":{}}}],["uint8array(hmac_.digestlength",{"_index":478,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(length",{"_index":481,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["uint8array(this.digestlength",{"_index":436,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["unchanged",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["under",{"_index":1797,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["unfortunately",{"_index":1895,"title":{},"body":{"additional-documentation/session-checks.html":{}}}],["universal",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":1484,"title":{},"body":{"index.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["upcoming",{"_index":1256,"title":{},"body":{"index.html":{}}}],["update",{"_index":279,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"changelog.html":{},"index.html":{}}}],["update(data",{"_index":296,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["upgrade",{"_index":1103,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":1530,"title":{},"body":{"index.html":{}}}],["uri",{"_index":593,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["url",{"_index":242,"title":{"additional-documentation/preserving-state-(like-the-requested-url).html":{}},"body":{"interceptors/DefaultOAuthInterceptor.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{},"additional-documentation/preserving-state-(like-the-requested-url).html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["url.startswith(u",{"_index":1775,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["url.tolowercase().startswith(u.tolowercase",{"_index":241,"title":{},"body":{"interceptors/DefaultOAuthInterceptor.html":{}}}],["url?x=1",{"_index":1123,"title":{},"body":{"changelog.html":{}}}],["urlhelperservice",{"_index":851,"title":{"injectables/UrlHelperService.html":{}},"body":{"injectables/UrlHelperService.html":{}}}],["urls",{"_index":821,"title":{},"body":{"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"index.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["usage",{"_index":1155,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":18,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"license.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["usecase",{"_index":1454,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["useclass",{"_index":1874,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["used",{"_index":573,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthModuleConfig.html":{},"classes/OAuthResourceServerConfig.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"index.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/server-side-rendering.html":{},"additional-documentation/using-password-flow.html":{}}}],["usefactory",{"_index":2036,"title":{},"body":{"additional-documentation/configure-custom-oauthstorage.html":{}}}],["usehash",{"_index":1856,"title":{},"body":{"additional-documentation/routing-with-the-hashstrategy.html":{}}}],["user",{"_index":693,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/original-config-api.html":{}}}],["user's",{"_index":2019,"title":{},"body":{"additional-documentation/using-password-flow.html":{}}}],["user_profile_load_error",{"_index":760,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{}}}],["user_profile_loaded",{"_index":759,"title":{},"body":{"classes/OAuthErrorEvent.html":{},"classes/OAuthEvent.html":{},"classes/OAuthInfoEvent.html":{},"classes/OAuthSuccessEvent.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/events.html":{}}}],["userinfo",{"_index":695,"title":{"interfaces/UserInfo.html":{}},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"changelog.html":{},"index.html":{}}}],["userinfo_encryption_alg_values_supported",{"_index":718,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_encryption_enc_values_supported",{"_index":719,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_endpoint",{"_index":706,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["userinfo_signing_alg_values_supported",{"_index":717,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["username/password",{"_index":1376,"title":{},"body":{"index.html":{}}}],["username/passwort",{"_index":1982,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["users",{"_index":511,"title":{},"body":{"classes/JwksValidationHandler.html":{},"additional-documentation/server-side-rendering.html":{}}}],["uses",{"_index":467,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/working-with-httpinterceptors.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/original-config-api.html":{}}}],["usesilentrefresh",{"_index":1084,"title":{},"body":{"changelog.html":{},"additional-documentation/silent-refresh.html":{}}}],["using",{"_index":36,"title":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/routing-with-the-hashstrategy.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/using-systemjs.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{}}}],["utils",{"_index":520,"title":{},"body":{"classes/JwksValidationHandler.html":{}}}],["v",{"_index":371,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/WebHttpUrlEncodingCodec.html":{},"miscellaneous/functions.html":{}}}],["v[0",{"_index":383,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[1",{"_index":384,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[2",{"_index":385,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[3",{"_index":386,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[4",{"_index":387,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[5",{"_index":388,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[6",{"_index":389,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["v[7",{"_index":390,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["valid",{"_index":1487,"title":{},"body":{"index.html":{}}}],["validate",{"_index":82,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validateathash",{"_index":16,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(params",{"_index":56,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validateathash(validationparams",{"_index":523,"title":{},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{}}}],["validated",{"_index":626,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"additional-documentation/callback-after-login.html":{}}}],["validates",{"_index":59,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validatesignature",{"_index":26,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validatesignature(validationparams",{"_index":65,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validating",{"_index":739,"title":{},"body":{"classes/NullValidationHandler.html":{},"index.html":{}}}],["validation",{"_index":508,"title":{"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}},"body":{"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/original-config-api.html":{}}}],["validation/fast",{"_index":270,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["validation/hash",{"_index":133,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"miscellaneous/functions.html":{}}}],["validation/jwks",{"_index":507,"title":{},"body":{"classes/JwksValidationHandler.html":{},"miscellaneous/variables.html":{}}}],["validation/null",{"_index":737,"title":{},"body":{"classes/NullValidationHandler.html":{},"modules/OAuthModule.html":{}}}],["validation/validation",{"_index":7,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validationhandler",{"_index":12,"title":{"classes/ValidationHandler.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/NullValidationHandler.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"additional-documentation/adapt-id_token-validation.html":{}}}],["validationhandlerclass",{"_index":802,"title":{},"body":{"modules/OAuthModule.html":{},"miscellaneous/functions.html":{}}}],["validationparams",{"_index":57,"title":{"interfaces/ValidationParams.html":{}},"body":{"classes/AbstractValidationHandler.html":{},"classes/JwksValidationHandler.html":{},"classes/NullValidationHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["validations",{"_index":1366,"title":{},"body":{"index.html":{}}}],["value",{"_index":35,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"modules/OAuthModule.html":{},"injectables/UrlHelperService.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/refreshing-a-token.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/token-refresh.html":{},"additional-documentation/original-config-api.html":{}}}],["value.tostring(16",{"_index":189,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["values",{"_index":638,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["valuetohash",{"_index":42,"title":{},"body":{"classes/AbstractValidationHandler.html":{},"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{},"classes/ValidationHandler.html":{},"interfaces/ValidationParams.html":{}}}],["var",{"_index":1696,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["variables",{"_index":1611,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["various",{"_index":1938,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vdveer",{"_index":1164,"title":{},"body":{"changelog.html":{}}}],["versatility",{"_index":1496,"title":{},"body":{"index.html":{}}}],["version",{"_index":533,"title":{},"body":{"classes/JwksValidationHandler.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/events.html":{},"additional-documentation/session-checks.html":{}}}],["versions",{"_index":1310,"title":{},"body":{"index.html":{}}}],["via",{"_index":1284,"title":{},"body":{"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/events.html":{},"additional-documentation/adapt-id_token-validation.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["vital",{"_index":1445,"title":{},"body":{"index.html":{}}}],["void",{"_index":290,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["voucher",{"_index":1680,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/original-config-api.html":{}}}],["w",{"_index":369,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"miscellaneous/functions.html":{}}}],["w[i",{"_index":394,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["want",{"_index":629,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/using-password-flow.html":{},"additional-documentation/configure-custom-oauthstorage.html":{},"additional-documentation/manually-skipping-login-form.html":{}}}],["warn",{"_index":787,"title":{},"body":{"classes/OAuthLogger.html":{}}}],["warn(message",{"_index":655,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{}}}],["warning",{"_index":1871,"title":{},"body":{"additional-documentation/adapt-id_token-validation.html":{}}}],["warranties",{"_index":1582,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1577,"title":{},"body":{"license.html":{}}}],["way",{"_index":1106,"title":{},"body":{"changelog.html":{},"additional-documentation/working-with-httpinterceptors.html":{}}}],["we've",{"_index":1286,"title":{},"body":{"index.html":{}}}],["web",{"_index":1373,"title":{},"body":{"index.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["webcomponents/custom",{"_index":1200,"title":{},"body":{"dependencies.html":{}}}],["webhttpurlencodingcodec",{"_index":877,"title":{"classes/WebHttpUrlEncodingCodec.html":{}},"body":{"classes/WebHttpUrlEncodingCodec.html":{}}}],["webpack",{"_index":1285,"title":{},"body":{"index.html":{}}}],["websocket",{"_index":1007,"title":{},"body":{"changelog.html":{}}}],["well",{"_index":647,"title":{},"body":{"classes/LoginOptions.html":{},"injectables/MemoryStorage.html":{},"classes/OAuthLogger.html":{},"classes/OAuthStorage.html":{},"interfaces/OidcDiscoveryDoc.html":{},"interfaces/ParsedIdToken.html":{},"classes/ReceivedTokens.html":{},"interfaces/TokenResponse.html":{},"interfaces/UserInfo.html":{},"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/callback-after-login.html":{}}}],["when/some",{"_index":1358,"title":{},"body":{"index.html":{}}}],["whenever",{"_index":1830,"title":{},"body":{"additional-documentation/events.html":{}}}],["whether",{"_index":1594,"title":{},"body":{"license.html":{}}}],["white",{"_index":1752,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["widow",{"_index":1706,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["window",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["window.crypto.subtle.digest(algorithm",{"_index":166,"title":{},"body":{"injectables/DefaultHashHandler.html":{},"classes/HashHandler.html":{}}}],["window.location.hash",{"_index":860,"title":{},"body":{"injectables/UrlHelperService.html":{}}}],["window.location.origin",{"_index":1432,"title":{},"body":{"index.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/session-checks.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{},"additional-documentation/using-implicit-flow.html":{},"additional-documentation/original-config-api.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["window.opener",{"_index":1687,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/popup-based-login.html":{}}}],["window.parent",{"_index":1795,"title":{},"body":{"additional-documentation/popup-based-login.html":{}}}],["window.parent).postmessage(location.hash",{"_index":1688,"title":{},"body":{"additional-documentation/silent-refresh.html":{}}}],["windowref",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["wish",{"_index":2046,"title":{},"body":{"additional-documentation/manually-skipping-login-form.html":{}}}],["within",{"_index":1658,"title":{},"body":{"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/original-config-api.html":{}}}],["without",{"_index":1557,"title":{"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{}},"body":{"license.html":{},"additional-documentation/silent-refresh.html":{},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{},"additional-documentation/using-password-flow.html":{}}}],["work",{"_index":1093,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/popup-based-login.html":{},"additional-documentation/authorization-servers.html":{},"additional-documentation/authorization-servers/using-identity-server.html":{},"additional-documentation/authorization-servers/using-keycloak.html":{},"additional-documentation/authorization-servers/auth0.html":{}}}],["working",{"_index":1165,"title":{"additional-documentation/working-with-httpinterceptors.html":{}},"body":{"changelog.html":{}}}],["works",{"_index":455,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{},"additional-documentation/configure-custom-oauthstorage.html":{}}}],["workshops",{"_index":1542,"title":{},"body":{"index.html":{}}}],["write",{"_index":1761,"title":{},"body":{"additional-documentation/working-with-httpinterceptors.html":{}}}],["ws02",{"_index":1935,"title":{},"body":{"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{}}}],["yes",{"_index":789,"title":{},"body":{"classes/OAuthLogger.html":{},"injectables/UrlHelperService.html":{},"miscellaneous/functions.html":{}}}],["you're",{"_index":1529,"title":{},"body":{"index.html":{}}}],["you've",{"_index":1973,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}],["yourself",{"_index":2065,"title":{},"body":{"additional-documentation/original-config-api.html":{}}}],["zeroes",{"_index":461,"title":{},"body":{"classes/HMAC.html":{},"classes/Hash.html":{}}}],["zone.js",{"_index":1220,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":1605,"title":{},"body":{"overview.html":{}}}],["zum",{"_index":1983,"title":{},"body":{"additional-documentation/using-implicit-flow.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AbstractValidationHandler.html":{"url":"classes/AbstractValidationHandler.html","title":"class - AbstractValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AbstractValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                This abstract implementation of ValidationHandler already implements\nthe method validateAtHash. However, to make use of it,\nyou have to override the method calcHash.\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                calcHash\n                            \n                            \n                                    Protected\n                                inferHashAlgorithm\n                            \n                            \n                                    Async\n                                validateAtHash\n                            \n                            \n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            Abstract\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:88\n                        \n                    \n\n\n            \n                \n                        Calculates the hash for the passed value by using\nthe passed hash algorithm.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        inferHashAlgorithm\n                        \n                    \n                \n            \n            \n                \n                        \n                    inferHashAlgorithm(jwtHeader: object)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:71\n                        \n                    \n\n\n            \n                \n                        Infers the name of the hash algorithm to use\nfrom the alg field of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                jwtHeader\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    the id_token's parsed header\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAtHash(params: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:46\n                        \n                    \n\n\n            \n                \n                        Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                params\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:41\n                        \n                    \n\n\n            \n                \n                        Validates the signature of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DateTimeProvider.html":{"url":"classes/DateTimeProvider.html","title":"class - DateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                new\n                            \n                            \n                                    Abstract\n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        new\n                        \n                    \n                \n            \n            \n                \n                        \n                    new()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/date-time-provider.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Date\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        now\n                        \n                    \n                \n            \n            \n                \n                        \n                    now()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/date-time-provider.ts:4\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport abstract class DateTimeProvider {\n  abstract now(): number;\n  abstract new(): Date;\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  now(): number {\n    return Date.now();\n  }\n\n  new(): Date {\n    return new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DefaultHashHandler.html":{"url":"injectables/DefaultHashHandler.html","title":"injectable - DefaultHashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DefaultHashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                calcHash\n                            \n                            \n                                toHashString\n                            \n                            \n                                toHashString2\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:31\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHashString\n                        \n                    \n                \n            \n            \n                \ntoHashString(buffer: ArrayBuffer)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:58\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        ArrayBuffer\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toHashString2\n                        \n                    \n                \n            \n            \n                \ntoHashString2(byteArray: number[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                byteArray\n                                            \n                                                        number[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { factory } from './js-sha256';\n// const sha256 = factory();\n\nimport fsha256 from './fast-sha256js';\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  const d = s,\n    b = new Uint8Array(d.length);\n  for (let i = 0; i  {\n    // const encoder = new TextEncoder();\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n    // const data = encoder.encode(valueToHash);\n\n    // const fhash = fsha256(valueToHash);\n\n    const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\n\n    // const hashArray = (sha256 as any).array(valueToHash);\n    // // const hashString = this.toHashString(hashArray);\n    // const hashString = this.toHashString2(hashArray);\n\n    // console.debug('hash orig - cand', candHash, hashString);\n    // alert(1);\n\n    return candHash;\n  }\n\n  toHashString2(byteArray: number[]) {\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  toHashString(buffer: ArrayBuffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  // hexString(buffer) {\n  //     const byteArray = new Uint8Array(buffer);\n  //     const hexCodes = [...byteArray].map(value => {\n  //       const hexCode = value.toString(16);\n  //       const paddedHexCode = hexCode.padStart(2, '0');\n  //       return paddedHexCode;\n  //     });\n\n  //     return hexCodes.join('');\n  //   }\n\n  // toHashString(hexString: string) {\n  //   let result = '';\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/DefaultOAuthInterceptor.html":{"url":"interceptors/DefaultOAuthInterceptor.html","title":"interceptor - DefaultOAuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  DefaultOAuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/default-oauth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(oAuthService: OAuthService, errorHandler: OAuthResourceServerErrorHandler, moduleConfig: OAuthModuleConfig)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        oAuthService\n                                                  \n                                                        \n                                                                        OAuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        errorHandler\n                                                  \n                                                        \n                                                                        OAuthResourceServerErrorHandler\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        moduleConfig\n                                                  \n                                                        \n                                                                        OAuthModuleConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                        \n                    intercept(req: HttpRequest, next: HttpHandler)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/default-oauth.interceptor.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                        HttpRequest\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                next\n                                            \n                                                        HttpHandler\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\n\nimport {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable, of, merge } from 'rxjs';\nimport {\n  catchError,\n  filter,\n  map,\n  take,\n  mergeMap,\n  timeout,\n} from 'rxjs/operators';\nimport { OAuthResourceServerErrorHandler } from './resource-server-error-handler';\nimport { OAuthModuleConfig } from '../oauth-module.config';\nimport { OAuthService } from '../oauth-service';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n  constructor(\n    private oAuthService: OAuthService,\n    private errorHandler: OAuthResourceServerErrorHandler,\n    @Optional() private moduleConfig: OAuthModuleConfig\n  ) {}\n\n  private checkUrl(url: string): boolean {\n    if (this.moduleConfig.resourceServer.customUrlValidation) {\n      return this.moduleConfig.resourceServer.customUrlValidation(url);\n    }\n\n    if (this.moduleConfig.resourceServer.allowedUrls) {\n      return !!this.moduleConfig.resourceServer.allowedUrls.find((u) =>\n        url.toLowerCase().startsWith(u.toLowerCase())\n      );\n    }\n\n    return true;\n  }\n\n  public intercept(\n    req: HttpRequest,\n    next: HttpHandler\n  ): Observable> {\n    const url = req.url.toLowerCase();\n\n    if (\n      !this.moduleConfig ||\n      !this.moduleConfig.resourceServer ||\n      !this.checkUrl(url)\n    ) {\n      return next.handle(req);\n    }\n\n    const sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n\n    if (!sendAccessToken) {\n      return next\n        .handle(req)\n        .pipe(catchError((err) => this.errorHandler.handleError(err)));\n    }\n\n    return merge(\n      of(this.oAuthService.getAccessToken()).pipe(filter((token) => !!token)),\n      this.oAuthService.events.pipe(\n        filter((e) => e.type === 'token_received'),\n        timeout(this.oAuthService.waitForTokenInMsec || 0),\n        catchError(() => of(null)), // timeout is not an error\n        map(() => this.oAuthService.getAccessToken())\n      )\n    ).pipe(\n      take(1),\n      mergeMap((token) => {\n        if (token) {\n          const header = 'Bearer ' + token;\n          const headers = req.headers.set('Authorization', header);\n          req = req.clone({ headers });\n        }\n\n        return next\n          .handle(req)\n          .pipe(catchError((err) => this.errorHandler.handleError(err)));\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HMAC.html":{"url":"classes/HMAC.html","title":"class - HMAC","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HMAC\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/fast-sha256js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                            \n                                digestLength\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clean\n                            \n                            \n                                digest\n                            \n                            \n                                finish\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(key: Uint8Array)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:292\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                    Uint8Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.inner.blockSize\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:286\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : this.inner.digestLength\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:287\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n            \n                \ndigest()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:360\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Uint8Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finish\n                        \n                    \n                \n            \n            \n                \nfinish(out: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:349\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:327\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:343\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const digestLength = 32;\nexport const blockSize = 64;\n\n// SHA-256 constants\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n]);\n\nfunction hashBlocks(\n  w: Int32Array,\n  v: Int32Array,\n  p: Uint8Array,\n  pos: number,\n  len: number\n): number {\n  let a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number,\n    g: number,\n    h: number,\n    u: number,\n    i: number,\n    j: number,\n    t1: number,\n    t2: number;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n\n    for (i = 0; i >> 17) | (u >> 19) | (u >> 10);\n\n      u = w[i - 15];\n      t2 =\n        ((u >>> 7) | (u >> 18) | (u >> 3);\n\n      w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\n    }\n\n    for (i = 0; i >> 6) | (e >> 11) | (e >> 25) | (e >> 2) | (a >> 13) | (a >> 22) | (a  0) {\n      while (this.bufferLength  0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out: Uint8Array): this {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = (bytesHashed / 0x20000000) | 0;\n      const bitLenLo = bytesHashed >> 24) & 0xff;\n      this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n      this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n      this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n      this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n      this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n      this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n      this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n\n      this.finished = true;\n    }\n\n    for (let i = 0; i >> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return this;\n  }\n\n  // Returns the final hash digest.\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n\n  // Internal function for use in HMAC for optimization.\n  _saveState(out: Uint32Array) {\n    for (let i = 0; i  this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i  1) {\n    hmac.update(buffer);\n  }\n\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n\n  // Hash in the counter.\n  hmac.update(counter);\n\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\n\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nexport function hkdf(\n  key: Uint8Array,\n  salt: Uint8Array = hkdfSalt,\n  info?: Uint8Array,\n  length = 32\n) {\n  const counter = new Uint8Array([1]);\n\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n\n  const out = new Uint8Array(length);\n  for (let i = 0; i >> 24) & 0xff;\n    ctr[1] = (c >>> 16) & 0xff;\n    ctr[2] = (c >>> 8) & 0xff;\n    ctr[3] = (c >>> 0) & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Hash.html":{"url":"classes/Hash.html","title":"class - Hash","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Hash\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/fast-sha256js.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blockSize\n                            \n                            \n                                digestLength\n                            \n                            \n                                finished\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                _restoreState\n                            \n                            \n                                _saveState\n                            \n                            \n                                clean\n                            \n                            \n                                digest\n                            \n                            \n                                finish\n                            \n                            \n                                reset\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:149\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : blockSize\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:140\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : digestLength\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:139\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finished\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/token-validation/fast-sha256js.ts:149\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        _restoreState\n                        \n                    \n                \n            \n            \n                \n_restoreState(from: Uint32Array, bytesHashed: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:271\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                from\n                                            \n                                                        Uint32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                bytesHashed\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        _saveState\n                        \n                    \n                \n            \n            \n                \n_saveState(out: Uint32Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:264\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clean\n                        \n                    \n                \n            \n            \n                \nclean()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:173\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digest\n                        \n                    \n                \n            \n            \n                \ndigest()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:257\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Uint8Array\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finish\n                        \n                    \n                \n            \n            \n                \nfinish(out: Uint8Array)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:220\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                out\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:157\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(data: Uint8Array, dataLength: number)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/fast-sha256js.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                dataLength\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    data.length\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export const digestLength = 32;\nexport const blockSize = 64;\n\n// SHA-256 constants\nconst K = new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n]);\n\nfunction hashBlocks(\n  w: Int32Array,\n  v: Int32Array,\n  p: Uint8Array,\n  pos: number,\n  len: number\n): number {\n  let a: number,\n    b: number,\n    c: number,\n    d: number,\n    e: number,\n    f: number,\n    g: number,\n    h: number,\n    u: number,\n    i: number,\n    j: number,\n    t1: number,\n    t2: number;\n  while (len >= 64) {\n    a = v[0];\n    b = v[1];\n    c = v[2];\n    d = v[3];\n    e = v[4];\n    f = v[5];\n    g = v[6];\n    h = v[7];\n\n    for (i = 0; i >> 17) | (u >> 19) | (u >> 10);\n\n      u = w[i - 15];\n      t2 =\n        ((u >>> 7) | (u >> 18) | (u >> 3);\n\n      w[i] = ((t1 + w[i - 7]) | 0) + ((t2 + w[i - 16]) | 0);\n    }\n\n    for (i = 0; i >> 6) | (e >> 11) | (e >> 25) | (e >> 2) | (a >> 13) | (a >> 22) | (a  0) {\n      while (this.bufferLength  0) {\n        this.buffer[this.bufferLength++] = data[dataPos++];\n        dataLength--;\n      }\n      if (this.bufferLength === 64) {\n        hashBlocks(this.temp, this.state, this.buffer, 0, 64);\n        this.bufferLength = 0;\n      }\n    }\n    if (dataLength >= 64) {\n      dataPos = hashBlocks(this.temp, this.state, data, dataPos, dataLength);\n      dataLength %= 64;\n    }\n    while (dataLength > 0) {\n      this.buffer[this.bufferLength++] = data[dataPos++];\n      dataLength--;\n    }\n    return this;\n  }\n\n  // Finalizes hash state and puts hash into out.\n  //\n  // If hash was already finalized, puts the same value.\n  finish(out: Uint8Array): this {\n    if (!this.finished) {\n      const bytesHashed = this.bytesHashed;\n      const left = this.bufferLength;\n      const bitLenHi = (bytesHashed / 0x20000000) | 0;\n      const bitLenLo = bytesHashed >> 24) & 0xff;\n      this.buffer[padLength - 7] = (bitLenHi >>> 16) & 0xff;\n      this.buffer[padLength - 6] = (bitLenHi >>> 8) & 0xff;\n      this.buffer[padLength - 5] = (bitLenHi >>> 0) & 0xff;\n      this.buffer[padLength - 4] = (bitLenLo >>> 24) & 0xff;\n      this.buffer[padLength - 3] = (bitLenLo >>> 16) & 0xff;\n      this.buffer[padLength - 2] = (bitLenLo >>> 8) & 0xff;\n      this.buffer[padLength - 1] = (bitLenLo >>> 0) & 0xff;\n\n      hashBlocks(this.temp, this.state, this.buffer, 0, padLength);\n\n      this.finished = true;\n    }\n\n    for (let i = 0; i >> 24) & 0xff;\n      out[i * 4 + 1] = (this.state[i] >>> 16) & 0xff;\n      out[i * 4 + 2] = (this.state[i] >>> 8) & 0xff;\n      out[i * 4 + 3] = (this.state[i] >>> 0) & 0xff;\n    }\n\n    return this;\n  }\n\n  // Returns the final hash digest.\n  digest(): Uint8Array {\n    const out = new Uint8Array(this.digestLength);\n    this.finish(out);\n    return out;\n  }\n\n  // Internal function for use in HMAC for optimization.\n  _saveState(out: Uint32Array) {\n    for (let i = 0; i  this.blockSize) {\n      new Hash().update(key).finish(pad).clean();\n    } else {\n      for (let i = 0; i  1) {\n    hmac.update(buffer);\n  }\n\n  // Hash in info if it exists.\n  if (info) {\n    hmac.update(info);\n  }\n\n  // Hash in the counter.\n  hmac.update(counter);\n\n  // Output result to buffer and clean HMAC instance.\n  hmac.finish(buffer);\n\n  // Increment counter inside typed array, this works properly.\n  counter[0]++;\n}\n\nconst hkdfSalt = new Uint8Array(digestLength); // Filled with zeroes.\nexport function hkdf(\n  key: Uint8Array,\n  salt: Uint8Array = hkdfSalt,\n  info?: Uint8Array,\n  length = 32\n) {\n  const counter = new Uint8Array([1]);\n\n  // HKDF-Extract uses salt as HMAC key, and key as data.\n  const okm = hmac(salt, key);\n\n  // Initialize HMAC for expanding with extracted key.\n  // Ensure no collisions with `hmac` function.\n  const hmac_ = new HMAC(okm);\n\n  // Allocate buffer.\n  const buffer = new Uint8Array(hmac_.digestLength);\n  let bufpos = buffer.length;\n\n  const out = new Uint8Array(length);\n  for (let i = 0; i >> 24) & 0xff;\n    ctr[1] = (c >>> 16) & 0xff;\n    ctr[2] = (c >>> 8) & 0xff;\n    ctr[3] = (c >>> 0) & 0xff;\n    prf.reset();\n    prf.update(salt);\n    prf.update(ctr);\n    prf.finish(u);\n    for (let j = 0; j \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HashHandler.html":{"url":"classes/HashHandler.html","title":"class - HashHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HashHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/hash-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Abstraction for crypto algorithms\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                calcHash\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        calcHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    calcHash(valueToHash: string, algorithm: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/hash-handler.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                valueToHash\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                algorithm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nimport { factory } from './js-sha256';\n// const sha256 = factory();\n\nimport fsha256 from './fast-sha256js';\n\n/**\n * Abstraction for crypto algorithms\n */\nexport abstract class HashHandler {\n  abstract calcHash(valueToHash: string, algorithm: string): Promise;\n}\n\nfunction decodeUTF8(s) {\n  if (typeof s !== 'string') throw new TypeError('expected string');\n  const d = s,\n    b = new Uint8Array(d.length);\n  for (let i = 0; i  {\n    // const encoder = new TextEncoder();\n    // const hashArray = await window.crypto.subtle.digest(algorithm, data);\n    // const data = encoder.encode(valueToHash);\n\n    // const fhash = fsha256(valueToHash);\n\n    const candHash = encodeUTF8(fsha256(decodeUTF8(valueToHash)));\n\n    // const hashArray = (sha256 as any).array(valueToHash);\n    // // const hashString = this.toHashString(hashArray);\n    // const hashString = this.toHashString2(hashArray);\n\n    // console.debug('hash orig - cand', candHash, hashString);\n    // alert(1);\n\n    return candHash;\n  }\n\n  toHashString2(byteArray: number[]) {\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  toHashString(buffer: ArrayBuffer) {\n    const byteArray = new Uint8Array(buffer);\n    let result = '';\n    for (const e of byteArray) {\n      result += String.fromCharCode(e);\n    }\n    return result;\n  }\n\n  // hexString(buffer) {\n  //     const byteArray = new Uint8Array(buffer);\n  //     const hexCodes = [...byteArray].map(value => {\n  //       const hexCode = value.toString(16);\n  //       const paddedHexCode = hexCode.padStart(2, '0');\n  //       return paddedHexCode;\n  //     });\n\n  //     return hexCodes.join('');\n  //   }\n\n  // toHashString(hexString: string) {\n  //   let result = '';\n  //   for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/JwksValidationHandler.html":{"url":"classes/JwksValidationHandler.html","title":"class - JwksValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  JwksValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/jwks-validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                This is just a dummy of the JwksValidationHandler\ntelling the users that the real one has been moved\nto an library of its own, namely angular-oauth2-oidc-utils\n\n            \n\n            \n                Extends\n            \n            \n                            NullValidationHandler\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/token-validation/jwks-validation-handler.ts:25\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         NullValidationHandler\n\n                        \n                    \n                    \n                        \n                                Defined in         NullValidationHandler:11\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignature\n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         NullValidationHandler\n\n                        \n                    \n                    \n                        \n                                Defined in         NullValidationHandler:8\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { NullValidationHandler } from './null-validation-handler';\n\nconst err = `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`;\n\n/**\n * This is just a dummy of the JwksValidationHandler\n * telling the users that the real one has been moved\n * to an library of its own, namely angular-oauth2-oidc-utils\n */\nexport class JwksValidationHandler extends NullValidationHandler {\n  constructor() {\n    super();\n    console.error(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginOptions.html":{"url":"classes/LoginOptions.html","title":"class - LoginOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Additional options that can be passed to tryLogin.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                customHashFragment\n                            \n                            \n                                    Optional\n                                customRedirectUri\n                            \n                            \n                                    Optional\n                                disableNonceCheck\n                            \n                            \n                                    Optional\n                                disableOAuth2StateCheck\n                            \n                            \n                                    Optional\n                                onLoginError\n                            \n                            \n                                    Optional\n                                onTokenReceived\n                            \n                            \n                                    Optional\n                                preventClearHashAfterLogin\n                            \n                            \n                                    Optional\n                                validationHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customHashFragment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:40\n                        \n                    \n\n            \n                \n                    A custom hash fragment to be used instead of the\nactual one. This is used for silent refreshes, to\npass the iframes hash fragment to this method, and\nis also used by popup flows in the same manner.\nThis can be used with code flow, where is must be set\nto a hash symbol followed by the querystring. The\nquestion mark is optional, but may be present following\nthe hash symbol.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customRedirectUri\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:74\n                        \n                    \n\n            \n                \n                    Set this for code flow if you used a custom redirect Uri\nwhen retrieving the code. This is used internally for silent\nrefresh and popup flows.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        disableNonceCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:59\n                        \n                    \n\n            \n                \n                    Set this to true to disable the nonce\ncheck which is used to avoid\nreplay attacks.\nThis flag should never be true in\nproduction environments.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        disableOAuth2StateCheck\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:50\n                        \n                    \n\n            \n                \n                    Set this to true to disable the oauth2 state\ncheck which is a best practice to avoid\nsecurity attacks.\nAs OIDC defines a nonce check that includes\nthis, this can be set to true when only doing\nOIDC.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onLoginError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:28\n                        \n                    \n\n            \n                \n                    Called when tryLogin detects that the auth server\nincluded an error message into the hash fragment.\nDeprecated:  Use property events on OAuthService instead.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        onTokenReceived\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:13\n                        \n                    \n\n            \n                \n                    Is called, after a token has been received and\nsuccessfully validated.\nDeprecated:  Use property events on OAuthService instead.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        preventClearHashAfterLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:67\n                        \n                    \n\n            \n                \n                    Normally, you want to clear your hash fragment after\nthe lib read the token(s) so that they are not displayed\nanymore in the url. If not, set this to true. For code flow\nthis controls removing query string values.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        validationHandler\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:20\n                        \n                    \n\n            \n                \n                    Hook, to validate the received tokens.\nDeprecated:  Use property tokenValidationHandler on OAuthService instead.\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MemoryStorage.html":{"url":"injectables/MemoryStorage.html","title":"injectable - MemoryStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  MemoryStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getItem\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:111\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:115\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NullValidationHandler.html":{"url":"classes/NullValidationHandler.html","title":"class - NullValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NullValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/null-validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                A validation handler that isn't validating nothing.\nCan be used to skip validation (at your own risk).\n\n            \n\n\n            \n                Implements\n            \n            \n                            ValidationHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                validateAtHash\n                            \n                            \n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \nvalidateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/null-validation-handler.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateSignature\n                        \n                    \n                \n            \n            \n                \nvalidateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/null-validation-handler.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ValidationHandler, ValidationParams } from './validation-handler';\n\n/**\n * A validation handler that isn't validating nothing.\n * Can be used to skip validation (at your own risk).\n */\nexport class NullValidationHandler implements ValidationHandler {\n  validateSignature(validationParams: ValidationParams): Promise {\n    return Promise.resolve(null);\n  }\n  validateAtHash(validationParams: ValidationParams): Promise {\n    return Promise.resolve(true);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthErrorEvent.html":{"url":"classes/OAuthErrorEvent.html","title":"class - OAuthErrorEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthErrorEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, reason: object, params: object)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reason\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        params\n                                                  \n                                                        \n                                                                        object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthEvent.html":{"url":"classes/OAuthEvent.html","title":"class - OAuthEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthInfoEvent.html":{"url":"classes/OAuthInfoEvent.html","title":"class - OAuthInfoEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthInfoEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthLogger.html":{"url":"classes/OAuthLogger.html","title":"class - OAuthLogger","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthLogger\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines the logging interface the OAuthService uses\ninternally. Is compatible with the console object,\nbut you can provide your own implementation as well\nthrough dependency injection.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                debug\n                            \n                            \n                                    Abstract\n                                error\n                            \n                            \n                                    Abstract\n                                info\n                            \n                            \n                                    Abstract\n                                log\n                            \n                            \n                                    Abstract\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        debug\n                        \n                    \n                \n            \n            \n                \n                        \n                    debug(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:84\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        error\n                        \n                    \n                \n            \n            \n                \n                        \n                    error(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        info\n                        \n                    \n                \n            \n            \n                \n                        \n                    info(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        log\n                        \n                    \n                \n            \n            \n                \n                        \n                    log(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:86\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        warn\n                        \n                    \n                \n            \n            \n                \n                        \n                    warn(message?: any, ...optionalParams: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                optionalParams\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OAuthModule.html":{"url":"modules/OAuthModule.html","title":"module - OAuthModule","body":"\n                   \n\n\n\n\n    Modules\n    OAuthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/lib/src/angular-oauth-oidc.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                        \n                    forRoot(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/angular-oauth-oidc.module.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OAuthModuleConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                validationHandlerClass\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NullValidationHandler\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         ModuleWithProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OAuthModuleConfig } from './oauth-module.config';\nimport { NullValidationHandler } from './token-validation/null-validation-handler';\nimport { provideOAuthClient } from './provider';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [],\n  exports: [],\n})\nexport class OAuthModule {\n  static forRoot(\n    config: OAuthModuleConfig = null,\n    validationHandlerClass = NullValidationHandler\n  ): ModuleWithProviders {\n    return {\n      ngModule: OAuthModule,\n      providers: [provideOAuthClient(config, validationHandlerClass)],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthModuleConfig.html":{"url":"classes/OAuthModuleConfig.html","title":"class - OAuthModuleConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthModuleConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                resourceServer\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        resourceServer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OAuthResourceServerConfig\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthNoopResourceServerErrorHandler.html":{"url":"classes/OAuthNoopResourceServerErrorHandler.html","title":"class - OAuthNoopResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthNoopResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            OAuthResourceServerErrorHandler\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(err: HttpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler\n{\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerConfig.html":{"url":"classes/OAuthResourceServerConfig.html","title":"class - OAuthResourceServerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/oauth-module.config.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                allowedUrls\n                            \n                            \n                                    Optional\n                                customUrlValidation\n                            \n                            \n                                sendAccessToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        allowedUrls\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:11\n                        \n                    \n\n            \n                \n                    Urls for which calls should be intercepted.\nIf there is an ResourceServerErrorHandler registered, it is used for them.\nIf sendAccessToken is set to true, the access_token is send to them too.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        customUrlValidation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendAccessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/oauth-module.config.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class OAuthModuleConfig {\n  resourceServer: OAuthResourceServerConfig;\n}\n\nexport abstract class OAuthResourceServerConfig {\n  /**\n   * Urls for which calls should be intercepted.\n   * If there is an ResourceServerErrorHandler registered, it is used for them.\n   * If sendAccessToken is set to true, the access_token is send to them too.\n   */\n  allowedUrls?: Array;\n  sendAccessToken: boolean;\n  customUrlValidation?: (url: string) => boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthResourceServerErrorHandler.html":{"url":"classes/OAuthResourceServerErrorHandler.html","title":"class - OAuthResourceServerErrorHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthResourceServerErrorHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/interceptors/resource-server-error-handler.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                handleError\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(err: HttpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/interceptors/resource-server-error-handler.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                err\n                                            \n                                                        HttpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\nexport abstract class OAuthResourceServerErrorHandler {\n  abstract handleError(err: HttpResponse): Observable;\n}\n\nexport class OAuthNoopResourceServerErrorHandler\n  implements OAuthResourceServerErrorHandler\n{\n  handleError(err: HttpResponse): Observable {\n    return throwError(err);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthStorage.html":{"url":"classes/OAuthStorage.html","title":"class - OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthStorage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Defines a simple storage that can be used for\nstoring the tokens at client side.\nIs compatible to localStorage and sessionStorage,\nbut you can also create your own implementations.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getItem\n                            \n                            \n                                    Abstract\n                                removeItem\n                            \n                            \n                                    Abstract\n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    getItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:98\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        removeItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    removeItem(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        setItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    setItem(key: string, data: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/types.ts:100\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OAuthSuccessEvent.html":{"url":"classes/OAuthSuccessEvent.html","title":"class - OAuthSuccessEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OAuthSuccessEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/events.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            OAuthEvent\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(type: EventType, info: any)\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/events.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                  \n                                                        \n                                                                        EventType\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        info\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export type EventType =\n  | 'discovery_document_loaded'\n  | 'jwks_load_error'\n  | 'invalid_nonce_in_state'\n  | 'discovery_document_load_error'\n  | 'discovery_document_validation_error'\n  | 'user_profile_loaded'\n  | 'user_profile_load_error'\n  | 'token_received'\n  | 'token_error'\n  | 'code_error'\n  | 'token_refreshed'\n  | 'token_refresh_error'\n  | 'silent_refresh_error'\n  | 'silently_refreshed'\n  | 'silent_refresh_timeout'\n  | 'token_validation_error'\n  | 'token_expires'\n  | 'session_changed'\n  | 'session_error'\n  | 'session_terminated'\n  | 'session_unchanged'\n  | 'logout'\n  | 'popup_closed'\n  | 'popup_blocked'\n  | 'token_revoke_error';\n\nexport abstract class OAuthEvent {\n  constructor(readonly type: EventType) {}\n}\n\nexport class OAuthSuccessEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthInfoEvent extends OAuthEvent {\n  constructor(type: EventType, readonly info: any = null) {\n    super(type);\n  }\n}\n\nexport class OAuthErrorEvent extends OAuthEvent {\n  constructor(\n    type: EventType,\n    readonly reason: object,\n    readonly params: object = null\n  ) {\n    super(type);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OidcDiscoveryDoc.html":{"url":"interfaces/OidcDiscoveryDoc.html","title":"interface - OidcDiscoveryDoc","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OidcDiscoveryDoc\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an OpenID Connect discovery document\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            acr_values_supported\n                                        \n                                \n                                \n                                        \n                                            authorization_endpoint\n                                        \n                                \n                                \n                                        \n                                            check_session_iframe\n                                        \n                                \n                                \n                                        \n                                            claim_types_supported\n                                        \n                                \n                                \n                                        \n                                            claims_parameter_supported\n                                        \n                                \n                                \n                                        \n                                            claims_supported\n                                        \n                                \n                                \n                                        \n                                            display_values_supported\n                                        \n                                \n                                \n                                        \n                                            end_session_endpoint\n                                        \n                                \n                                \n                                        \n                                            grant_types_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            id_token_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            issuer\n                                        \n                                \n                                \n                                        \n                                            jwks_uri\n                                        \n                                \n                                \n                                        \n                                            registration_endpoint\n                                        \n                                \n                                \n                                        \n                                            request_object_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            response_modes_supported\n                                        \n                                \n                                \n                                        \n                                            response_types_supported\n                                        \n                                \n                                \n                                        \n                                            revocation_endpoint\n                                        \n                                \n                                \n                                        \n                                            scopes_supported\n                                        \n                                \n                                \n                                        \n                                            service_documentation\n                                        \n                                \n                                \n                                        \n                                            subject_types_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_methods_supported\n                                        \n                                \n                                \n                                        \n                                            token_endpoint_auth_signing_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            ui_locales_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_alg_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_encryption_enc_values_supported\n                                        \n                                \n                                \n                                        \n                                            userinfo_endpoint\n                                        \n                                \n                                \n                                        \n                                            userinfo_signing_alg_values_supported\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        acr_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        acr_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        authorization_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        authorization_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        check_session_iframe\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        check_session_iframe:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claim_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claim_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_parameter_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_parameter_supported:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        claims_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        claims_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        display_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end_session_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end_session_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grant_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grant_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        issuer\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        issuer:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks_uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks_uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        registration_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        registration_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request_object_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        request_object_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_modes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_modes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        response_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        response_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        revocation_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        revocation_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scopes_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scopes_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        service_documentation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        service_documentation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject_types_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject_types_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_methods_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_methods_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_endpoint_auth_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_endpoint_auth_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ui_locales_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ui_locales_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_encryption_enc_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_encryption_enc_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_endpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_endpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userinfo_signing_alg_values_supported\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userinfo_signing_alg_values_supported:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParsedIdToken.html":{"url":"interfaces/ParsedIdToken.html","title":"interface - ParsedIdToken","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParsedIdToken\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the parsed and validated id_token.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenClaimsJson\n                                        \n                                \n                                \n                                        \n                                            idTokenExpiresAt\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            idTokenHeaderJson\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaimsJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaimsJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenExpiresAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenExpiresAt:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeaderJson\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeaderJson:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReceivedTokens.html":{"url":"classes/ReceivedTokens.html","title":"class - ReceivedTokens","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReceivedTokens\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the received tokens, the received state\nand the parsed claims from the id-token.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                accessToken\n                            \n                            \n                                    Optional\n                                idClaims\n                            \n                            \n                                idToken\n                            \n                            \n                                    Optional\n                                state\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:126\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        idClaims\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:127\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        idToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:125\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        state\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/lib/src/types.ts:128\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SystemDateTimeProvider.html":{"url":"injectables/SystemDateTimeProvider.html","title":"injectable - SystemDateTimeProvider","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SystemDateTimeProvider\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/date-time-provider.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            DateTimeProvider\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                new\n                            \n                            \n                                now\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n            \n                \nnew()\n                \n            \n\n\n                    \n                        \n                            Inherited from         DateTimeProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         DateTimeProvider:14\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Date\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        now\n                        \n                    \n                \n            \n            \n                \nnow()\n                \n            \n\n\n                    \n                        \n                            Inherited from         DateTimeProvider\n\n                        \n                    \n                    \n                        \n                                Defined in         DateTimeProvider:10\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         number\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\nexport abstract class DateTimeProvider {\n  abstract now(): number;\n  abstract new(): Date;\n}\n\n@Injectable()\nexport class SystemDateTimeProvider extends DateTimeProvider {\n  now(): number {\n    return Date.now();\n  }\n\n  new(): Date {\n    return new Date();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TokenResponse.html":{"url":"interfaces/TokenResponse.html","title":"interface - TokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the token endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access_token\n                                        \n                                \n                                \n                                        \n                                            expires_in\n                                        \n                                \n                                \n                                        \n                                            id_token\n                                        \n                                \n                                \n                                        \n                                            refresh_token\n                                        \n                                \n                                \n                                        \n                                            scope\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            state\n                                        \n                                \n                                \n                                        \n                                            token_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh_token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scope:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        state:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UrlHelperService.html":{"url":"injectables/UrlHelperService.html","title":"injectable - UrlHelperService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UrlHelperService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/url-helper.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHashFragmentParams\n                            \n                            \n                                    Public\n                                parseQueryString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        getHashFragmentParams\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHashFragmentParams(customHashFragment?: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/url-helper.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                customHashFragment\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        parseQueryString\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseQueryString(queryString: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/url-helper.service.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                queryString\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         object\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class UrlHelperService {\n  public getHashFragmentParams(customHashFragment?: string): object {\n    let hash = customHashFragment || window.location.hash;\n\n    hash = decodeURIComponent(hash);\n\n    if (hash.indexOf('#') !== 0) {\n      return {};\n    }\n\n    const questionMarkPosition = hash.indexOf('?');\n\n    if (questionMarkPosition > -1) {\n      hash = hash.substr(questionMarkPosition + 1);\n    } else {\n      hash = hash.substr(1);\n    }\n\n    return this.parseQueryString(hash);\n  }\n\n  public parseQueryString(queryString: string): object {\n    const data = {};\n    let pair, separatorIndex, escapedKey, escapedValue, key, value;\n\n    if (queryString === null) {\n      return data;\n    }\n\n    const pairs = queryString.split('&');\n\n    for (let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInfo.html":{"url":"interfaces/UserInfo.html","title":"interface - UserInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents the response from the user info endpoint\nhttp://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in projects/lib/src/types.ts:162\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Additional options that can be passed to tryLogin.\n */\nexport class LoginOptions {\n  /**\n   * Is called, after a token has been received and\n   * successfully validated.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onTokenReceived?: (receivedTokens: ReceivedTokens) => void;\n\n  /**\n   * Hook, to validate the received tokens.\n   *\n   * Deprecated:  Use property ``tokenValidationHandler`` on OAuthService instead.\n   */\n  validationHandler?: (receivedTokens: ReceivedTokens) => Promise;\n\n  /**\n   * Called when tryLogin detects that the auth server\n   * included an error message into the hash fragment.\n   *\n   * Deprecated:  Use property ``events`` on OAuthService instead.\n   */\n  onLoginError?: (params: object) => void;\n\n  /**\n   * A custom hash fragment to be used instead of the\n   * actual one. This is used for silent refreshes, to\n   * pass the iframes hash fragment to this method, and\n   * is also used by popup flows in the same manner.\n   * This can be used with code flow, where is must be set\n   * to a hash symbol followed by the querystring. The\n   * question mark is optional, but may be present following\n   * the hash symbol.\n   */\n  customHashFragment?: string;\n\n  /**\n   * Set this to true to disable the oauth2 state\n   * check which is a best practice to avoid\n   * security attacks.\n   * As OIDC defines a nonce check that includes\n   * this, this can be set to true when only doing\n   * OIDC.\n   */\n  disableOAuth2StateCheck?: boolean;\n\n  /**\n   * Set this to true to disable the nonce\n   * check which is used to avoid\n   * replay attacks.\n   * This flag should never be true in\n   * production environments.\n   */\n  disableNonceCheck? = false;\n\n  /**\n   * Normally, you want to clear your hash fragment after\n   * the lib read the token(s) so that they are not displayed\n   * anymore in the url. If not, set this to true. For code flow\n   * this controls removing query string values.\n   */\n  preventClearHashAfterLogin? = false;\n\n  /**\n   * Set this for code flow if you used a custom redirect Uri\n   * when retrieving the code. This is used internally for silent\n   * refresh and popup flows.\n   */\n  customRedirectUri?: string;\n}\n\n/**\n * Defines the logging interface the OAuthService uses\n * internally. Is compatible with the `console` object,\n * but you can provide your own implementation as well\n * through dependency injection.\n */\nexport abstract class OAuthLogger {\n  abstract debug(message?: any, ...optionalParams: any[]): void;\n  abstract info(message?: any, ...optionalParams: any[]): void;\n  abstract log(message?: any, ...optionalParams: any[]): void;\n  abstract warn(message?: any, ...optionalParams: any[]): void;\n  abstract error(message?: any, ...optionalParams: any[]): void;\n}\n\n/**\n * Defines a simple storage that can be used for\n * storing the tokens at client side.\n * Is compatible to localStorage and sessionStorage,\n * but you can also create your own implementations.\n */\nexport abstract class OAuthStorage {\n  abstract getItem(key: string): string | null;\n  abstract removeItem(key: string): void;\n  abstract setItem(key: string, data: string): void;\n}\n\n@Injectable()\nexport class MemoryStorage implements OAuthStorage {\n  private data = new Map();\n\n  getItem(key: string): string {\n    return this.data.get(key);\n  }\n\n  removeItem(key: string): void {\n    this.data.delete(key);\n  }\n\n  setItem(key: string, data: string): void {\n    this.data.set(key, data);\n  }\n}\n\n/**\n * Represents the received tokens, the received state\n * and the parsed claims from the id-token.\n */\nexport class ReceivedTokens {\n  idToken: string;\n  accessToken: string;\n  idClaims?: object;\n  state?: string;\n}\n\n/**\n * Represents the parsed and validated id_token.\n */\nexport interface ParsedIdToken {\n  idToken: string;\n  idTokenClaims: object;\n  idTokenHeader: object;\n  idTokenClaimsJson: string;\n  idTokenHeaderJson: string;\n  idTokenExpiresAt: number;\n}\n\n/**\n * Represents the response from the token endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#TokenEndpoint\n */\nexport interface TokenResponse {\n  access_token: string;\n  id_token: string;\n  token_type: string;\n  expires_in: number;\n  refresh_token: string;\n  scope: string;\n  state?: string;\n}\n\n/**\n * Represents the response from the user info endpoint\n * http://openid.net/specs/openid-connect-core-1_0.html#UserInfo\n */\nexport interface UserInfo {\n  sub: string;\n  [key: string]: any;\n}\n\n/**\n * Represents an OpenID Connect discovery document\n */\nexport interface OidcDiscoveryDoc {\n  issuer: string;\n  authorization_endpoint: string;\n  token_endpoint: string;\n  token_endpoint_auth_methods_supported: string[];\n  token_endpoint_auth_signing_alg_values_supported: string[];\n  userinfo_endpoint: string;\n  check_session_iframe: string;\n  end_session_endpoint: string;\n  jwks_uri: string;\n  registration_endpoint: string;\n  scopes_supported: string[];\n  response_types_supported: string[];\n  acr_values_supported: string[];\n  response_modes_supported: string[];\n  grant_types_supported: string[];\n  subject_types_supported: string[];\n  userinfo_signing_alg_values_supported: string[];\n  userinfo_encryption_alg_values_supported: string[];\n  userinfo_encryption_enc_values_supported: string[];\n  id_token_signing_alg_values_supported: string[];\n  id_token_encryption_alg_values_supported: string[];\n  id_token_encryption_enc_values_supported: string[];\n  request_object_signing_alg_values_supported: string[];\n  display_values_supported: string[];\n  claim_types_supported: string[];\n  claims_supported: string[];\n  claims_parameter_supported: boolean;\n  service_documentation: string;\n  ui_locales_supported: string[];\n  revocation_endpoint: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ValidationHandler.html":{"url":"classes/ValidationHandler.html","title":"class - ValidationHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ValidationHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface for Handlers that are hooked in to\nvalidate tokens.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Abstract\n                                validateAtHash\n                            \n                            \n                                    Public\n                                    Abstract\n                                validateSignature\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        validateAtHash\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateAtHash(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:27\n                        \n                    \n\n\n            \n                \n                        Validates the at_hash in an id_token against the received access_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Abstract\n                        validateSignature\n                        \n                    \n                \n            \n            \n                \n                        \n                    validateSignature(validationParams: ValidationParams)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/token-validation/validation-handler.ts:20\n                        \n                    \n\n\n            \n                \n                        Validates the signature of an id_token.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                validationParams\n                                            \n                                                            ValidationParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ValidationParams.html":{"url":"interfaces/ValidationParams.html","title":"interface - ValidationParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ValidationParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/token-validation/validation-handler.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessToken\n                                        \n                                \n                                \n                                        \n                                            idToken\n                                        \n                                \n                                \n                                        \n                                            idTokenClaims\n                                        \n                                \n                                \n                                        \n                                            idTokenHeader\n                                        \n                                \n                                \n                                        \n                                            jwks\n                                        \n                                \n                                \n                                        \n                                            loadKeys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenClaims\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenClaims:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        idTokenHeader\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        idTokenHeader:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwks\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwks:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadKeys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loadKeys:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { base64UrlEncode } from '../base64-helper';\n\nexport interface ValidationParams {\n  idToken: string;\n  accessToken: string;\n  idTokenHeader: object;\n  idTokenClaims: object;\n  jwks: object;\n  loadKeys: () => Promise;\n}\n\n/**\n * Interface for Handlers that are hooked in to\n * validate tokens.\n */\nexport abstract class ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  public abstract validateSignature(\n    validationParams: ValidationParams\n  ): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  public abstract validateAtHash(\n    validationParams: ValidationParams\n  ): Promise;\n}\n\n/**\n * This abstract implementation of ValidationHandler already implements\n * the method validateAtHash. However, to make use of it,\n * you have to override the method calcHash.\n */\nexport abstract class AbstractValidationHandler implements ValidationHandler {\n  /**\n   * Validates the signature of an id_token.\n   */\n  abstract validateSignature(validationParams: ValidationParams): Promise;\n\n  /**\n   * Validates the at_hash in an id_token against the received access_token.\n   */\n  async validateAtHash(params: ValidationParams): Promise {\n    const hashAlg = this.inferHashAlgorithm(params.idTokenHeader);\n\n    const tokenHash = await this.calcHash(params.accessToken, hashAlg); // sha256(accessToken, { asString: true });\n\n    const leftMostHalf = tokenHash.substr(0, tokenHash.length / 2);\n\n    const atHash = base64UrlEncode(leftMostHalf);\n\n    const claimsAtHash = params.idTokenClaims['at_hash'].replace(/=/g, '');\n\n    if (atHash !== claimsAtHash) {\n      console.error('exptected at_hash: ' + atHash);\n      console.error('actual at_hash: ' + claimsAtHash);\n    }\n\n    return atHash === claimsAtHash;\n  }\n\n  /**\n   * Infers the name of the hash algorithm to use\n   * from the alg field of an id_token.\n   *\n   * @param jwtHeader the id_token's parsed header\n   */\n  protected inferHashAlgorithm(jwtHeader: object): string {\n    const alg: string = jwtHeader['alg'];\n\n    if (!alg.match(/^.S[0-9]{3}$/)) {\n      throw new Error('Algorithm not supported: ' + alg);\n    }\n\n    return 'sha-' + alg.substr(2);\n  }\n\n  /**\n   * Calculates the hash for the passed value by using\n   * the passed hash algorithm.\n   *\n   * @param valueToHash\n   * @param algorithm\n   */\n  protected abstract calcHash(\n    valueToHash: string,\n    algorithm: string\n  ): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WebHttpUrlEncodingCodec.html":{"url":"classes/WebHttpUrlEncodingCodec.html","title":"class - WebHttpUrlEncodingCodec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WebHttpUrlEncodingCodec\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/lib/src/encoder.ts\n        \n\n\n            \n                Description\n            \n            \n                This custom encoder allows charactes like +, % and / to be used in passwords\n\n            \n\n\n            \n                Implements\n            \n            \n                        HttpParameterCodec\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                decodeKey\n                            \n                            \n                                decodeValue\n                            \n                            \n                                encodeKey\n                            \n                            \n                                encodeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        decodeKey\n                        \n                    \n                \n            \n            \n                \ndecodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        decodeValue\n                        \n                    \n                \n            \n            \n                \ndecodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeKey\n                        \n                    \n                \n            \n            \n                \nencodeKey(k: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                k\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeValue\n                        \n                    \n                \n            \n            \n                \nencodeValue(v: string)\n                \n            \n\n\n                    \n                        \n                            Defined in projects/lib/src/encoder.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                v\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpParameterCodec } from '@angular/common/http';\n/**\n * This custom encoder allows charactes like +, % and / to be used in passwords\n */\nexport class WebHttpUrlEncodingCodec implements HttpParameterCodec {\n  encodeKey(k: string): string {\n    return encodeURIComponent(k);\n  }\n\n  encodeValue(v: string): string {\n    return encodeURIComponent(v);\n  }\n\n  decodeKey(k: string): string {\n    return decodeURIComponent(k);\n  }\n\n  decodeValue(v: string) {\n    return decodeURIComponent(v);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n12.0.0 (2021-07-16)\nBug Fixes\n\n#728 (51e438a), closes /github.com/manfredsteyer/angular-oauth2-oidc/issues/728#issuecomment-808969225\nclear location.hash only if it is present (c2b2753), closes #970\ncorrectly handle ? and & in location replacements (70fd826)\nDisable nonce validation for id token for e2e tests (f5bd96c)\nfix scope/state removal for implicit flow with hash (9e257d0)\nin code flow pass options to error handler (c9a2c55), closes #972\njwks: update jsrsasign dependency to 10.2.0 (a05bd8a), closes #1061\nmultiplying calls to token endpoint in code flow (59f65d2)\nRefresh tokens with a plus sign get corrupted before sending to token endpoint (2204c5a)\nrevoketokenandlogout: 'customParameters' should accept boolean (9761bad)\nWhile Using POPUP mode, we click on login button multiple time it opens multiple popup instead of focusing already opened (bbff95b)\n\nFeatures\n\nintroduce DateTimeProvider (0c0a4a7)\nlogout: postLogoutRedirectUri should not default to redirectUri (ff7d1d9)\nsupport JWT response on userinfo endpoint (da16494)\nCustom grant type added (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/919)\nListen for storage to receive auth hash from popup (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/935)\nAdd event for unchanged session (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/936)\nAdd loginHint to codeFlow (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/938)\nAdd a windowRef option to initLoginFlowInPopup to prevent the window from beeing blocked by popup blockers (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/965)\nUse configured revocationEndpoint by default (https://github.com/manfredsteyer/angular-oauth2-oidc/pull/1020)\n\n10.0.0 (2020-06-30)\n\nchore: increase version in package.json (84d95a7)\nchore: make version 9.2 ready (415e053)\nchore(deps): bump jsrsasign from 8.0.12 to 8.0.19 (4def1c1)\nchore(deps): bump websocket-extensions from 0.1.3 to 0.1.4 (cae715e)\nchore(release): 9.2.1 (7a15194)\nchore(release): 9.2.2 (40f5ae5)\nchore(release): 9.3.0 (f42f943)\nrefactor: inline js-sha256 (ca435c0)\nrefactor: remove dep on contributer-table (b486546)\nrefactor: use esm for sha-256 (92ee76d)\nfeat(oauth-service): pass custom url params to logOut (4607d55)\nfeat(oauth-service): revokeTokenAndLogout with cust params (026dcb3)\n'disableAtHashCheck' by default if responseType is 'id_token' (169d749)\n#825: (38c7c3f), closes #825\n#825: (fb3afe4), closes #825\nFix issue with ambient type in constructor when running Universal with Ivy (9e95c73)\nFix typo in code-flow.md (1816e7b)\nReplaced document by this.document #773 (678ff95), closes #773\nresponse_types including 'code' gets a code_challenge (58a8132)\nUpdate code-flow.md (5c5288c)\ndocs(readme): use our own idsvr (65c2b95)\nfix: loadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nfix(lib): copying LICENSE file to output build (e89aa6d)\n\n10.0.0 (2020-06-30)\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\n\nFeatures\n\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\n\n10.0.0 (2020-06-30)\nChangelog\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using implicit flow by setting useSilentRefresh to true (93902a5)\noauth-service: pass custom url params to logOut (4607d55)\noauth-service: revokeTokenAndLogout with cust params (026dcb3)\nsample: also use new idsvr 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Pls see Docs for details. (4bf8901)\ntoken-revocation: also revoke refresh_token (429ed2c)\nremove jsrsasign dependancy (77cb37a)\nUpgrade to angular 8 (31c6273)\n\nBug Fixes\n\nloadDiscoveryDocumentAndLogin should pass state into initLoginFlow (132c624)\nlib: copying LICENSE file to output build (e89aa6d)\nrevoketokenandlogout: explicit way to revoke an access token (c799ead)\nsample: make sense of the guard (1cae011)\n#687 (e2599e0)\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\n9.2.2 (2020-05-09)\n9.2.1 (2020-04-23)\n9.2.0 (2020-03-28)\nFeatures\n\nrevoketokenandlogout: explicit way to revoke an access token according to RFC 7009 (c799ead)\n\ntoken-revocation: also revoke refresh_token (429ed2c)\n\n\nBug Fixes\n\nsample: make sense of the guard (1cae011)\n\n9.1.0 (2020-03-23)\nFeatures\n\nautomatic silent refresh: stopAutomaticRefresh stops all timers. (8ab853b)\ncode-flow: allow using silent refresh by setting useSilentRefresh to true (93902a5)\nsample: Also use new Identity Server 4 for implicit flow demo to prevent issues with same site cookies (58c6354)\nsession checks: Session checks work now for code flow too. Please see docs for details. (4bf8901)\n\nBug Fixes\n\ncode flow: Fixed code flow for IE 11 (0f03d39)\nsample: use hash-based routing (3f44eca)\nsession state: save session_state also when using code flow (8fa99ff)\nstate: passing an url with a querystring as the state, e. g. url?x=1 (71b705c)\n#687 (e2599e0)\nmissing HttpModule dependency (7eac8ae)\nrun tokensetup outside ngzone (07bb62d)\ntypo (3d331f2)\n\nPull Requests\n\nUpdate sample app and silent-refresh.html script #755, linjie997\nAdd optional state parameter for logout, pmccloghrylaing\nfix customHashFragment usage in tryLoginCodeFlow, roblabat\nreplace document with injectionToken #741, d-moos\nSupport predefined custom parameters extraction from the TokenResponse, vdveer\nFixed not working silent refresh when using 'code' #735, ErazerBrecht\n\nThanks\nBig Thanks to all contributers: Brecht Carlier, Daniel Moos, Jie Lin, Manfred Steyer, Phil McCloghry-Laing, robin labat, vdveer\nAlso, big thanks to jeroenheijmans for doing an awesome job with moderating and analyzing the issues!\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.0.0\n        \n            @angular/common : ^17.0.0\n        \n            @angular/compiler : ^17.0.0\n        \n            @angular/core : ^17.0.0\n        \n            @angular/forms : ^17.0.0\n        \n            @angular/platform-browser : ^17.0.0\n        \n            @angular/platform-browser-dynamic : ^17.0.0\n        \n            @angular/router : ^17.0.0\n        \n            @popperjs/core : ^2.9.2\n        \n            @webcomponents/custom-elements : ^1.4.3\n        \n            angular-oauth2-oidc-jwks : ^15.0.1\n        \n            base64-js : ^1.5.1\n        \n            bootstrap : ^3.4.1\n        \n            fast-sha256 : ^1.3.0\n        \n            jsrsasign : ^10.3.0\n        \n            ng-packagr : ^17.0.2\n        \n            rxjs : ~7.8.0\n        \n            rxjs-compat : ^6.6.7\n        \n            text-encoder-lite : ^2.0.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            b64DecodeUnicode   (projects/.../base64-helper.ts)\n                        \n                        \n                            base64UrlEncode   (projects/.../base64-helper.ts)\n                        \n                        \n                            createDefaultLogger   (projects/.../factories.ts)\n                        \n                        \n                            createDefaultStorage   (projects/.../factories.ts)\n                        \n                        \n                            decodeUTF8   (projects/.../hash-handler.ts)\n                        \n                        \n                            encodeUTF8   (projects/.../hash-handler.ts)\n                        \n                        \n                            fillBuffer   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hash   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hashBlocks   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hkdf   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            hmac   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            pbkdf2   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            provideOAuthClient   (projects/.../provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/base64-helper.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        b64DecodeUnicode\n                        \n                    \n                \n            \n            \n                \nb64DecodeUnicode(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        base64UrlEncode\n                        \n                    \n                \n            \n            \n                \nbase64UrlEncode(str)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                str\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/factories.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDefaultLogger\n                        \n                    \n                \n            \n            \n                \ncreateDefaultLogger()\n                \n            \n\n\n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createDefaultStorage\n                        \n                    \n                \n            \n            \n                \ncreateDefaultStorage()\n                \n            \n\n\n\n\n        \n    \n    projects/lib/src/token-validation/hash-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decodeUTF8\n                        \n                    \n                \n            \n            \n                \ndecodeUTF8(s)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                s\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encodeUTF8\n                        \n                    \n                \n            \n            \n                \nencodeUTF8(arr)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                arr\n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/token-validation/fast-sha256js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        fillBuffer\n                        \n                    \n                \n            \n            \n                \nfillBuffer(buffer: Uint8Array, hmac: HMAC, info, counter: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                buffer\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hmac\n                                            \n                                                            HMAC\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                info\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                counter\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(data: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Uint8Array\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hashBlocks\n                        \n                    \n                \n            \n            \n                \nhashBlocks(w: Int32Array, v: Int32Array, p: Uint8Array, pos: number, len: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                w\n                                            \n                                                        Int32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                v\n                                            \n                                                        Int32Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                p\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pos\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                len\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hkdf\n                        \n                    \n                \n            \n            \n                \nhkdf(key: Uint8Array, salt: Uint8Array, info?: Uint8Array, length: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                salt\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    hkdfSalt\n                                            \n\n                                        \n                                        \n                                                info\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                length\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    32\n                                            \n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hmac\n                        \n                    \n                \n            \n            \n                \nhmac(key: Uint8Array, data: Uint8Array)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pbkdf2\n                        \n                    \n                \n            \n            \n                \npbkdf2(password: Uint8Array, salt: Uint8Array, iterations: number, dkLen: number)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                password\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                salt\n                                            \n                                                        Uint8Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                iterations\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dkLen\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    projects/lib/src/provider.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        provideOAuthClient\n                        \n                    \n                \n            \n            \n                \nprovideOAuthClient(config: OAuthModuleConfig, validationHandlerClass)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                config\n                                            \n                                                            OAuthModuleConfig\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    null\n                                            \n\n                                        \n                                        \n                                                validationHandlerClass\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    NullValidationHandler\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     EnvironmentProviders\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-oauth2-oidc\nSupport for OAuth 2 and OpenId Connect (OIDC) in Angular. Already prepared for the upcoming OAuth 2.1.\n\nCredits\n\njsrsasign for validating token signature and for hashing\nIdentity Server for testing with an .NET/.NET Core Backend\nKeycloak (Redhat) for testing with Java\nAuth0\n\nResources\n\nSources and Sample: https://github.com/manfredsteyer/angular-oauth2-oidc\nSource Code Documentation: https://manfredsteyer.github.io/angular-oauth2-oidc/docs\nCommunity-provided sample implementation: https://github.com/jeroenheijmans/sample-angular-oauth2-oidc-with-auth-guards/\n\nTested Environment\nSuccessfully tested with Angular 4.3 to Angular 16 and its Router, PathLocationStrategy as well as HashLocationStrategy and CommonJS-Bundling via webpack.\nAt server side we've used IdentityServer (.NET / .NET Core), Redhat's Keycloak (Java), and Auth0 (Auth0 is officially supported since version 10 of this lib). For Auth0, please have a look into the respective documentation page here.\nFor using this library with Azure Active Directory (Azure AD), we recommend an additional look to this blog post and the example linked at the end of this blog post.\nAlso, the Okta community created some guidelines on how to use this lib with Okta. See the links at the end of this page for more information.\nAngular 15 & 16: Use 15.x versions of this library (should also work with older Angular versions!).\nAngular 14: Use 14.x versions of this library (should also work with older Angular versions!).\nAngular 13: Use 13.x versions of this library (should also work with older Angular versions!).\nAngular 12: Use 12.x versions of this library (should also work with older Angular versions!).\nAngular 11: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 10: Use 10.x versions of this library (should also work with older Angular versions!).\nAngular 9: Use 9.x versions of this library (should also work with older Angular versions!).\nAngular 8: Use 8.x versions of this library.\nAngular 7: Use 7.x versions of this library.\nAngular 6: Use Version 4.x of this library. Version 4.x was tested with Angular 6. You can also try the newer version 5.x of this library which has a much smaller bundle size.\nAngular 5.x or 4.3: If you need support for Angular \nRelease Cycle\n\nWe plan one major release for each Angular version\nWill contain new features\nWill contain bug fixes and PRs\n\n\nCritical bugfixes on demand\n\nContributions\n\nFeel free to file pull requests\n\nThe issues contain some ideas for PRs and enhancements (see labels)\n\nIf you want to contribute to the docs, you can do so in the docs-src folder. Make sure you update summary.json as well. Then generate the docs with the following commands:\nExample :npm install -g @compodoc/compodoc\nnpm run docs\n\nFeatures\n\nLogging in via Code Flow + PKCE\nHence, you are safe for the upcoming OAuth 2.1\n\n\nLogging in via Implicit Flow (where a user is redirected to Identity Provider)\n\"Logging in\" via Password Flow (where a user enters their password into the client)\nToken Refresh for all supported flows\nAutomatically refreshing a token when/some time before it expires\nQuerying Userinfo Endpoint\nQuerying Discovery Document to ease configuration\nValidating claims of the id_token regarding the specs\nHook for further custom validations\nSingle-Sign-Out by redirecting to the auth-server's logout-endpoint\nTested with all modern browsers and IE\nToken Revocation according to RFC 7009\n\nSample-Auth-Server\nYou can use the OIDC-Sample-Server used in our examples. It assumes, that your Web-App runs on http://localhost:4200\nUsername/Password:\n\nmax/geheim\nbob/bob\nalice/alice\n\nclientIds:\n\nspa (Code Flow + PKCE)\nimplicit (implicit flow)\n\nredirectUris:\n\nlocalhost:[4200-4202]\nlocalhost:[4200-4202]/index.html\nlocalhost:[4200-4202]/silent-refresh.html\n\nInstalling\nExample :npm i angular-oauth2-oidc --saveOption 1: Standalone APIs\nIf you use Standalone Components introduced with Angular 14, you can use our standalone API (call to provideOAuthClient) in your main.ts to setup the OAuthClient:\nExample :// main.ts -- Angular 15+ version\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { provideHttpClient } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\nimport { provideOAuthClient } from 'angular-oauth2-oidc';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    provideHttpClient(),\n    provideOAuthClient()\n  ]\n});As Angular 14 does have Standalone Components but no Standalone API for its HttpClient, you need to go with the traditional HttpClientModule in this version:\nExample :// main.ts -- Angular 14 version\nimport { bootstrapApplication } from '@angular/platform-browser';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app/app.component';\nimport { provideOAuthClient } from 'angular-oauth2-oidc';\nimport { importProvidersFrom } from '@angular/core';\n\nbootstrapApplication(AppComponent, {\n  providers: [\n    importProvidersFrom(HttpClientModule),\n    provideOAuthClient()\n  ]\n});The provideOAuthClient function takes the same parameters as the forRoot function of the OAuthModule that is still in place for the sake of compatibility with existing code bases.\nOption 2: Using NgModules\nExample :import { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n@NgModule({\n  imports: [\n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule {\n}Logging in\nSince Version 8, this library supports code flow and PKCE to align with the current draft of the OAuth 2.0 Security Best Current Practice document. This is also the foundation of the upcoming OAuth 2.1.\nTo configure your solution for code flow + PKCE you have to set the responseType to code:\nExample :  import { AuthConfig } from 'angular-oauth2-oidc';\n\n  export const authCodeFlowConfig: AuthConfig = {\n    // Url of the Identity Provider\n    issuer: 'https://idsvr4.azurewebsites.net',\n\n    // URL of the SPA to redirect the user to after login\n    redirectUri: window.location.origin + '/index.html',\n\n    // The SPA's id. The SPA is registerd with this id at the auth-server\n    // clientId: 'server.code',\n    clientId: 'spa',\n\n    // Just needed if your auth server demands a secret. In general, this\n    // is a sign that the auth server is not configured with SPAs in mind\n    // and it might not enforce further best practices vital for security\n    // such applications.\n    // dummyClientSecret: 'secret',\n\n    responseType: 'code',\n\n    // set the scope for the permissions the client should request\n    // The first four are defined by OIDC.\n    // Important: Request offline_access to get a refresh token\n    // The api scope is a usecase specific one\n    scope: 'openid profile email offline_access api',\n\n    showDebugInformation: true,\n  };After this, you can initialize the code flow using:\nExample :this.oauthService.initCodeFlow();There is also a convenience method initLoginFlow which initializes either the code flow or the implicit flow depending on your configuration.\nExample :this.oauthService.initLoginFlow();Also -- as shown in the readme -- you have to execute the following code when bootstrapping to make the library to fetch the token:\nExample :this.oauthService.configure(authCodeFlowConfig);\nthis.oauthService.loadDiscoveryDocumentAndTryLogin();Logging out\nThe logOut method clears the used token store (by default sessionStorage) and forwards the user to the auth servers logout endpoint if one was configured (manually or via the discovery document).\nExample :this.oauthService.logOut();If you want to revoke the existing access token and the existing refresh token before logging out, use the following method:\nExample :this.oauthService.revokeTokenAndLogout();Skipping the Login Form\nIf you don't want to display a login form that tells the user that they are redirected to the identity server, you can use the convenience function this.oauthService.loadDiscoveryDocumentAndLogin(); instead of this.oauthService.loadDiscoveryDocumentAndTryLogin(); when setting up the library.\nThis directly redirects the user to the identity server if there are no valid tokens. Ensure you have your issuer set to your discovery document endpoint!\nCalling a Web API with an Access Token\nYou can automate this task by switching sendAccessToken on and by setting allowedUrls to an array with prefixes for the respective URLs. Use lower case for the prefixes.\nExample :OAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})If you need more versatility, you can look in the documentation how to setup a custom interceptor.\nToken Refresh\nSee docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/refreshing-a-token.html\nRouting\nIf you use the PathLocationStrategy (which is on by default) and have a general catch-all-route (path: '**') you should be fine. Otherwise look up the section Routing with the HashStrategy in the documentation.\nImplicit Flow\nNowadays, using code flow + PKCE -- as shown above -- is the recommended OAuth 2/OIDC flow for SPAs. To use the older implicit flow, lookup this docs: https://manfredsteyer.github.io/angular-oauth2-oidc/docs/additional-documentation/using-implicit-flow.html\nMore Documentation (!)\nSee the documentation for more information about this library.\nBreaking Change in Version 9\nWith regards to tree shaking, beginning with version 9, the JwksValidationHandler has been moved to a library of its own. If you need it for implementing implicit flow, please install it using npm:\nExample :npm i angular-oauth2-oidc-jwks --saveAfter that, you can import it into your application by using this:\nExample :import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';instead of that:\nExample :import { JwksValidationHandler } from 'angular-oauth2-oidc';Please note, that this dependency is not needed for the code flow, which is nowadays the recommended flow for single page applications. This also results in smaller bundle sizes.\nBreaking change in 9.1.0\nThe use of encodeURIComponent on the argument passed to initImplicitFlow and its Code Flow counterparts was mandatory before this version.\nSince that was considered a bug, the need to do so was removed.\nNow the reverse is true if you're upgrading from before 9.0.0: you need to remove any call to encode URI components in your own application, as the library will now do it for you.\nTutorials\n\nTutorial with Demo Servers available online\nAngular Authentication with OpenID Connect and Okta in 20 Minutes\nAdd Authentication to Your Angular PWA\nBuild an Ionic App with User Authentication\nOn-Site Workshops\nAngular 6 with Auth0 using this library\n\nThanks to all Contributors\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nCopyright (c) 2017 Manfred Steyer\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        OAuthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 15.0.0\n        \n            License : MIT\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EventType   (projects/.../events.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/events.ts\n    \n    \n        \n            \n                \n                    \n                    EventType\n                \n            \n            \n                \n                            \"discovery_document_loaded\" | \"jwks_load_error\" | \"invalid_nonce_in_state\" | \"discovery_document_load_error\" | \"discovery_document_validation_error\" | \"user_profile_loaded\" | \"user_profile_load_error\" | \"token_received\" | \"token_error\" | \"code_error\" | \"token_refreshed\" | \"token_refresh_error\" | \"silent_refresh_error\" | \"silently_refreshed\" | \"silent_refresh_timeout\" | \"token_validation_error\" | \"token_expires\" | \"session_changed\" | \"session_error\" | \"session_terminated\" | \"session_unchanged\" | \"logout\" | \"popup_closed\" | \"popup_blocked\" | \"token_revoke_error\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AUTH_CONFIG   (projects/.../tokens.ts)\n                        \n                        \n                            blockSize   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            digestLength   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            err   (projects/.../jwks-validation-handler.ts)\n                        \n                        \n                            hkdfSalt   (projects/.../fast-sha256js.ts)\n                        \n                        \n                            K   (projects/.../fast-sha256js.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/lib/src/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AUTH_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AUTH_CONFIG')\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/token-validation/fast-sha256js.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        blockSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 64\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        digestLength\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 32\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hkdfSalt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Uint8Array(digestLength)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        K\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1,\n  0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786,\n  0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147,\n  0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b,\n  0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a,\n  0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2,\n])\n                    \n                \n\n\n        \n    \n\n    projects/lib/src/token-validation/jwks-validation-handler.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        err\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `PLEASE READ THIS CAREFULLY:\n\nBeginning with angular-oauth2-oidc version 9, the JwksValidationHandler\nhas been moved to an library of its own. If you need it for implementing\nOAuth2/OIDC **implicit flow**, please install it using npm:\n\n  npm i angular-oauth2-oidc-jwks --save\n\nAfter that, you can import it into your application:\n\n  import { JwksValidationHandler } from 'angular-oauth2-oidc-jwks';\n\nPlease note, that this dependency is not needed for the **code flow**,\nwhich is nowadays the **recommented** one for single page applications.\nThis also results in smaller bundle sizes.\n`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/getting-started.html":{"url":"additional-documentation/getting-started.html","title":"additional-page - Getting Started","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nGetting Started\nPlease find the Getting Started Guide in the README above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/preserving-state-(like-the-requested-url).html":{"url":"additional-documentation/preserving-state-(like-the-requested-url).html","title":"additional-page - Preserving State (like the Requested URL)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPreserving State (like the Requested URL)\nWhen calling initImplicitFlow, you can pass an optional state which could be the requested url:\nExample :this.oauthService.initImplicitFlow('http://www.myurl.com/x/y/z');After login succeeded, you can read this state:\nExample :this.oauthService.tryLogin({\n    onTokenReceived: (info) => {\n        console.debug('state', info.state);\n    }\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/refreshing-a-token.html":{"url":"additional-documentation/refreshing-a-token.html","title":"additional-page - Refreshing a Token","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing a Token using Code Flow (not Implicit Flow!)\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned OAuth 2.0 Security Best Current Practice document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get a refresh token.\nTo refresh your token, just call the refreshToken method:\nExample :this.oauthService.refreshToken();Automatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nExample :this.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/silent-refresh.html":{"url":"additional-documentation/silent-refresh.html","title":"additional-page - Silent Refresh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing when using Implicit Flow (Implicit Flow and Code Flow)\nNotes for Code Flow: You can also use this strategy for refreshing tokens when using code flow. However, please note, the strategy described within Token Refresh is far easier in this case.\nTo refresh your tokens when using implicit flow you can use a silent refresh. This is a well-known solution that compensates the fact that implicit flow does not allow for issuing a refresh token. It uses a hidden iframe to get another token from the auth server. When the user is there still logged in (by using a cookie) it will respond without user interaction and provide new tokens.\nTo use this approach, setup a redirect uri for the silent refresh.\nFor this, you can set the property silentRefreshRedirectUri in the config object:\nExample :// This api will come in the next version\n\nimport { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // URL of the SPA to redirect the user after silent refresh\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n\n  // defaults to true for implicit flow and false for code flow\n  // as for code code the default is using a refresh_token\n  // Also see docs section 'Token Refresh'\n  useSilentRefresh: true,\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}As an alternative, you can set the same property directly with the OAuthService:\nExample :this.oauthService.silentRefreshRedirectUri = window.location.origin + \"/silent-refresh.html\";Please keep in mind that this uri has to be configured at the auth-server too.\nThis file is loaded into the hidden iframe after getting new tokens. Its only task is to send the received tokens to the main application:\nExample :\n\n    \n        (window.opener || window.parent).postMessage(location.hash || ('#' + location.search), location.origin);\n    \n\nThis simple implementation within silent-refresh.html is sufficient in most cases. It takes care of the hash fragment as well as of the query string (property search). For edge cases you need to check if the received hash fragment is a token response. For this, please go with the following more advanced implementation:\nExample :\n    \n        \n            var checks = [/[\\?|&|#]code=/, /[\\?|&|#]error=/, /[\\?|&|#]token=/, /[\\?|&|#]id_token=/];\n\n            function isResponse(str) {\n                if (!str) return false;\n                for(var i=0; i\n    \nThe above example checks if the message in the URL (either hash or query string) is indeed a message returned with a response from an authentication provider and not an arbitrary value and then attempts to forward this message to a parent widow either by .parent (when this html is loaded in an iframe as a result of silent refresh) or by .opener (when the html is loaded into a popup during initial login) or finally using a storage event (as a fallback for complex cases, e.g. initial login in a popup with a cross-domain auth provider).\nPlease make sure that this file is copied to your output directory by your build task. When using the CLI you can define it as an asset for this. For this, you have to add the following line to the file .angular-cli.json:\nExample :\"assets\": [\n    [...],\n    \"silent-refresh.html\"\n],To perform a silent refresh, just call the following method:\nExample :this\n    .oauthService\n    .silentRefresh()\n    .then(info => console.debug('refresh ok', info))\n    .catch(err => console.error('refresh error', err));When there is an error in the iframe that prevents the communication with the main application, silentRefresh will give you a timeout. To configure the timespan for this, you can set the property silentRefreshTimeout (msec). The default value is 20.000 (20 seconds).\nAutomatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nExample :this.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/token-refresh.html":{"url":"additional-documentation/token-refresh.html","title":"additional-page - Token Refresh","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRefreshing a Token using Code Flow (not Implicit Flow!)\nWhen using code flow, you can get an refresh_token. While the original standard DOES NOT allow this for SPAs, the mentioned OAuth 2.0 Security Best Current Practice document proposes to ease this limitation. However, it specifies a list of requirements one should take care about before using refresh_tokens. Please make sure you respect those requirements.\nPlease also note, that you have to request the offline_access scope to get a refresh token.\nTo refresh your token, just call the refreshToken method:\nExample :this.oauthService.refreshToken();Automatically refreshing a token when/ before it expires (Code Flow and Implicit Flow)\nTo automatically refresh a token when/ some time before it expires, just call the following method after configuring the OAuthService:\nExample :this.oauthService.setupAutomaticSilentRefresh();By default, this event is fired after 75% of the token's life time is over. You can adjust this factor by setting the property timeoutFactor to a value between 0 and 1. For instance, 0.5 means, that the event is fired after half of the life time is over and 0.33 triggers the event after a third.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/working-with-httpinterceptors.html":{"url":"additional-documentation/working-with-httpinterceptors.html","title":"additional-page - Working with HttpInterceptors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInterceptors\nSince 3.1 the library uses a default HttpInterceptor that takes care about transmitting the access_token to the resource server and about error handling for security related errors (HTTP status codes 401 and 403) received from the resource server. To put in on, just set sendAccessToken to true and set allowedUrls to an array with prefixes for the respective urls. Use lower case for the prefixes:\nExample :OAuthModule.forRoot({\n    resourceServer: {\n        allowedUrls: ['http://www.angular.at/api'],\n        sendAccessToken: true\n    }\n})You can provide an error handler for the urls white listed here by provding a service for the token OAuthResourceServerErrorHandler.\nTo implement such a service, implement the abstract class OAuthResourceServerErrorHandler. The following example shows the default implemantion that just passes the cought error through:\nExample :export class OAuthNoopResourceServerErrorHandler implements OAuthResourceServerErrorHandler {\n    \n    handleError(err: HttpResponse): Observable {\n        return _throw(err);\n    }\n\n}Custom Interceptors\nFeel free to write custom interceptors but keep in mind that injecting the OAuthService into them creates a circular dependency which leads to an error. The easiest way to prevent this is to use the OAuthStorage directly which also provides the access_token:\nExample :import { Injectable, Inject, Optional } from '@angular/core';\nimport { OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\nimport { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport {Observable} from 'rxjs/Observable';\nimport { OAuthResourceServerErrorHandler } from \"./resource-server-error-handler\";\nimport { OAuthModuleConfig } from \"../oauth-module.config\";\n\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class DefaultOAuthInterceptor implements HttpInterceptor {\n    \n    constructor(\n        private authStorage: OAuthStorage,\n        private errorHandler: OAuthResourceServerErrorHandler,\n        @Optional() private moduleConfig: OAuthModuleConfig\n    ) {\n    }\n\n    private checkUrl(url: string): boolean {\n        let found = this.moduleConfig.resourceServer.allowedUrls.find(u => url.startsWith(u));\n        return !!found;\n    }\n\n    public intercept(req: HttpRequest, next: HttpHandler): Observable> {\n        \n        let url = req.url.toLowerCase();\n\n        if (!this.moduleConfig) return next.handle(req);\n        if (!this.moduleConfig.resourceServer) return next.handle(req);\n        if (!this.moduleConfig.resourceServer.allowedUrls) return next.handle(req);\n        if (!this.checkUrl(url)) return next.handle(req);\n\n        let sendAccessToken = this.moduleConfig.resourceServer.sendAccessToken;\n        \n        if (sendAccessToken) {\n\n            let token = this.authStorage.getItem('access_token');\n            let header = 'Bearer ' + token;\n\n            let headers = req.headers\n                                .set('Authorization', header);\n\n            req = req.clone({ headers });\n        }\n\n        return next.handle(req).catch(err => this.errorHandler.handleError(err));\n\n    }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/callback-after-login.html":{"url":"additional-documentation/callback-after-login.html","title":"additional-page - Callback after login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCallback after login\nThere is a callback onTokenReceived, that is called after a successful login. In this case, the lib received the access_token as\nwell as the id_token, if it was requested. If there is an id_token, the lib validated it.\nExample :this.oauthService.tryLogin({\n    onTokenReceived: context => {\n        //\n        // Output just for purpose of demonstration\n        // Don't try this at home ... ;-)\n        //\n        console.debug(\"logged in\");\n        console.debug(context);\n    }\n});\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/popup-based-login.html":{"url":"additional-documentation/popup-based-login.html","title":"additional-page - Popup-based Login","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLogging in With a Popup\nThanks to a great community contribution, this library also supports logging the user in via a popup. For this, you need to do two things:\n\nUse initLoginFlowInPopup instead of initLoginFlow.\nCreate and configure a silent-refresh.html as described here *.\n\n* Please note this does not mean that you have to use silent refresh too.\nAlso, for your silent-refresh.html, make sure you are also targeting\nwindow.opener and fall back to window.parent:\nPlease note: IE sets opener to null under specific security settings. This prevents making this work.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/custom-query-parameters.html":{"url":"additional-documentation/custom-query-parameters.html","title":"additional-page - Custom Query Parameters","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Query Parameters\nYou can set the property customQueryParams to a hash with custom parameter that are transmitted when starting implicit flow.\nExample :this.oauthService.customQueryParams = {\n    'tenant': '4711',\n    'otherParam': 'someValue'\n};\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/events.html":{"url":"additional-documentation/events.html","title":"additional-page - Events","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEvents\nThe library informs you about its tasks and state using events.\nThis is an Observable which publishes a stream of events as they occur in the service.\nYou can log these events to the console for debugging information.\nA short snippet you could use:\nExample :this.oauthService.events.subscribe(e => console.log(e));Or a longer, more extensive version that logs them at different levels:\nExample :import { OAuthErrorEvent } from 'angular-oauth2-oidc';\n\n// ...\n\nthis.authService.events.subscribe(event => {\n  if (event instanceof OAuthErrorEvent) {\n    console.error(event);\n  } else {\n    console.warn(event);\n  }\n});Here's a list of the main events you might encounter:\n\ndiscovery_document_loaded is published whenever the service has retrieved the openid configuration and successfully saved the jwks information\ninvalid_nonce_in_state is published during tryLogin, when an access token has been requested and the state check was not disabled via the options, only in case the nonce is not as expected (see OAuth2 spec for more details about the nonce)\nuser_profile_loaded is published just before loadUserProfile() successfully resolves\ntoken_received is published whenever the requested token(s) have been successfully received and stored\nsilently_refreshed is published when the silent refresh timer has gone off and the library has also successfully refreshed the tokens (only applicable to Implicit Flow)\nsilent_refresh_timeout is published if the silent refresh timer has gone off but it takes too long to successfully refresh\nsession_error will only be published if the session checks encounter an error\n\nFor a full list of available events see the string based enum in the file events.ts.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/routing-with-the-hashstrategy.html":{"url":"additional-documentation/routing-with-the-hashstrategy.html","title":"additional-page - Routing with the HashStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nRouting with the HashStrategy\nIf you are leveraging the LocationStrategy which the Router is using by default, you can skip this section.\nWhen using the HashStrategy for Routing, the Router will override the received hash fragment with the tokens when it performs it initial navigation. This prevents the library from reading them. To avoid this, disable initial navigation when setting up the routes for your root module:\nExample :export let AppRouterModule = RouterModule.forRoot(APP_ROUTES, {\n    useHash: true,\n    initialNavigation: false\n});After tryLogin did its job, you can manually perform the initial navigation:\nExample :this.oauthService.tryLogin().then(_ => {\n    this.router.navigate(['/']);\n})Another solution is the use a redirect uri that already contains the initial route. In this case the router will not override it. An example for such a redirect uri is\nExample :    http://localhost:8080/#/home\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adapt-id_token-validation.html":{"url":"additional-documentation/adapt-id_token-validation.html","title":"additional-page - Adapt id_token Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure/ Adapt id_token Validation\nYou can hook in an implementation of the interface TokenValidator to validate the signature of the received id_token and its at_hash property. This packages provides two implementations:\n\nJwksValidationHandler\nNullValidationHandler\n\nThe former one validates the signature against public keys received via the discovery document (property jwks) and the later one skips the validation on client side.\nExample :import { JwksValidationHandler } from 'angular-oauth2-oidc';\n\n[...]\n\nthis.oauthService.tokenValidationHandler = new JwksValidationHandler();In cases where no ValidationHandler is defined, you receive a warning on the console. This means that the library wants you to explicitly decide on this.\nDependency Injection\nYou can also setup a ValidationHandler by leveraging dependency injection:\nExample :[...]\nproviders: [\n    { provide: ValidationHandler, useClass: JwksValidationHandler },\n],\n[...]\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/session-checks.html":{"url":"additional-documentation/session-checks.html","title":"additional-page - Session Checks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSession Checks\nBeginning with version 2.1, you can receive a notification when the user signs out with the identity provider.\nThis is implemented as defined by the OpenID Connect Session Management 1.0 spec.\nWhen this option is activated, the library also automatically ends your local session. This means, the current tokens\nare deleted by calling logOut. In addition to that, the library sends a session_terminated event, you can register\nfor to perform a custom action.\nPlease note that this option can only be used when also the identity provider in question supports it.\nConfiguration\nTo activate the session checks that leads to the mentioned notifications, set the configuration property\nsessionChecksEnabled:\nExample :import { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n  redirectUri: window.location.origin + '/index.html',\n  silentRefreshRedirectUri: window.location.origin + '/silent-refresh.html',\n  clientId: 'spa-demo',\n  scope: 'openid profile email voucher',\n\n  // Activate Session Checks:\n  sessionChecksEnabled: true,\n}Refresh\nPlease note that the lib performs a token refresh when the session changes to get the newest information about the current session. When using implicit flow, this means you have to configure silent refresh; when using code flow you either need silent refresh or a refresh token.\nIf using refresh tokens, your Auth Server needs to bind them to the current session's lifetime. Unfortunately, the used version of Identity Server 4, shown in the docs and in the example applications, does not support this at the moment.\nEvents\nTo get notified, you can hook up for the event session_terminated:\nExample :this.oauthService.events.pipe(filter(e => e.type === 'session_terminated')).subscribe(e => {\n  console.debug('Your session has been terminated!');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/server-side-rendering.html":{"url":"additional-documentation/server-side-rendering.html","title":"additional-page - Server Side Rendering","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nServer Side Rendering\nThere is a great blog post that shows how this library can be used together with server side rendering:\nExample :https://medium.com/lankapura/angular-server-side-rendering-for-authenticated-users-a021627fd9d3The sample for this can be found here:\nExample :https://github.com/lankaapura/Angular-AspNetCore-Idsvr\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html":{"url":"additional-documentation/configure-library-for-implicit-flow-without-discovery-document.html","title":"additional-page - Configure Library for Implicit Flow without discovery document","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure Library for Implicit Flow (without discovery document)\nWhen you don't have a discovery document, you have to configure more properties manually:\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\nExample :@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.loginUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/authorize\"; //Id-Provider?\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // To also enable single-sign-out set the url for your auth-server's logout-endpoint here\n        this.oauthService.logoutUrl = \"https://steyer-identity-server.azurewebsites.net/identity/connect/endsession\";\n\n        // This method just tries to parse the token(s) within the url when\n        // the auth-server redirects the user back to the web-app\n        // It doesn't send the user the the login page\n        this.oauthService.tryLogin();\n\n\n  }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html":{"url":"additional-documentation/using-an-id-provider-that-fails-discovery-document-validation.html","title":"additional-page - Using an ID Provider that Fails Discovery Document Validation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDiscovery Document Validation\nThe configuration parameter strictDiscoveryDocumentValidation is set true by default. This ensures that all of the endpoints provided via the ID Provider discovery document share the same base URL as the issuer parameter.\nSeveral ID Providers (i.e. Google OpenID, WS02-IS, PingOne) provide different domains or path params for various endpoints in the discovery document. These providers may still adhere to the OpenID Connect Provider Configuration specification, but will fail to pass this library's discovery document validation.\nTo use this library with an ID Provider that does not maintain a consistent base URL across the discovery document endpoints, set the strictDiscoveryDocumentValidation parameter to false in your configuration:\nExample :import { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n\n  // turn off validation that discovery document endpoints start with the issuer url defined above\n  strictDiscoveryDocumentValidation: false\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-systemjs.html":{"url":"additional-documentation/using-systemjs.html","title":"additional-page - Using SystemJS","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing SystemJS\nThanks to Kevin BEAUGRAND for adding this information regarding SystemJS.\nExample :System.config({\n...\n meta: {\n            'angular-oauth2-oidc': {\n                deps: ['jsrsasign']\n            },\n        }\n...\n});Also thanks to ppanthony for sharing his SystemJS config:\nExample :'angular-oauth2-oidc': {\n    main: 'angular-oauth2-oidc.umd.js',\n    format: 'cjs',\n    defaultExtension: 'js',\n    map: {\n        'jsrsasign': '/node_modules/jsrsasign/lib/jsrsasign',\n    },\n    meta: {\n        'angular-oauth2-oidc': {\n            deps: ['require','jsrsasign']\n        },\n    }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-implicit-flow.html":{"url":"additional-documentation/using-implicit-flow.html","title":"additional-page - Using Implicit Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfiguring for Implicit Flow\nThis section shows how to implement login leveraging implicit flow. This is the OAuth2/OIDC flow which was originally intended for Single Page Application. \nMeanwhile using Code Flow instead is a best practice and with OAuth 2.1 implicit flow will be deprecated*.\nExample :import { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: 'https://steyer-identity-server.azurewebsites.net/identity',\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + '/index.html',\n\n  // The SPA's id. The SPA is registered with this id at the auth-server\n  clientId: 'spa-demo',\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: 'openid profile email voucher',\n}Configure the OAuthService with this config object when the application starts up:\nExample :import { OAuthService } from 'angular-oauth2-oidc';\nimport { JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './auth.config';\nimport { Component } from '@angular/core';\n\n@Component({\n    selector: 'flight-app',\n    templateUrl: './app.component.html'\n})\nexport class AppComponent {\n\n    constructor(private oauthService: OAuthService) {\n      this.configure();\n    }\n\n    private configure() {\n      this.oauthService.configure(authConfig);\n      this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n      this.oauthService.loadDiscoveryDocumentAndTryLogin();\n    }\n}Implementing a Login Form\nAfter you've configured the library, you just have to call initImplicitFlow to login using OAuth2/ OIDC.\nExample :import { Component } from '@angular/core';\nimport { OAuthService } from 'angular-oauth2-oidc';\n\n@Component({\n    templateUrl: \"app/home.html\"\n})\nexport class HomeComponent {\n\n    constructor(private oauthService: OAuthService) {\n    }\n\n    public login() {\n        this.oauthService.initLoginFlow();\n    }\n\n    public logoff() {\n        this.oauthService.logOut();\n    }\n\n    public get name() {\n        let claims = this.oauthService.getIdentityClaims();\n        if (!claims) return null;\n        return claims.given_name;\n    }\n\n}The following snippet contains the template for the login page:\nExample :\n    Hallo\n\n\n    Hallo, {{name}}\n\n\n\n    Login\n\n\n    Logout\n\n\n\n    Username/Passwort zum Testen: max/geheim\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/using-password-flow.html":{"url":"additional-documentation/using-password-flow.html","title":"additional-page - Using Password Flow","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Password-Flow\nThis section shows how to use the password flow, which demands the user to directly enter his or her password into the client.\nPlease note that from an OAuth2/OIDC perspective, the code flow is better suited for logging into a SPA and the flow described here should only be used,\nwhen a) there is a strong trust relations ship between the client and the auth server and when b) other flows are not possible.\nPlease also note that with OAuth 2.1, password flow will be deprecated. \nConfigure Library for Password Flow (using discovery document)\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease not, that this configuration is quite similar to the one for the implcit flow.\nExample :@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        // The auth-server used here only returns a refresh token (see below), when the scope offline_access is requested\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Use setStorage to use sessionStorage or another implementation of the TS-type Storage\n        // instead of localStorage\n        this.oauthService.setStorage(sessionStorage);\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n        // Load Discovery Document and then try to login the user\n        let url = 'https://steyer-identity-server.azurewebsites.net/identity/.well-known/openid-configuration';\n        this.oauthService.loadDiscoveryDocument(url).then(() => {\n            // Do what ever you want here\n        });\n\n  }\n\n}Configure Library for Password Flow (without discovery document)\nIn cases where you don't have an OIDC based discovery document you have to configure some more properties manually:\nExample :@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // Login-Url\n        this.oauthService.tokenEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/token\";\n\n        // Url with user info endpoint\n        // This endpont is described by OIDC and provides data about the loggin user\n        // This sample uses it, because we don't get an id_token when we use the password flow\n        // If you don't want this lib to fetch data about the user (e. g. id, name, email) you can skip this line\n        this.oauthService.userinfoEndpoint = \"https://steyer-identity-server.azurewebsites.net/identity/connect/userinfo\";\n\n        // The SPA's id. Register SPA with this id at the auth-server\n        this.oauthService.clientId = \"demo-resource-owner\";\n\n        // set the scope for the permissions the client should request\n        this.oauthService.scope = \"openid profile email voucher offline_access\";\n\n        // Set a dummy secret\n        // Please note that the auth-server used here demand the client to transmit a client secret, although\n        // the standard explicitly cites that the password flow can also be used without it. Using a client secret\n        // does not make sense for a SPA that runs in the browser. That's why the property is called dummyClientSecret\n        // Using such a dummy secret is as safe as using no secret.\n        this.oauthService.dummyClientSecret = \"geheim\";\n\n  }\n\n}Fetching an Access Token by providing the current user's credentials\nExample :this.oauthService.fetchTokenUsingPasswordFlow('max', 'geheim').then((resp) => {\n\n      // Loading data about the user\n      return this.oauthService.loadUserProfile();\n\n}).then(() => {\n\n      // Using the loaded user data\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n\n})There is also a short form for fetching the token and loading the user profile:\nExample :this.oauthService.fetchTokenUsingPasswordFlowAndLoadUserProfile('max', 'geheim').then(() => {\n      let claims = this.oAuthService.getIdentityClaims();\n      if (claims) console.debug('given_name', claims.given_name);\n});Refreshing the current Access Token\nUsing the password flow you MIGHT get a refresh token (which isn't the case with the implicit flow by design!). You can use this token later to get a new access token, e. g. after it expired.\nExample :this.oauthService.refreshToken().then(() => {\n          console.debug('ok');\n})\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/configure-custom-oauthstorage.html":{"url":"additional-documentation/configure-custom-oauthstorage.html","title":"additional-page - Configure custom OAuthStorage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConfigure custom OAuthStorage\nThis library uses sessionStorage as the default storage provider. You can customize this by using localStorage or your own storage solution.\nUsing localStorage\nIf  you want to use localStorage instead of sessionStorage, you can add a provider to your AppModule. This works as follows:\nExample :import { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n// etc.\n\n// We need a factory, since localStorage is not available during AOT build time.\nexport function storageFactory() : OAuthStorage {\n  return localStorage\n}\n \n@NgModule({\n  imports: [ \n    // etc.\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    // etc.\n  ],\n  bootstrap: [\n    AppComponent \n  ],\n  providers: [\n    { provide: OAuthStorage, useFactory: storageFactory }\n  ]\n})\nexport class AppModule {\n}Custom storage solution\nIf you want to use a custom storage solution, you can extend the OAuthStorage class. Documentation can be found here. Then add it as a provider, just like in the localStorage example above.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/manually-skipping-login-form.html":{"url":"additional-documentation/manually-skipping-login-form.html","title":"additional-page - Manually Skipping Login Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nManually Skipping the Login Form\nFirst, try to use the loadDiscoveryDocumentAndLogin method instead of loadDiscoveryDocumentAndTryLogin. If you need more control, the following could be interesting for you.\nExample :this.oauthService\n    .loadDiscoveryDocumentAndTryLogin(/* { your LoginOptions }*/) // checks to see if the current url contains id token and access token\n    .(hasReceivedTokens => {\n        // this would have stored all the tokens needed\n        if (hasReceivedTokens) {\n            // carry on with your app\n            return Promise.resolve();\n\n            /* if you wish to do something when the user receives tokens from the identity server,\n             * use the event stream or the `onTokenReceived` callback in LoginOptions.\n             *\n             * this.oauthService.events(filter(e => e.type === 'token_received')).subscribe()\n             */\n        } else {\n            // may want to check if you were previously authenticated\n            if (this.oauthService.hasValidAccessToken() && this.oauthService.hasValidIdToken()) {\n                return Promise.resolve();\n            } else {\n                // to safe guard this from progressing through the calling promise,\n                // resolve it when it directed to the sign up page\n                return new Promise(resolve => {\n                    this.oauthService.initLoginFlow();\n                    // example if you are using explicit flow\n                    this.window.addEventListener('unload', () => {\n                        resolve(true);\n                    });\n                });\n            }\n        }\n    })\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/original-config-api.html":{"url":"additional-documentation/original-config-api.html","title":"additional-page - Original Config API","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOriginal Config API\n\nThis describes the older config API which is nowadays only supported for the sake of backwards compatibility. \n\nTo configure the library you just have to set some properties on startup. For this, the following sample uses the constructor of the AppComponent which is called before routing kicks in.\nPlease note that the following sample uses the original config API. For information about the new config API have a look to the project's README above.\nExample :@Component({ ... })\nexport class AppComponent {\n\n  constructor(private oauthService: OAuthService) {\n\n        // URL of the SPA to redirect the user to after login\n        this.oauthService.redirectUri = window.location.origin + \"/index.html\";\n\n        // The SPA's id. The SPA is registerd with this id at the auth-server\n        this.oauthService.clientId = \"spa-demo\";\n\n        // set the scope for the permissions the client should request\n        // The first three are defined by OIDC. The 4th is a usecase-specific one\n        this.oauthService.scope = \"openid profile email voucher\";\n\n        // The name of the auth-server that has to be mentioned within the token\n        this.oauthService.issuer = \"https://steyer-identity-server.azurewebsites.net/identity\";\n\n        // Load Discovery Document and then try to login the user\n        this.oauthService.loadDiscoveryDocument().then(() => {\n\n            // This method just tries to parse the token(s) within the url when\n            // the auth-server redirects the user back to the web-app\n            // It dosn't send the user the the login page\n            this.oauthService.tryLogin();\n\n        });\n\n  }\n\n}If you find yourself receiving errors related to discovery document validation, your ID Provider may have OAuth2 endpoints that do not use the issuer value as a consistent base URL. You can turn off strict validation of discovery document endpoints for this scenario. See Discovery Document Validation for details.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers.html":{"url":"additional-documentation/authorization-servers.html","title":"additional-page - Authorization Servers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSupport for Auth Servers\nAs this lib follows the OAuth2 and OpenId Connect specs, it should work with all compliant authorizations servers.\nHowever, experience shows that some authorizations servers come with some special behavior or settings. Hence, we must respect this when using this lib.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/using-identity-server.html":{"url":"additional-documentation/authorization-servers/using-identity-server.html","title":"additional-page - Using Identity Server","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Identity Server\nThis lib should work as shown in all examples here with Identity Server. \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/using-keycloak.html":{"url":"additional-documentation/authorization-servers/using-keycloak.html","title":"additional-page - Using Keycloak","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Keycloak\nThis lib should work as shown in all examples here with Keycloak. \n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/auth0.html":{"url":"additional-documentation/authorization-servers/auth0.html","title":"additional-page - Auth0","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing Auth0\nTo use this lib with Auth0, open your Auth0 account and configure:\n\nAn app \nAn API\n\nConfigure the app to use refresh token rotation and the grant types authorization code and refresh token. For grant types, see the advanced settings at the end of the settings page.\nConfiguration\nProvide a configuration like this:\nExample :import { AuthConfig } from 'angular-oauth2-oidc';\n\nexport const authConfig: AuthConfig = {\n\n    issuer: 'https://dev-g-61sdfs.eu.auth0.com/',\n\n    // Your app's client id:\n    clientId: 'opHt1Tkt9E9fVQTZPBVF1tHVhjrxvyVX',\n    redirectUri: window.location.origin,\n\n    scope: 'openid profile email offline_access',\n\n    responseType: 'code',\n\n    logoutUrl: 'https://dev-g-61sdfs.eu.auth0.com/v2/logout',\n\n    customQueryParams: {\n        // Your API's name\n        audience: 'http://www.angular.at/api'\n    },\n};Getting, Using, and Refreshing a Token\nThis should work as shown in the other examples in this documentation and in the readme file.\nLogging out\nAuth0's logout endpoint expects the parameters client_id and returnTo:\nExample :this.oauthService.revokeTokenAndLogout({\n  client_id: this.oauthService.clientId,\n  returnTo: this.oauthService.redirectUri\n}, true);The optional 2nd parameter set to true ignores CORS issues with the logout endpoint.\nExample\nPlease find a demo for using Auth0 with angular-oauth2-oidc here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/authorization-servers/azure-ad-(active-directory).html":{"url":"additional-documentation/authorization-servers/azure-ad-(active-directory).html","title":"additional-page - Azure AD (Active Directory)","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUsing with Azure AD\nFor using this library with Azure Active Directory (Azure AD), we recommend an additional look to this blog post and the example linked at the end of this blog post.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
